/**
 * (C) Multitude Corporation 2020
 * generated by Xtext 2.20.0
 * from BLESS.xtext, by BRL
 */
package com.multitude.aadl.bless.tests;

import com.multitude.aadl.bless.bLESS.BLESSGrammarRoots;
import org.junit.Test;
import org.junit.runner.RunWith;

/* @RunWith(_XtextRunner)
@InjectWith(_BLESSInjectorProvider) */@SuppressWarnings("all")
public class BLESSParsingTest {
  /* @Inject
   */private /* ParseHelper<BLESSGrammarRoots> */Object parseHelper;

  @Test
  public void emptyBlessSubclause() {
    throw new Error("Unresolved compilation problems:"
      + "\nThe field BLESSParsingTest.parseHelper refers to the missing type ParseHelper"
      + "\nparse cannot be resolved"
      + "\neResource cannot be resolved"
      + "\nerrors cannot be resolved"
      + "\njoin cannot be resolved"
      + "\nisEmpty cannot be resolved");
  }

  @Test
  public void justAssertClause() {
    throw new Error("Unresolved compilation problems:"
      + "\nThe field BLESSParsingTest.parseHelper refers to the missing type ParseHelper"
      + "\nparse cannot be resolved"
      + "\neResource cannot be resolved"
      + "\nerrors cannot be resolved"
      + "\njoin cannot be resolved"
      + "\nisEmpty cannot be resolved");
  }

  @Test
  public void justInvariantClause() {
    throw new Error("Unresolved compilation problems:"
      + "\nThe field BLESSParsingTest.parseHelper refers to the missing type ParseHelper"
      + "\nparse cannot be resolved"
      + "\neResource cannot be resolved"
      + "\nerrors cannot be resolved"
      + "\njoin cannot be resolved"
      + "\nisEmpty cannot be resolved");
  }

  @Test
  public void justVariablesSection() {
    throw new Error("Unresolved compilation problems:"
      + "\nThe field BLESSParsingTest.parseHelper refers to the missing type ParseHelper"
      + "\nparse cannot be resolved"
      + "\neResource cannot be resolved"
      + "\nerrors cannot be resolved"
      + "\njoin cannot be resolved"
      + "\nisEmpty cannot be resolved");
  }

  @Test
  public void justStatesSection() {
    throw new Error("Unresolved compilation problems:"
      + "\nThe field BLESSParsingTest.parseHelper refers to the missing type ParseHelper"
      + "\nparse cannot be resolved"
      + "\neResource cannot be resolved"
      + "\nerrors cannot be resolved"
      + "\njoin cannot be resolved"
      + "\nisEmpty cannot be resolved");
  }

  @Test
  public void justTransitions() {
    throw new Error("Unresolved compilation problems:"
      + "\nThe field BLESSParsingTest.parseHelper refers to the missing type ParseHelper"
      + "\nparse cannot be resolved"
      + "\neResource cannot be resolved"
      + "\nerrors cannot be resolved"
      + "\njoin cannot be resolved"
      + "\nisEmpty cannot be resolved");
  }

  @Test
  public void parseDispatchConditions() {
    throw new Error("Unresolved compilation problems:"
      + "\nThe field BLESSParsingTest.parseHelper refers to the missing type ParseHelper"
      + "\nparse cannot be resolved"
      + "\neResource cannot be resolved"
      + "\nerrors cannot be resolved"
      + "\njoin cannot be resolved"
      + "\nisEmpty cannot be resolved");
  }

  @Test
  public void parseMultipleSourceStates() {
    throw new Error("Unresolved compilation problems:"
      + "\nThe field BLESSParsingTest.parseHelper refers to the missing type ParseHelper"
      + "\nparse cannot be resolved"
      + "\neResource cannot be resolved"
      + "\nerrors cannot be resolved"
      + "\njoin cannot be resolved"
      + "\nisEmpty cannot be resolved");
  }

  @Test
  public void parseExecuteConditions() {
    throw new Error("Unresolved compilation problems:"
      + "\nThe field BLESSParsingTest.parseHelper refers to the missing type ParseHelper"
      + "\nparse cannot be resolved"
      + "\neResource cannot be resolved"
      + "\nerrors cannot be resolved"
      + "\njoin cannot be resolved"
      + "\nisEmpty cannot be resolved");
  }

  @Test
  public void parseBehaviorActions() {
    throw new Error("Unresolved compilation problems:"
      + "\nThe field BLESSParsingTest.parseHelper refers to the missing type ParseHelper"
      + "\nparse cannot be resolved"
      + "\neResource cannot be resolved"
      + "\nerrors cannot be resolved"
      + "\njoin cannot be resolved"
      + "\nisEmpty cannot be resolved");
  }
}
