/**
 * (C) Multitude Corporation 2023
 * generated by Xtext 2.27.0
 *  from BLESS.xtext, by BRL
 */
package com.multitude.aadl.bless.bLESS.impl;

import com.multitude.aadl.bless.bLESS.BLESSPackage;
import com.multitude.aadl.bless.bLESS.IndexExpressionOrRange;
import com.multitude.aadl.bless.bLESS.PartialName;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.osate.aadl2.impl.ElementImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Partial Name</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.multitude.aadl.bless.bLESS.impl.PartialNameImpl#getRecord_id <em>Record id</em>}</li>
 *   <li>{@link com.multitude.aadl.bless.bLESS.impl.PartialNameImpl#isLb <em>Lb</em>}</li>
 *   <li>{@link com.multitude.aadl.bless.bLESS.impl.PartialNameImpl#getArray_index <em>Array index</em>}</li>
 * </ul>
 *
 * @generated
 */
public class PartialNameImpl extends ElementImpl implements PartialName
{
  /**
   * The default value of the '{@link #getRecord_id() <em>Record id</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRecord_id()
   * @generated
   * @ordered
   */
  protected static final String RECORD_ID_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getRecord_id() <em>Record id</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRecord_id()
   * @generated
   * @ordered
   */
  protected String record_id = RECORD_ID_EDEFAULT;

  /**
   * The default value of the '{@link #isLb() <em>Lb</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isLb()
   * @generated
   * @ordered
   */
  protected static final boolean LB_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isLb() <em>Lb</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isLb()
   * @generated
   * @ordered
   */
  protected boolean lb = LB_EDEFAULT;

  /**
   * The cached value of the '{@link #getArray_index() <em>Array index</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getArray_index()
   * @generated
   * @ordered
   */
  protected EList<IndexExpressionOrRange> array_index;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected PartialNameImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return BLESSPackage.eINSTANCE.getPartialName();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getRecord_id()
  {
    return record_id;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setRecord_id(String newRecord_id)
  {
    String oldRecord_id = record_id;
    record_id = newRecord_id;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, BLESSPackage.PARTIAL_NAME__RECORD_ID, oldRecord_id, record_id));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isLb()
  {
    return lb;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setLb(boolean newLb)
  {
    boolean oldLb = lb;
    lb = newLb;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, BLESSPackage.PARTIAL_NAME__LB, oldLb, lb));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<IndexExpressionOrRange> getArray_index()
  {
    if (array_index == null)
    {
      array_index = new EObjectContainmentEList<IndexExpressionOrRange>(IndexExpressionOrRange.class, this, BLESSPackage.PARTIAL_NAME__ARRAY_INDEX);
    }
    return array_index;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case BLESSPackage.PARTIAL_NAME__ARRAY_INDEX:
        return ((InternalEList<?>)getArray_index()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case BLESSPackage.PARTIAL_NAME__RECORD_ID:
        return getRecord_id();
      case BLESSPackage.PARTIAL_NAME__LB:
        return isLb();
      case BLESSPackage.PARTIAL_NAME__ARRAY_INDEX:
        return getArray_index();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case BLESSPackage.PARTIAL_NAME__RECORD_ID:
        setRecord_id((String)newValue);
        return;
      case BLESSPackage.PARTIAL_NAME__LB:
        setLb((Boolean)newValue);
        return;
      case BLESSPackage.PARTIAL_NAME__ARRAY_INDEX:
        getArray_index().clear();
        getArray_index().addAll((Collection<? extends IndexExpressionOrRange>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case BLESSPackage.PARTIAL_NAME__RECORD_ID:
        setRecord_id(RECORD_ID_EDEFAULT);
        return;
      case BLESSPackage.PARTIAL_NAME__LB:
        setLb(LB_EDEFAULT);
        return;
      case BLESSPackage.PARTIAL_NAME__ARRAY_INDEX:
        getArray_index().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case BLESSPackage.PARTIAL_NAME__RECORD_ID:
        return RECORD_ID_EDEFAULT == null ? record_id != null : !RECORD_ID_EDEFAULT.equals(record_id);
      case BLESSPackage.PARTIAL_NAME__LB:
        return lb != LB_EDEFAULT;
      case BLESSPackage.PARTIAL_NAME__ARRAY_INDEX:
        return array_index != null && !array_index.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (record_id: ");
    result.append(record_id);
    result.append(", lb: ");
    result.append(lb);
    result.append(')');
    return result.toString();
  }

} //PartialNameImpl
