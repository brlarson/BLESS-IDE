/**
 * (C) Multitude Corporation 2023
 * generated by Xtext 2.30.0
 *  from BLESS.xtext, by BRL
 */
package com.multitude.aadl.bless.bLESS.impl;

import com.multitude.aadl.bless.bLESS.BLESSPackage;
import com.multitude.aadl.bless.bLESS.EnumerationValue;
import com.multitude.aadl.bless.bLESS.TypeDeclaration;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.osate.aadl2.impl.ElementImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Enumeration Value</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.multitude.aadl.bless.bLESS.impl.EnumerationValueImpl#getEnumeration_type <em>Enumeration type</em>}</li>
 *   <li>{@link com.multitude.aadl.bless.bLESS.impl.EnumerationValueImpl#getTick <em>Tick</em>}</li>
 *   <li>{@link com.multitude.aadl.bless.bLESS.impl.EnumerationValueImpl#getEnumeration_value <em>Enumeration value</em>}</li>
 * </ul>
 *
 * @generated
 */
public class EnumerationValueImpl extends ElementImpl implements EnumerationValue
{
  /**
   * The cached value of the '{@link #getEnumeration_type() <em>Enumeration type</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEnumeration_type()
   * @generated
   * @ordered
   */
  protected TypeDeclaration enumeration_type;

  /**
   * The default value of the '{@link #getTick() <em>Tick</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTick()
   * @generated
   * @ordered
   */
  protected static final String TICK_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getTick() <em>Tick</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTick()
   * @generated
   * @ordered
   */
  protected String tick = TICK_EDEFAULT;

  /**
   * The default value of the '{@link #getEnumeration_value() <em>Enumeration value</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEnumeration_value()
   * @generated
   * @ordered
   */
  protected static final String ENUMERATION_VALUE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getEnumeration_value() <em>Enumeration value</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEnumeration_value()
   * @generated
   * @ordered
   */
  protected String enumeration_value = ENUMERATION_VALUE_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected EnumerationValueImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return BLESSPackage.eINSTANCE.getEnumerationValue();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public TypeDeclaration getEnumeration_type()
  {
    if (enumeration_type != null && enumeration_type.eIsProxy())
    {
      InternalEObject oldEnumeration_type = (InternalEObject)enumeration_type;
      enumeration_type = (TypeDeclaration)eResolveProxy(oldEnumeration_type);
      if (enumeration_type != oldEnumeration_type)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, BLESSPackage.ENUMERATION_VALUE__ENUMERATION_TYPE, oldEnumeration_type, enumeration_type));
      }
    }
    return enumeration_type;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public TypeDeclaration basicGetEnumeration_type()
  {
    return enumeration_type;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setEnumeration_type(TypeDeclaration newEnumeration_type)
  {
    TypeDeclaration oldEnumeration_type = enumeration_type;
    enumeration_type = newEnumeration_type;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, BLESSPackage.ENUMERATION_VALUE__ENUMERATION_TYPE, oldEnumeration_type, enumeration_type));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getTick()
  {
    return tick;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setTick(String newTick)
  {
    String oldTick = tick;
    tick = newTick;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, BLESSPackage.ENUMERATION_VALUE__TICK, oldTick, tick));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getEnumeration_value()
  {
    return enumeration_value;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setEnumeration_value(String newEnumeration_value)
  {
    String oldEnumeration_value = enumeration_value;
    enumeration_value = newEnumeration_value;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, BLESSPackage.ENUMERATION_VALUE__ENUMERATION_VALUE, oldEnumeration_value, enumeration_value));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case BLESSPackage.ENUMERATION_VALUE__ENUMERATION_TYPE:
        if (resolve) return getEnumeration_type();
        return basicGetEnumeration_type();
      case BLESSPackage.ENUMERATION_VALUE__TICK:
        return getTick();
      case BLESSPackage.ENUMERATION_VALUE__ENUMERATION_VALUE:
        return getEnumeration_value();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case BLESSPackage.ENUMERATION_VALUE__ENUMERATION_TYPE:
        setEnumeration_type((TypeDeclaration)newValue);
        return;
      case BLESSPackage.ENUMERATION_VALUE__TICK:
        setTick((String)newValue);
        return;
      case BLESSPackage.ENUMERATION_VALUE__ENUMERATION_VALUE:
        setEnumeration_value((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case BLESSPackage.ENUMERATION_VALUE__ENUMERATION_TYPE:
        setEnumeration_type((TypeDeclaration)null);
        return;
      case BLESSPackage.ENUMERATION_VALUE__TICK:
        setTick(TICK_EDEFAULT);
        return;
      case BLESSPackage.ENUMERATION_VALUE__ENUMERATION_VALUE:
        setEnumeration_value(ENUMERATION_VALUE_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case BLESSPackage.ENUMERATION_VALUE__ENUMERATION_TYPE:
        return enumeration_type != null;
      case BLESSPackage.ENUMERATION_VALUE__TICK:
        return TICK_EDEFAULT == null ? tick != null : !TICK_EDEFAULT.equals(tick);
      case BLESSPackage.ENUMERATION_VALUE__ENUMERATION_VALUE:
        return ENUMERATION_VALUE_EDEFAULT == null ? enumeration_value != null : !ENUMERATION_VALUE_EDEFAULT.equals(enumeration_value);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (tick: ");
    result.append(tick);
    result.append(", enumeration_value: ");
    result.append(enumeration_value);
    result.append(')');
    return result.toString();
  }

} //EnumerationValueImpl
