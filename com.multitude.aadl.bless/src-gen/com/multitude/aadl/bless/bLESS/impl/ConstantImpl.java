/**
 * (C) Multitude Corporation 2023
 * generated by Xtext 2.30.0
 *  from BLESS.xtext, by BRL
 */
package com.multitude.aadl.bless.bLESS.impl;

import com.multitude.aadl.bless.bLESS.BLESSPackage;
import com.multitude.aadl.bless.bLESS.Constant;
import com.multitude.aadl.bless.bLESS.Quantity;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.osate.aadl2.impl.ElementImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Constant</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.multitude.aadl.bless.bLESS.impl.ConstantImpl#getNumeric_constant <em>Numeric constant</em>}</li>
 *   <li>{@link com.multitude.aadl.bless.bLESS.impl.ConstantImpl#getString_literal <em>String literal</em>}</li>
 *   <li>{@link com.multitude.aadl.bless.bLESS.impl.ConstantImpl#getT <em>T</em>}</li>
 *   <li>{@link com.multitude.aadl.bless.bLESS.impl.ConstantImpl#getF <em>F</em>}</li>
 *   <li>{@link com.multitude.aadl.bless.bLESS.impl.ConstantImpl#getNul <em>Nul</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ConstantImpl extends ElementImpl implements Constant
{
  /**
   * The cached value of the '{@link #getNumeric_constant() <em>Numeric constant</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNumeric_constant()
   * @generated
   * @ordered
   */
  protected Quantity numeric_constant;

  /**
   * The default value of the '{@link #getString_literal() <em>String literal</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getString_literal()
   * @generated
   * @ordered
   */
  protected static final String STRING_LITERAL_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getString_literal() <em>String literal</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getString_literal()
   * @generated
   * @ordered
   */
  protected String string_literal = STRING_LITERAL_EDEFAULT;

  /**
   * The default value of the '{@link #getT() <em>T</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getT()
   * @generated
   * @ordered
   */
  protected static final String T_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getT() <em>T</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getT()
   * @generated
   * @ordered
   */
  protected String t = T_EDEFAULT;

  /**
   * The default value of the '{@link #getF() <em>F</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getF()
   * @generated
   * @ordered
   */
  protected static final String F_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getF() <em>F</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getF()
   * @generated
   * @ordered
   */
  protected String f = F_EDEFAULT;

  /**
   * The default value of the '{@link #getNul() <em>Nul</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNul()
   * @generated
   * @ordered
   */
  protected static final String NUL_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getNul() <em>Nul</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNul()
   * @generated
   * @ordered
   */
  protected String nul = NUL_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ConstantImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return BLESSPackage.eINSTANCE.getConstant();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Quantity getNumeric_constant()
  {
    return numeric_constant;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetNumeric_constant(Quantity newNumeric_constant, NotificationChain msgs)
  {
    Quantity oldNumeric_constant = numeric_constant;
    numeric_constant = newNumeric_constant;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, BLESSPackage.CONSTANT__NUMERIC_CONSTANT, oldNumeric_constant, newNumeric_constant);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setNumeric_constant(Quantity newNumeric_constant)
  {
    if (newNumeric_constant != numeric_constant)
    {
      NotificationChain msgs = null;
      if (numeric_constant != null)
        msgs = ((InternalEObject)numeric_constant).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - BLESSPackage.CONSTANT__NUMERIC_CONSTANT, null, msgs);
      if (newNumeric_constant != null)
        msgs = ((InternalEObject)newNumeric_constant).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - BLESSPackage.CONSTANT__NUMERIC_CONSTANT, null, msgs);
      msgs = basicSetNumeric_constant(newNumeric_constant, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, BLESSPackage.CONSTANT__NUMERIC_CONSTANT, newNumeric_constant, newNumeric_constant));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getString_literal()
  {
    return string_literal;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setString_literal(String newString_literal)
  {
    String oldString_literal = string_literal;
    string_literal = newString_literal;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, BLESSPackage.CONSTANT__STRING_LITERAL, oldString_literal, string_literal));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getT()
  {
    return t;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setT(String newT)
  {
    String oldT = t;
    t = newT;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, BLESSPackage.CONSTANT__T, oldT, t));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getF()
  {
    return f;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setF(String newF)
  {
    String oldF = f;
    f = newF;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, BLESSPackage.CONSTANT__F, oldF, f));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getNul()
  {
    return nul;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setNul(String newNul)
  {
    String oldNul = nul;
    nul = newNul;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, BLESSPackage.CONSTANT__NUL, oldNul, nul));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case BLESSPackage.CONSTANT__NUMERIC_CONSTANT:
        return basicSetNumeric_constant(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case BLESSPackage.CONSTANT__NUMERIC_CONSTANT:
        return getNumeric_constant();
      case BLESSPackage.CONSTANT__STRING_LITERAL:
        return getString_literal();
      case BLESSPackage.CONSTANT__T:
        return getT();
      case BLESSPackage.CONSTANT__F:
        return getF();
      case BLESSPackage.CONSTANT__NUL:
        return getNul();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case BLESSPackage.CONSTANT__NUMERIC_CONSTANT:
        setNumeric_constant((Quantity)newValue);
        return;
      case BLESSPackage.CONSTANT__STRING_LITERAL:
        setString_literal((String)newValue);
        return;
      case BLESSPackage.CONSTANT__T:
        setT((String)newValue);
        return;
      case BLESSPackage.CONSTANT__F:
        setF((String)newValue);
        return;
      case BLESSPackage.CONSTANT__NUL:
        setNul((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case BLESSPackage.CONSTANT__NUMERIC_CONSTANT:
        setNumeric_constant((Quantity)null);
        return;
      case BLESSPackage.CONSTANT__STRING_LITERAL:
        setString_literal(STRING_LITERAL_EDEFAULT);
        return;
      case BLESSPackage.CONSTANT__T:
        setT(T_EDEFAULT);
        return;
      case BLESSPackage.CONSTANT__F:
        setF(F_EDEFAULT);
        return;
      case BLESSPackage.CONSTANT__NUL:
        setNul(NUL_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case BLESSPackage.CONSTANT__NUMERIC_CONSTANT:
        return numeric_constant != null;
      case BLESSPackage.CONSTANT__STRING_LITERAL:
        return STRING_LITERAL_EDEFAULT == null ? string_literal != null : !STRING_LITERAL_EDEFAULT.equals(string_literal);
      case BLESSPackage.CONSTANT__T:
        return T_EDEFAULT == null ? t != null : !T_EDEFAULT.equals(t);
      case BLESSPackage.CONSTANT__F:
        return F_EDEFAULT == null ? f != null : !F_EDEFAULT.equals(f);
      case BLESSPackage.CONSTANT__NUL:
        return NUL_EDEFAULT == null ? nul != null : !NUL_EDEFAULT.equals(nul);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (string_literal: ");
    result.append(string_literal);
    result.append(", t: ");
    result.append(t);
    result.append(", f: ");
    result.append(f);
    result.append(", nul: ");
    result.append(nul);
    result.append(')');
    return result.toString();
  }

} //ConstantImpl
