/**
 * (C) Multitude Corporation 2021
 * generated by Xtext 2.27.0
 *  from BLESS.xtext, by BRL
 */
package com.multitude.aadl.bless.bLESS;


/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Expression</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link com.multitude.aadl.bless.bLESS.Expression#getAll <em>All</em>}</li>
 *   <li>{@link com.multitude.aadl.bless.bLESS.Expression#getExists <em>Exists</em>}</li>
 *   <li>{@link com.multitude.aadl.bless.bLESS.Expression#getSum <em>Sum</em>}</li>
 *   <li>{@link com.multitude.aadl.bless.bLESS.Expression#getProduct <em>Product</em>}</li>
 *   <li>{@link com.multitude.aadl.bless.bLESS.Expression#getNumberof <em>Numberof</em>}</li>
 *   <li>{@link com.multitude.aadl.bless.bLESS.Expression#getL <em>L</em>}</li>
 *   <li>{@link com.multitude.aadl.bless.bLESS.Expression#getSym <em>Sym</em>}</li>
 *   <li>{@link com.multitude.aadl.bless.bLESS.Expression#getR <em>R</em>}</li>
 * </ul>
 *
 * @see com.multitude.aadl.bless.bLESS.BLESSPackage#getExpression()
 * @model
 * @generated
 */
public interface Expression extends Predicate, AssertionNumericExpression, BooleanExpression, NumericExpression
{
  /**
   * Returns the value of the '<em><b>All</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>All</em>' containment reference.
   * @see #setAll(UniversalQuantification)
   * @see com.multitude.aadl.bless.bLESS.BLESSPackage#getExpression_All()
   * @model containment="true"
   * @generated
   */
  UniversalQuantification getAll();

  /**
   * Sets the value of the '{@link com.multitude.aadl.bless.bLESS.Expression#getAll <em>All</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>All</em>' containment reference.
   * @see #getAll()
   * @generated
   */
  void setAll(UniversalQuantification value);

  /**
   * Returns the value of the '<em><b>Exists</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Exists</em>' containment reference.
   * @see #setExists(ExistentialQuantification)
   * @see com.multitude.aadl.bless.bLESS.BLESSPackage#getExpression_Exists()
   * @model containment="true"
   * @generated
   */
  ExistentialQuantification getExists();

  /**
   * Sets the value of the '{@link com.multitude.aadl.bless.bLESS.Expression#getExists <em>Exists</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Exists</em>' containment reference.
   * @see #getExists()
   * @generated
   */
  void setExists(ExistentialQuantification value);

  /**
   * Returns the value of the '<em><b>Sum</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Sum</em>' containment reference.
   * @see #setSum(SumQuantification)
   * @see com.multitude.aadl.bless.bLESS.BLESSPackage#getExpression_Sum()
   * @model containment="true"
   * @generated
   */
  SumQuantification getSum();

  /**
   * Sets the value of the '{@link com.multitude.aadl.bless.bLESS.Expression#getSum <em>Sum</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Sum</em>' containment reference.
   * @see #getSum()
   * @generated
   */
  void setSum(SumQuantification value);

  /**
   * Returns the value of the '<em><b>Product</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Product</em>' containment reference.
   * @see #setProduct(ProductQuantification)
   * @see com.multitude.aadl.bless.bLESS.BLESSPackage#getExpression_Product()
   * @model containment="true"
   * @generated
   */
  ProductQuantification getProduct();

  /**
   * Sets the value of the '{@link com.multitude.aadl.bless.bLESS.Expression#getProduct <em>Product</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Product</em>' containment reference.
   * @see #getProduct()
   * @generated
   */
  void setProduct(ProductQuantification value);

  /**
   * Returns the value of the '<em><b>Numberof</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Numberof</em>' containment reference.
   * @see #setNumberof(CountingQuantification)
   * @see com.multitude.aadl.bless.bLESS.BLESSPackage#getExpression_Numberof()
   * @model containment="true"
   * @generated
   */
  CountingQuantification getNumberof();

  /**
   * Sets the value of the '{@link com.multitude.aadl.bless.bLESS.Expression#getNumberof <em>Numberof</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Numberof</em>' containment reference.
   * @see #getNumberof()
   * @generated
   */
  void setNumberof(CountingQuantification value);

  /**
   * Returns the value of the '<em><b>L</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>L</em>' containment reference.
   * @see #setL(Disjunction)
   * @see com.multitude.aadl.bless.bLESS.BLESSPackage#getExpression_L()
   * @model containment="true"
   * @generated
   */
  Disjunction getL();

  /**
   * Sets the value of the '{@link com.multitude.aadl.bless.bLESS.Expression#getL <em>L</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>L</em>' containment reference.
   * @see #getL()
   * @generated
   */
  void setL(Disjunction value);

  /**
   * Returns the value of the '<em><b>Sym</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Sym</em>' attribute.
   * @see #setSym(String)
   * @see com.multitude.aadl.bless.bLESS.BLESSPackage#getExpression_Sym()
   * @model
   * @generated
   */
  String getSym();

  /**
   * Sets the value of the '{@link com.multitude.aadl.bless.bLESS.Expression#getSym <em>Sym</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Sym</em>' attribute.
   * @see #getSym()
   * @generated
   */
  void setSym(String value);

  /**
   * Returns the value of the '<em><b>R</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>R</em>' containment reference.
   * @see #setR(Disjunction)
   * @see com.multitude.aadl.bless.bLESS.BLESSPackage#getExpression_R()
   * @model containment="true"
   * @generated
   */
  Disjunction getR();

  /**
   * Sets the value of the '{@link com.multitude.aadl.bless.bLESS.Expression#getR <em>R</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>R</em>' containment reference.
   * @see #getR()
   * @generated
   */
  void setR(Disjunction value);

} // Expression
