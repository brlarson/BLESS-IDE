/*
 * (C) Multitude Corporation 2020
 * generated by Xtext 2.20.0
 from BLESS.xtext, by BRL 
 */
package com.multitude.aadl.bless

import com.google.inject.Binder
import com.google.inject.Module
import com.google.inject.name.Names
import com.multitude.aadl.bless.linking.MyBlessLinkingService
import com.multitude.aadl.bless.naming.BlessQualifiedNameProvider
import com.multitude.aadl.bless.scoping.BlessGlobalScopeProvider
import com.multitude.aadl.bless.scoping.BlessImportedNamespaceAwareLocalScopeProvider
import com.multitude.aadl.bless.scoping.BlessIndex
import com.multitude.aadl.bless.validation.BlessNamesAreUniqueValidationHelper
import org.eclipse.xtext.linking.ILinkingService
import org.eclipse.xtext.naming.IQualifiedNameProvider
import org.eclipse.xtext.scoping.IGlobalScopeProvider
import org.eclipse.xtext.scoping.IScopeProvider
import org.eclipse.xtext.scoping.impl.AbstractDeclarativeScopeProvider
import org.eclipse.xtext.service.SingletonBinding
import org.eclipse.xtext.ui.resource.IResourceSetProvider
import org.eclipse.xtext.ui.resource.SimpleResourceSetProvider
import org.eclipse.xtext.validation.INamesAreUniqueValidationHelper

class BLESSRuntimeModule extends AbstractBLESSRuntimeModule implements Module {
		
	 
	override Class<? extends IGlobalScopeProvider> bindIGlobalScopeProvider() {
		return typeof(BlessGlobalScopeProvider)
	}

	override Class<? extends IQualifiedNameProvider> bindIQualifiedNameProvider() {
		return typeof(BlessQualifiedNameProvider);
	}

  def  Class<? extends IResourceSetProvider> bindIResourceSetProvider() {
    return typeof(SimpleResourceSetProvider);
  }

  def Class<? extends INamesAreUniqueValidationHelper> bindINamesAreUniqueValidationHelper() {
		return typeof(BlessNamesAreUniqueValidationHelper);
	}
	
	override Class<? extends ILinkingService> bindILinkingService()
	  {
	  return typeof(MyBlessLinkingService)
	  }


@SingletonBinding(eager=true)
  def Class<? extends BlessIndex> bindBlessIndex() {
    return typeof(BlessIndex);
  }

  override void configureIScopeProviderDelegate(Binder binder) {
    binder.bind(IScopeProvider).annotatedWith(Names.named(AbstractDeclarativeScopeProvider.NAMED_DELEGATE)).to(BlessImportedNamespaceAwareLocalScopeProvider);
  }
	  
}
