/**
 * (C) Multitude Corporation 2020
 * generated by Xtext 2.20.0
 * from BLESS.xtext, by BRL
 */
package com.multitude.aadl.bless;

import com.google.inject.Binder;
import com.google.inject.name.Names;
import com.multitude.aadl.bless.linking.MyBlessLinkingService;
import com.multitude.aadl.bless.naming.BlessQualifiedNameProvider;
import com.multitude.aadl.bless.scoping.BlessGlobalScopeProvider;
import com.multitude.aadl.bless.scoping.BlessImportedNamespaceAwareLocalScopeProvider;
import com.multitude.aadl.bless.scoping.BlessIndex;
import com.multitude.aadl.bless.validation.BlessNamesAreUniqueValidationHelper;
import org.eclipse.xtext.linking.ILinkingService;
import org.eclipse.xtext.naming.IQualifiedNameProvider;
import org.eclipse.xtext.scoping.IGlobalScopeProvider;
import org.eclipse.xtext.scoping.IScopeProvider;
import org.eclipse.xtext.scoping.impl.AbstractDeclarativeScopeProvider;
import org.eclipse.xtext.service.SingletonBinding;
import org.eclipse.xtext.ui.resource.IResourceSetProvider;
import org.eclipse.xtext.ui.resource.SimpleResourceSetProvider;
import org.eclipse.xtext.validation.INamesAreUniqueValidationHelper;

@SuppressWarnings("all")
public class BLESSRuntimeModule extends AbstractBLESSRuntimeModule implements com.google.inject.Module {
  @Override
  public Class<? extends IGlobalScopeProvider> bindIGlobalScopeProvider() {
    return BlessGlobalScopeProvider.class;
  }

  @Override
  public Class<? extends IQualifiedNameProvider> bindIQualifiedNameProvider() {
    return BlessQualifiedNameProvider.class;
  }

  public Class<? extends IResourceSetProvider> bindIResourceSetProvider() {
    return SimpleResourceSetProvider.class;
  }

  public Class<? extends INamesAreUniqueValidationHelper> bindINamesAreUniqueValidationHelper() {
    return BlessNamesAreUniqueValidationHelper.class;
  }

  @Override
  public Class<? extends ILinkingService> bindILinkingService() {
    return MyBlessLinkingService.class;
  }

  @SingletonBinding(eager = true)
  public Class<? extends BlessIndex> bindBlessIndex() {
    return BlessIndex.class;
  }

  @Override
  public void configureIScopeProviderDelegate(final Binder binder) {
    binder.<IScopeProvider>bind(IScopeProvider.class).annotatedWith(Names.named(AbstractDeclarativeScopeProvider.NAMED_DELEGATE)).to(BlessImportedNamespaceAwareLocalScopeProvider.class);
  }
}
