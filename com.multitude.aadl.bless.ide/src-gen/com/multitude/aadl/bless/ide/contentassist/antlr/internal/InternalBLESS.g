/*
 * (C) Multitude Corporation 2023
 * generated by Xtext 2.30.0
 from BLESS.xtext, by BRL 
 */
grammar InternalBLESS;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package com.multitude.aadl.bless.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package com.multitude.aadl.bless.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import com.multitude.aadl.bless.services.BLESSGrammarAccess;

}
@parser::members {
	private BLESSGrammarAccess grammarAccess;

	public void setGrammarAccess(BLESSGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleBLESSGrammarRoots
entryRuleBLESSGrammarRoots
:
{ before(grammarAccess.getBLESSGrammarRootsRule()); }
	 ruleBLESSGrammarRoots
{ after(grammarAccess.getBLESSGrammarRootsRule()); } 
	 EOF 
;

// Rule BLESSGrammarRoots
ruleBLESSGrammarRoots 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBLESSGrammarRootsAccess().getAlternatives()); }
		(rule__BLESSGrammarRoots__Alternatives)
		{ after(grammarAccess.getBLESSGrammarRootsAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBLESSSubclause
entryRuleBLESSSubclause
:
{ before(grammarAccess.getBLESSSubclauseRule()); }
	 ruleBLESSSubclause
{ after(grammarAccess.getBLESSSubclauseRule()); } 
	 EOF 
;

// Rule BLESSSubclause
ruleBLESSSubclause 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBLESSSubclauseAccess().getGroup()); }
		(rule__BLESSSubclause__Group__0)
		{ after(grammarAccess.getBLESSSubclauseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnitLibrary
entryRuleUnitLibrary
:
{ before(grammarAccess.getUnitLibraryRule()); }
	 ruleUnitLibrary
{ after(grammarAccess.getUnitLibraryRule()); } 
	 EOF 
;

// Rule UnitLibrary
ruleUnitLibrary 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		(
			{ before(grammarAccess.getUnitLibraryAccess().getUnitDeclarationsAssignment()); }
			(rule__UnitLibrary__UnitDeclarationsAssignment)
			{ after(grammarAccess.getUnitLibraryAccess().getUnitDeclarationsAssignment()); }
		)
		(
			{ before(grammarAccess.getUnitLibraryAccess().getUnitDeclarationsAssignment()); }
			(rule__UnitLibrary__UnitDeclarationsAssignment)*
			{ after(grammarAccess.getUnitLibraryAccess().getUnitDeclarationsAssignment()); }
		)
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAssertionLibrary
entryRuleAssertionLibrary
:
{ before(grammarAccess.getAssertionLibraryRule()); }
	 ruleAssertionLibrary
{ after(grammarAccess.getAssertionLibraryRule()); } 
	 EOF 
;

// Rule AssertionLibrary
ruleAssertionLibrary 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssertionLibraryAccess().getGroup()); }
		(rule__AssertionLibrary__Group__0)
		{ after(grammarAccess.getAssertionLibraryAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExceptionLibrary
entryRuleExceptionLibrary
:
{ before(grammarAccess.getExceptionLibraryRule()); }
	 ruleExceptionLibrary
{ after(grammarAccess.getExceptionLibraryRule()); } 
	 EOF 
;

// Rule ExceptionLibrary
ruleExceptionLibrary 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExceptionLibraryAccess().getGroup()); }
		(rule__ExceptionLibrary__Group__0)
		{ after(grammarAccess.getExceptionLibraryAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleActionSubclause
entryRuleActionSubclause
:
{ before(grammarAccess.getActionSubclauseRule()); }
	 ruleActionSubclause
{ after(grammarAccess.getActionSubclauseRule()); } 
	 EOF 
;

// Rule ActionSubclause
ruleActionSubclause 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getActionSubclauseAccess().getGroup()); }
		(rule__ActionSubclause__Group__0)
		{ after(grammarAccess.getActionSubclauseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInvariantClause
entryRuleInvariantClause
:
{ before(grammarAccess.getInvariantClauseRule()); }
	 ruleInvariantClause
{ after(grammarAccess.getInvariantClauseRule()); } 
	 EOF 
;

// Rule InvariantClause
ruleInvariantClause 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInvariantClauseAccess().getGroup()); }
		(rule__InvariantClause__Group__0)
		{ after(grammarAccess.getInvariantClauseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariablesSection
entryRuleVariablesSection
:
{ before(grammarAccess.getVariablesSectionRule()); }
	 ruleVariablesSection
{ after(grammarAccess.getVariablesSectionRule()); } 
	 EOF 
;

// Rule VariablesSection
ruleVariablesSection 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariablesSectionAccess().getGroup()); }
		(rule__VariablesSection__Group__0)
		{ after(grammarAccess.getVariablesSectionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStatesSection
entryRuleStatesSection
:
{ before(grammarAccess.getStatesSectionRule()); }
	 ruleStatesSection
{ after(grammarAccess.getStatesSectionRule()); } 
	 EOF 
;

// Rule StatesSection
ruleStatesSection 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatesSectionAccess().getGroup()); }
		(rule__StatesSection__Group__0)
		{ after(grammarAccess.getStatesSectionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBehaviorState
entryRuleBehaviorState
:
{ before(grammarAccess.getBehaviorStateRule()); }
	 ruleBehaviorState
{ after(grammarAccess.getBehaviorStateRule()); } 
	 EOF 
;

// Rule BehaviorState
ruleBehaviorState 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBehaviorStateAccess().getGroup()); }
		(rule__BehaviorState__Group__0)
		{ after(grammarAccess.getBehaviorStateAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTransitions
entryRuleTransitions
:
{ before(grammarAccess.getTransitionsRule()); }
	 ruleTransitions
{ after(grammarAccess.getTransitionsRule()); } 
	 EOF 
;

// Rule Transitions
ruleTransitions 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTransitionsAccess().getGroup()); }
		(rule__Transitions__Group__0)
		{ after(grammarAccess.getTransitionsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBehaviorTransition
entryRuleBehaviorTransition
:
{ before(grammarAccess.getBehaviorTransitionRule()); }
	 ruleBehaviorTransition
{ after(grammarAccess.getBehaviorTransitionRule()); } 
	 EOF 
;

// Rule BehaviorTransition
ruleBehaviorTransition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBehaviorTransitionAccess().getGroup()); }
		(rule__BehaviorTransition__Group__0)
		{ after(grammarAccess.getBehaviorTransitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePriority
entryRulePriority
:
{ before(grammarAccess.getPriorityRule()); }
	 rulePriority
{ after(grammarAccess.getPriorityRule()); } 
	 EOF 
;

// Rule Priority
rulePriority 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPriorityAccess().getGroup()); }
		(rule__Priority__Group__0)
		{ after(grammarAccess.getPriorityAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDispatchCondition
entryRuleDispatchCondition
:
{ before(grammarAccess.getDispatchConditionRule()); }
	 ruleDispatchCondition
{ after(grammarAccess.getDispatchConditionRule()); } 
	 EOF 
;

// Rule DispatchCondition
ruleDispatchCondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDispatchConditionAccess().getGroup()); }
		(rule__DispatchCondition__Group__0)
		{ after(grammarAccess.getDispatchConditionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDispatchExpression
entryRuleDispatchExpression
:
{ before(grammarAccess.getDispatchExpressionRule()); }
	 ruleDispatchExpression
{ after(grammarAccess.getDispatchExpressionRule()); } 
	 EOF 
;

// Rule DispatchExpression
ruleDispatchExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDispatchExpressionAccess().getAlternatives()); }
		(rule__DispatchExpression__Alternatives)
		{ after(grammarAccess.getDispatchExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSubprogramAccessDispatch
entryRuleSubprogramAccessDispatch
:
{ before(grammarAccess.getSubprogramAccessDispatchRule()); }
	 ruleSubprogramAccessDispatch
{ after(grammarAccess.getSubprogramAccessDispatchRule()); } 
	 EOF 
;

// Rule SubprogramAccessDispatch
ruleSubprogramAccessDispatch 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSubprogramAccessDispatchAccess().getGroup()); }
		(rule__SubprogramAccessDispatch__Group__0)
		{ after(grammarAccess.getSubprogramAccessDispatchAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDispatchConjunction
entryRuleDispatchConjunction
:
{ before(grammarAccess.getDispatchConjunctionRule()); }
	 ruleDispatchConjunction
{ after(grammarAccess.getDispatchConjunctionRule()); } 
	 EOF 
;

// Rule DispatchConjunction
ruleDispatchConjunction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDispatchConjunctionAccess().getGroup()); }
		(rule__DispatchConjunction__Group__0)
		{ after(grammarAccess.getDispatchConjunctionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDispatchTrigger
entryRuleDispatchTrigger
:
{ before(grammarAccess.getDispatchTriggerRule()); }
	 ruleDispatchTrigger
{ after(grammarAccess.getDispatchTriggerRule()); } 
	 EOF 
;

// Rule DispatchTrigger
ruleDispatchTrigger 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDispatchTriggerAccess().getAlternatives()); }
		(rule__DispatchTrigger__Alternatives)
		{ after(grammarAccess.getDispatchTriggerAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePortName
entryRulePortName
:
{ before(grammarAccess.getPortNameRule()); }
	 rulePortName
{ after(grammarAccess.getPortNameRule()); } 
	 EOF 
;

// Rule PortName
rulePortName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPortNameAccess().getGroup()); }
		(rule__PortName__Group__0)
		{ after(grammarAccess.getPortNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExecuteCondition
entryRuleExecuteCondition
:
{ before(grammarAccess.getExecuteConditionRule()); }
	 ruleExecuteCondition
{ after(grammarAccess.getExecuteConditionRule()); } 
	 EOF 
;

// Rule ExecuteCondition
ruleExecuteCondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExecuteConditionAccess().getAlternatives()); }
		(rule__ExecuteCondition__Alternatives)
		{ after(grammarAccess.getExecuteConditionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOtherwise
entryRuleOtherwise
:
{ before(grammarAccess.getOtherwiseRule()); }
	 ruleOtherwise
{ after(grammarAccess.getOtherwiseRule()); } 
	 EOF 
;

// Rule Otherwise
ruleOtherwise 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOtherwiseAccess().getOAssignment()); }
		(rule__Otherwise__OAssignment)
		{ after(grammarAccess.getOtherwiseAccess().getOAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleModeCondition
entryRuleModeCondition
:
{ before(grammarAccess.getModeConditionRule()); }
	 ruleModeCondition
{ after(grammarAccess.getModeConditionRule()); } 
	 EOF 
;

// Rule ModeCondition
ruleModeCondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModeConditionAccess().getGroup()); }
		(rule__ModeCondition__Group__0)
		{ after(grammarAccess.getModeConditionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTriggerLogicalExpression
entryRuleTriggerLogicalExpression
:
{ before(grammarAccess.getTriggerLogicalExpressionRule()); }
	 ruleTriggerLogicalExpression
{ after(grammarAccess.getTriggerLogicalExpressionRule()); } 
	 EOF 
;

// Rule TriggerLogicalExpression
ruleTriggerLogicalExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTriggerLogicalExpressionAccess().getGroup()); }
		(rule__TriggerLogicalExpression__Group__0)
		{ after(grammarAccess.getTriggerLogicalExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEventTrigger
entryRuleEventTrigger
:
{ before(grammarAccess.getEventTriggerRule()); }
	 ruleEventTrigger
{ after(grammarAccess.getEventTriggerRule()); } 
	 EOF 
;

// Rule EventTrigger
ruleEventTrigger 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEventTriggerAccess().getAlternatives()); }
		(rule__EventTrigger__Alternatives)
		{ after(grammarAccess.getEventTriggerAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLogicalOperator
entryRuleLogicalOperator
:
{ before(grammarAccess.getLogicalOperatorRule()); }
	 ruleLogicalOperator
{ after(grammarAccess.getLogicalOperatorRule()); } 
	 EOF 
;

// Rule LogicalOperator
ruleLogicalOperator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLogicalOperatorAccess().getAlternatives()); }
		(rule__LogicalOperator__Alternatives)
		{ after(grammarAccess.getLogicalOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInternalCondition
entryRuleInternalCondition
:
{ before(grammarAccess.getInternalConditionRule()); }
	 ruleInternalCondition
{ after(grammarAccess.getInternalConditionRule()); } 
	 EOF 
;

// Rule InternalCondition
ruleInternalCondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInternalConditionAccess().getGroup()); }
		(rule__InternalCondition__Group__0)
		{ after(grammarAccess.getInternalConditionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAssertClause
entryRuleAssertClause
:
{ before(grammarAccess.getAssertClauseRule()); }
	 ruleAssertClause
{ after(grammarAccess.getAssertClauseRule()); } 
	 EOF 
;

// Rule AssertClause
ruleAssertClause 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssertClauseAccess().getGroup()); }
		(rule__AssertClause__Group__0)
		{ after(grammarAccess.getAssertClauseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExistentialLatticeQuantification
entryRuleExistentialLatticeQuantification
:
{ before(grammarAccess.getExistentialLatticeQuantificationRule()); }
	 ruleExistentialLatticeQuantification
{ after(grammarAccess.getExistentialLatticeQuantificationRule()); } 
	 EOF 
;

// Rule ExistentialLatticeQuantification
ruleExistentialLatticeQuantification 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExistentialLatticeQuantificationAccess().getGroup()); }
		(rule__ExistentialLatticeQuantification__Group__0)
		{ after(grammarAccess.getExistentialLatticeQuantificationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQuantifiedVariables
entryRuleQuantifiedVariables
:
{ before(grammarAccess.getQuantifiedVariablesRule()); }
	 ruleQuantifiedVariables
{ after(grammarAccess.getQuantifiedVariablesRule()); } 
	 EOF 
;

// Rule QuantifiedVariables
ruleQuantifiedVariables 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQuantifiedVariablesAccess().getGroup()); }
		(rule__QuantifiedVariables__Group__0)
		{ after(grammarAccess.getQuantifiedVariablesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUniversalLatticeQuantification
entryRuleUniversalLatticeQuantification
:
{ before(grammarAccess.getUniversalLatticeQuantificationRule()); }
	 ruleUniversalLatticeQuantification
{ after(grammarAccess.getUniversalLatticeQuantificationRule()); } 
	 EOF 
;

// Rule UniversalLatticeQuantification
ruleUniversalLatticeQuantification 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUniversalLatticeQuantificationAccess().getGroup()); }
		(rule__UniversalLatticeQuantification__Group__0)
		{ after(grammarAccess.getUniversalLatticeQuantificationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleForallVariable
entryRuleForallVariable
:
{ before(grammarAccess.getForallVariableRule()); }
	 ruleForallVariable
{ after(grammarAccess.getForallVariableRule()); } 
	 EOF 
;

// Rule ForallVariable
ruleForallVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getForallVariableAccess().getNameAssignment()); }
		(rule__ForallVariable__NameAssignment)
		{ after(grammarAccess.getForallVariableAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariableDeclaration
entryRuleVariableDeclaration
:
{ before(grammarAccess.getVariableDeclarationRule()); }
	 ruleVariableDeclaration
{ after(grammarAccess.getVariableDeclarationRule()); } 
	 EOF 
;

// Rule VariableDeclaration
ruleVariableDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getGroup()); }
		(rule__VariableDeclaration__Group__0)
		{ after(grammarAccess.getVariableDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunctionParameters
entryRuleFunctionParameters
:
{ before(grammarAccess.getFunctionParametersRule()); }
	 ruleFunctionParameters
{ after(grammarAccess.getFunctionParametersRule()); } 
	 EOF 
;

// Rule FunctionParameters
ruleFunctionParameters 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionParametersAccess().getGroup()); }
		(rule__FunctionParameters__Group__0)
		{ after(grammarAccess.getFunctionParametersAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFormalExpressionPair
entryRuleFormalExpressionPair
:
{ before(grammarAccess.getFormalExpressionPairRule()); }
	 ruleFormalExpressionPair
{ after(grammarAccess.getFormalExpressionPairRule()); } 
	 EOF 
;

// Rule FormalExpressionPair
ruleFormalExpressionPair 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFormalExpressionPairAccess().getGroup()); }
		(rule__FormalExpressionPair__Group__0)
		{ after(grammarAccess.getFormalExpressionPairAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBehaviorActions
entryRuleBehaviorActions
:
{ before(grammarAccess.getBehaviorActionsRule()); }
	 ruleBehaviorActions
{ after(grammarAccess.getBehaviorActionsRule()); } 
	 EOF 
;

// Rule BehaviorActions
ruleBehaviorActions 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBehaviorActionsAccess().getGroup()); }
		(rule__BehaviorActions__Group__0)
		{ after(grammarAccess.getBehaviorActionsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAssertedAction
entryRuleAssertedAction
:
{ before(grammarAccess.getAssertedActionRule()); }
	 ruleAssertedAction
{ after(grammarAccess.getAssertedActionRule()); } 
	 EOF 
;

// Rule AssertedAction
ruleAssertedAction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssertedActionAccess().getGroup()); }
		(rule__AssertedAction__Group__0)
		{ after(grammarAccess.getAssertedActionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAction
entryRuleAction
:
{ before(grammarAccess.getActionRule()); }
	 ruleAction
{ after(grammarAccess.getActionRule()); } 
	 EOF 
;

// Rule Action
ruleAction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getActionAccess().getAlternatives()); }
		(rule__Action__Alternatives)
		{ after(grammarAccess.getActionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBasicAction
entryRuleBasicAction
:
{ before(grammarAccess.getBasicActionRule()); }
	 ruleBasicAction
{ after(grammarAccess.getBasicActionRule()); } 
	 EOF 
;

// Rule BasicAction
ruleBasicAction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBasicActionAccess().getAlternatives()); }
		(rule__BasicAction__Alternatives)
		{ after(grammarAccess.getBasicActionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCombinableOperation
entryRuleCombinableOperation
:
{ before(grammarAccess.getCombinableOperationRule()); }
	 ruleCombinableOperation
{ after(grammarAccess.getCombinableOperationRule()); } 
	 EOF 
;

// Rule CombinableOperation
ruleCombinableOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCombinableOperationAccess().getAlternatives()); }
		(rule__CombinableOperation__Alternatives)
		{ after(grammarAccess.getCombinableOperationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCommunicationAction
entryRuleCommunicationAction
:
{ before(grammarAccess.getCommunicationActionRule()); }
	 ruleCommunicationAction
{ after(grammarAccess.getCommunicationActionRule()); } 
	 EOF 
;

// Rule CommunicationAction
ruleCommunicationAction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCommunicationActionAccess().getAlternatives()); }
		(rule__CommunicationAction__Alternatives)
		{ after(grammarAccess.getCommunicationActionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSubprogramCall
entryRuleSubprogramCall
:
{ before(grammarAccess.getSubprogramCallRule()); }
	 ruleSubprogramCall
{ after(grammarAccess.getSubprogramCallRule()); } 
	 EOF 
;

// Rule SubprogramCall
ruleSubprogramCall 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSubprogramCallAccess().getGroup()); }
		(rule__SubprogramCall__Group__0)
		{ after(grammarAccess.getSubprogramCallAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFormalActualList
entryRuleFormalActualList
:
{ before(grammarAccess.getFormalActualListRule()); }
	 ruleFormalActualList
{ after(grammarAccess.getFormalActualListRule()); } 
	 EOF 
;

// Rule FormalActualList
ruleFormalActualList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFormalActualListAccess().getGroup()); }
		(rule__FormalActualList__Group__0)
		{ after(grammarAccess.getFormalActualListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFormalActual
entryRuleFormalActual
:
{ before(grammarAccess.getFormalActualRule()); }
	 ruleFormalActual
{ after(grammarAccess.getFormalActualRule()); } 
	 EOF 
;

// Rule FormalActual
ruleFormalActual 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFormalActualAccess().getGroup()); }
		(rule__FormalActual__Group__0)
		{ after(grammarAccess.getFormalActualAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSubProgramParameter
entryRuleSubProgramParameter
:
{ before(grammarAccess.getSubProgramParameterRule()); }
	 ruleSubProgramParameter
{ after(grammarAccess.getSubProgramParameterRule()); } 
	 EOF 
;

// Rule SubProgramParameter
ruleSubProgramParameter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSubProgramParameterAccess().getAlternatives()); }
		(rule__SubProgramParameter__Alternatives)
		{ after(grammarAccess.getSubProgramParameterAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePortOutput
entryRulePortOutput
:
{ before(grammarAccess.getPortOutputRule()); }
	 rulePortOutput
{ after(grammarAccess.getPortOutputRule()); } 
	 EOF 
;

// Rule PortOutput
rulePortOutput 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPortOutputAccess().getGroup()); }
		(rule__PortOutput__Group__0)
		{ after(grammarAccess.getPortOutputAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePortInput
entryRulePortInput
:
{ before(grammarAccess.getPortInputRule()); }
	 rulePortInput
{ after(grammarAccess.getPortInputRule()); } 
	 EOF 
;

// Rule PortInput
rulePortInput 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPortInputAccess().getGroup()); }
		(rule__PortInput__Group__0)
		{ after(grammarAccess.getPortInputAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAssignment
entryRuleAssignment
:
{ before(grammarAccess.getAssignmentRule()); }
	 ruleAssignment
{ after(grammarAccess.getAssignmentRule()); } 
	 EOF 
;

// Rule Assignment
ruleAssignment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssignmentAccess().getGroup()); }
		(rule__Assignment__Group__0)
		{ after(grammarAccess.getAssignmentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNameTick
entryRuleNameTick
:
{ before(grammarAccess.getNameTickRule()); }
	 ruleNameTick
{ after(grammarAccess.getNameTickRule()); } 
	 EOF 
;

// Rule NameTick
ruleNameTick 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNameTickAccess().getGroup()); }
		(rule__NameTick__Group__0)
		{ after(grammarAccess.getNameTickAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionOrAny
entryRuleExpressionOrAny
:
{ before(grammarAccess.getExpressionOrAnyRule()); }
	 ruleExpressionOrAny
{ after(grammarAccess.getExpressionOrAnyRule()); } 
	 EOF 
;

// Rule ExpressionOrAny
ruleExpressionOrAny 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionOrAnyAccess().getAlternatives()); }
		(rule__ExpressionOrAny__Alternatives)
		{ after(grammarAccess.getExpressionOrAnyAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAny
entryRuleAny
:
{ before(grammarAccess.getAnyRule()); }
	 ruleAny
{ after(grammarAccess.getAnyRule()); } 
	 EOF 
;

// Rule Any
ruleAny 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAnyAccess().getAnyKeyword()); }
		'any'
		{ after(grammarAccess.getAnyAccess().getAnyKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSimultaneousAssignment
entryRuleSimultaneousAssignment
:
{ before(grammarAccess.getSimultaneousAssignmentRule()); }
	 ruleSimultaneousAssignment
{ after(grammarAccess.getSimultaneousAssignmentRule()); } 
	 EOF 
;

// Rule SimultaneousAssignment
ruleSimultaneousAssignment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSimultaneousAssignmentAccess().getGroup()); }
		(rule__SimultaneousAssignment__Group__0)
		{ after(grammarAccess.getSimultaneousAssignmentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAlternative
entryRuleAlternative
:
{ before(grammarAccess.getAlternativeRule()); }
	 ruleAlternative
{ after(grammarAccess.getAlternativeRule()); } 
	 EOF 
;

// Rule Alternative
ruleAlternative 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAlternativeAccess().getGroup()); }
		(rule__Alternative__Group__0)
		{ after(grammarAccess.getAlternativeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBLESSAlternative
entryRuleBLESSAlternative
:
{ before(grammarAccess.getBLESSAlternativeRule()); }
	 ruleBLESSAlternative
{ after(grammarAccess.getBLESSAlternativeRule()); } 
	 EOF 
;

// Rule BLESSAlternative
ruleBLESSAlternative 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBLESSAlternativeAccess().getGroup()); }
		(rule__BLESSAlternative__Group__0)
		{ after(grammarAccess.getBLESSAlternativeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGuardedAction
entryRuleGuardedAction
:
{ before(grammarAccess.getGuardedActionRule()); }
	 ruleGuardedAction
{ after(grammarAccess.getGuardedActionRule()); } 
	 EOF 
;

// Rule GuardedAction
ruleGuardedAction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGuardedActionAccess().getGroup()); }
		(rule__GuardedAction__Group__0)
		{ after(grammarAccess.getGuardedActionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWhileLoop
entryRuleWhileLoop
:
{ before(grammarAccess.getWhileLoopRule()); }
	 ruleWhileLoop
{ after(grammarAccess.getWhileLoopRule()); } 
	 EOF 
;

// Rule WhileLoop
ruleWhileLoop 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWhileLoopAccess().getGroup()); }
		(rule__WhileLoop__Group__0)
		{ after(grammarAccess.getWhileLoopAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleForLoop
entryRuleForLoop
:
{ before(grammarAccess.getForLoopRule()); }
	 ruleForLoop
{ after(grammarAccess.getForLoopRule()); } 
	 EOF 
;

// Rule ForLoop
ruleForLoop 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getForLoopAccess().getGroup()); }
		(rule__ForLoop__Group__0)
		{ after(grammarAccess.getForLoopAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDoUntilLoop
entryRuleDoUntilLoop
:
{ before(grammarAccess.getDoUntilLoopRule()); }
	 ruleDoUntilLoop
{ after(grammarAccess.getDoUntilLoopRule()); } 
	 EOF 
;

// Rule DoUntilLoop
ruleDoUntilLoop 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDoUntilLoopAccess().getGroup()); }
		(rule__DoUntilLoop__Group__0)
		{ after(grammarAccess.getDoUntilLoopAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleThrowsClause
entryRuleThrowsClause
:
{ before(grammarAccess.getThrowsClauseRule()); }
	 ruleThrowsClause
{ after(grammarAccess.getThrowsClauseRule()); } 
	 EOF 
;

// Rule ThrowsClause
ruleThrowsClause 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getThrowsClauseAccess().getGroup()); }
		(rule__ThrowsClause__Group__0)
		{ after(grammarAccess.getThrowsClauseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCatchClause
entryRuleCatchClause
:
{ before(grammarAccess.getCatchClauseRule()); }
	 ruleCatchClause
{ after(grammarAccess.getCatchClauseRule()); } 
	 EOF 
;

// Rule CatchClause
ruleCatchClause 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCatchClauseAccess().getGroup()); }
		(rule__CatchClause__Group__0)
		{ after(grammarAccess.getCatchClauseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCatchClauseTerm
entryRuleCatchClauseTerm
:
{ before(grammarAccess.getCatchClauseTermRule()); }
	 ruleCatchClauseTerm
{ after(grammarAccess.getCatchClauseTermRule()); } 
	 EOF 
;

// Rule CatchClauseTerm
ruleCatchClauseTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCatchClauseTermAccess().getGroup()); }
		(rule__CatchClauseTerm__Group__0)
		{ after(grammarAccess.getCatchClauseTermAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWhenThrow
entryRuleWhenThrow
:
{ before(grammarAccess.getWhenThrowRule()); }
	 ruleWhenThrow
{ after(grammarAccess.getWhenThrowRule()); } 
	 EOF 
;

// Rule WhenThrow
ruleWhenThrow 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWhenThrowAccess().getGroup()); }
		(rule__WhenThrow__Group__0)
		{ after(grammarAccess.getWhenThrowAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComputation
entryRuleComputation
:
{ before(grammarAccess.getComputationRule()); }
	 ruleComputation
{ after(grammarAccess.getComputationRule()); } 
	 EOF 
;

// Rule Computation
ruleComputation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComputationAccess().getGroup()); }
		(rule__Computation__Group__0)
		{ after(grammarAccess.getComputationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBAAlternative
entryRuleBAAlternative
:
{ before(grammarAccess.getBAAlternativeRule()); }
	 ruleBAAlternative
{ after(grammarAccess.getBAAlternativeRule()); } 
	 EOF 
;

// Rule BAAlternative
ruleBAAlternative 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBAAlternativeAccess().getGroup()); }
		(rule__BAAlternative__Group__0)
		{ after(grammarAccess.getBAAlternativeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElseifAlternative
entryRuleElseifAlternative
:
{ before(grammarAccess.getElseifAlternativeRule()); }
	 ruleElseifAlternative
{ after(grammarAccess.getElseifAlternativeRule()); } 
	 EOF 
;

// Rule ElseifAlternative
ruleElseifAlternative 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElseifAlternativeAccess().getGroup()); }
		(rule__ElseifAlternative__Group__0)
		{ after(grammarAccess.getElseifAlternativeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElseAlternative
entryRuleElseAlternative
:
{ before(grammarAccess.getElseAlternativeRule()); }
	 ruleElseAlternative
{ after(grammarAccess.getElseAlternativeRule()); } 
	 EOF 
;

// Rule ElseAlternative
ruleElseAlternative 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElseAlternativeAccess().getGroup()); }
		(rule__ElseAlternative__Group__0)
		{ after(grammarAccess.getElseAlternativeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIssueException
entryRuleIssueException
:
{ before(grammarAccess.getIssueExceptionRule()); }
	 ruleIssueException
{ after(grammarAccess.getIssueExceptionRule()); } 
	 EOF 
;

// Rule IssueException
ruleIssueException 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIssueExceptionAccess().getGroup()); }
		(rule__IssueException__Group__0)
		{ after(grammarAccess.getIssueExceptionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLockingAction
entryRuleLockingAction
:
{ before(grammarAccess.getLockingActionRule()); }
	 ruleLockingAction
{ after(grammarAccess.getLockingActionRule()); } 
	 EOF 
;

// Rule LockingAction
ruleLockingAction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLockingActionAccess().getAlternatives()); }
		(rule__LockingAction__Alternatives)
		{ after(grammarAccess.getLockingActionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFreezePort
entryRuleFreezePort
:
{ before(grammarAccess.getFreezePortRule()); }
	 ruleFreezePort
{ after(grammarAccess.getFreezePortRule()); } 
	 EOF 
;

// Rule FreezePort
ruleFreezePort 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFreezePortAccess().getGroup()); }
		(rule__FreezePort__Group__0)
		{ after(grammarAccess.getFreezePortAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePause
entryRulePause
:
{ before(grammarAccess.getPauseRule()); }
	 rulePause
{ after(grammarAccess.getPauseRule()); } 
	 EOF 
;

// Rule Pause
rulePause 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPauseAccess().getPauseAssignment()); }
		(rule__Pause__PauseAssignment)
		{ after(grammarAccess.getPauseAccess().getPauseAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleActionTimeout
entryRuleActionTimeout
:
{ before(grammarAccess.getActionTimeoutRule()); }
	 ruleActionTimeout
{ after(grammarAccess.getActionTimeoutRule()); } 
	 EOF 
;

// Rule ActionTimeout
ruleActionTimeout 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getActionTimeoutAccess().getGroup()); }
		(rule__ActionTimeout__Group__0)
		{ after(grammarAccess.getActionTimeoutAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBehaviorTime
entryRuleBehaviorTime
:
{ before(grammarAccess.getBehaviorTimeRule()); }
	 ruleBehaviorTime
{ after(grammarAccess.getBehaviorTimeRule()); } 
	 EOF 
;

// Rule BehaviorTime
ruleBehaviorTime 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBehaviorTimeAccess().getAlternatives()); }
		(rule__BehaviorTime__Alternatives)
		{ after(grammarAccess.getBehaviorTimeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleException
entryRuleException
:
{ before(grammarAccess.getExceptionRule()); }
	 ruleException
{ after(grammarAccess.getExceptionRule()); } 
	 EOF 
;

// Rule Exception
ruleException 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExceptionAccess().getGroup()); }
		(rule__Exception__Group__0)
		{ after(grammarAccess.getExceptionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGhostVariables
entryRuleGhostVariables
:
{ before(grammarAccess.getGhostVariablesRule()); }
	 ruleGhostVariables
{ after(grammarAccess.getGhostVariablesRule()); } 
	 EOF 
;

// Rule GhostVariables
ruleGhostVariables 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGhostVariablesAccess().getGroup()); }
		(rule__GhostVariables__Group__0)
		{ after(grammarAccess.getGhostVariablesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGhostVariable
entryRuleGhostVariable
:
{ before(grammarAccess.getGhostVariableRule()); }
	 ruleGhostVariable
{ after(grammarAccess.getGhostVariableRule()); } 
	 EOF 
;

// Rule GhostVariable
ruleGhostVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGhostVariableAccess().getGroup()); }
		(rule__GhostVariable__Group__0)
		{ after(grammarAccess.getGhostVariableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAssertion
entryRuleAssertion
:
{ before(grammarAccess.getAssertionRule()); }
	 ruleAssertion
{ after(grammarAccess.getAssertionRule()); } 
	 EOF 
;

// Rule Assertion
ruleAssertion 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssertionAccess().getAlternatives()); }
		(rule__Assertion__Alternatives)
		{ after(grammarAccess.getAssertionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNamedAssertion
entryRuleNamedAssertion
:
{ before(grammarAccess.getNamedAssertionRule()); }
	 ruleNamedAssertion
{ after(grammarAccess.getNamedAssertionRule()); } 
	 EOF 
;

// Rule NamedAssertion
ruleNamedAssertion 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNamedAssertionAccess().getGroup()); }
		(rule__NamedAssertion__Group__0)
		{ after(grammarAccess.getNamedAssertionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNamelessAssertion
entryRuleNamelessAssertion
:
{ before(grammarAccess.getNamelessAssertionRule()); }
	 ruleNamelessAssertion
{ after(grammarAccess.getNamelessAssertionRule()); } 
	 EOF 
;

// Rule NamelessAssertion
ruleNamelessAssertion 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNamelessAssertionAccess().getGroup()); }
		(rule__NamelessAssertion__Group__0)
		{ after(grammarAccess.getNamelessAssertionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNamelessFunction
entryRuleNamelessFunction
:
{ before(grammarAccess.getNamelessFunctionRule()); }
	 ruleNamelessFunction
{ after(grammarAccess.getNamelessFunctionRule()); } 
	 EOF 
;

// Rule NamelessFunction
ruleNamelessFunction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNamelessFunctionAccess().getGroup()); }
		(rule__NamelessFunction__Group__0)
		{ after(grammarAccess.getNamelessFunctionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNamelessEnumeration
entryRuleNamelessEnumeration
:
{ before(grammarAccess.getNamelessEnumerationRule()); }
	 ruleNamelessEnumeration
{ after(grammarAccess.getNamelessEnumerationRule()); } 
	 EOF 
;

// Rule NamelessEnumeration
ruleNamelessEnumeration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNamelessEnumerationAccess().getGroup()); }
		(rule__NamelessEnumeration__Group__0)
		{ after(grammarAccess.getNamelessEnumerationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePredicate
entryRulePredicate
:
{ before(grammarAccess.getPredicateRule()); }
	 rulePredicate
{ after(grammarAccess.getPredicateRule()); } 
	 EOF 
;

// Rule Predicate
rulePredicate 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPredicateAccess().getExpressionParserRuleCall()); }
		ruleExpression
		{ after(grammarAccess.getPredicateAccess().getExpressionParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAssertionNumericExpression
entryRuleAssertionNumericExpression
:
{ before(grammarAccess.getAssertionNumericExpressionRule()); }
	 ruleAssertionNumericExpression
{ after(grammarAccess.getAssertionNumericExpressionRule()); } 
	 EOF 
;

// Rule AssertionNumericExpression
ruleAssertionNumericExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssertionNumericExpressionAccess().getExpressionParserRuleCall()); }
		ruleExpression
		{ after(grammarAccess.getAssertionNumericExpressionAccess().getExpressionParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBooleanExpression
entryRuleBooleanExpression
:
{ before(grammarAccess.getBooleanExpressionRule()); }
	 ruleBooleanExpression
{ after(grammarAccess.getBooleanExpressionRule()); } 
	 EOF 
;

// Rule BooleanExpression
ruleBooleanExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBooleanExpressionAccess().getExpressionParserRuleCall()); }
		ruleExpression
		{ after(grammarAccess.getBooleanExpressionAccess().getExpressionParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNumericExpression
entryRuleNumericExpression
:
{ before(grammarAccess.getNumericExpressionRule()); }
	 ruleNumericExpression
{ after(grammarAccess.getNumericExpressionRule()); } 
	 EOF 
;

// Rule NumericExpression
ruleNumericExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNumericExpressionAccess().getExpressionParserRuleCall()); }
		ruleExpression
		{ after(grammarAccess.getNumericExpressionAccess().getExpressionParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpression
entryRuleExpression
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionAccess().getAlternatives()); }
		(rule__Expression__Alternatives)
		{ after(grammarAccess.getExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDisjunction
entryRuleDisjunction
:
{ before(grammarAccess.getDisjunctionRule()); }
	 ruleDisjunction
{ after(grammarAccess.getDisjunctionRule()); } 
	 EOF 
;

// Rule Disjunction
ruleDisjunction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDisjunctionAccess().getGroup()); }
		(rule__Disjunction__Group__0)
		{ after(grammarAccess.getDisjunctionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConjunction
entryRuleConjunction
:
{ before(grammarAccess.getConjunctionRule()); }
	 ruleConjunction
{ after(grammarAccess.getConjunctionRule()); } 
	 EOF 
;

// Rule Conjunction
ruleConjunction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConjunctionAccess().getGroup()); }
		(rule__Conjunction__Group__0)
		{ after(grammarAccess.getConjunctionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRelation
entryRuleRelation
:
{ before(grammarAccess.getRelationRule()); }
	 ruleRelation
{ after(grammarAccess.getRelationRule()); } 
	 EOF 
;

// Rule Relation
ruleRelation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRelationAccess().getGroup()); }
		(rule__Relation__Group__0)
		{ after(grammarAccess.getRelationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAddSub
entryRuleAddSub
:
{ before(grammarAccess.getAddSubRule()); }
	 ruleAddSub
{ after(grammarAccess.getAddSubRule()); } 
	 EOF 
;

// Rule AddSub
ruleAddSub 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAddSubAccess().getGroup()); }
		(rule__AddSub__Group__0)
		{ after(grammarAccess.getAddSubAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMultDiv
entryRuleMultDiv
:
{ before(grammarAccess.getMultDivRule()); }
	 ruleMultDiv
{ after(grammarAccess.getMultDivRule()); } 
	 EOF 
;

// Rule MultDiv
ruleMultDiv 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMultDivAccess().getGroup()); }
		(rule__MultDiv__Group__0)
		{ after(grammarAccess.getMultDivAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExp
entryRuleExp
:
{ before(grammarAccess.getExpRule()); }
	 ruleExp
{ after(grammarAccess.getExpRule()); } 
	 EOF 
;

// Rule Exp
ruleExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpAccess().getGroup()); }
		(rule__Exp__Group__0)
		{ after(grammarAccess.getExpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSubexpression
entryRuleSubexpression
:
{ before(grammarAccess.getSubexpressionRule()); }
	 ruleSubexpression
{ after(grammarAccess.getSubexpressionRule()); } 
	 EOF 
;

// Rule Subexpression
ruleSubexpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSubexpressionAccess().getGroup()); }
		(rule__Subexpression__Group__0)
		{ after(grammarAccess.getSubexpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTimedExpression
entryRuleTimedExpression
:
{ before(grammarAccess.getTimedExpressionRule()); }
	 ruleTimedExpression
{ after(grammarAccess.getTimedExpressionRule()); } 
	 EOF 
;

// Rule TimedExpression
ruleTimedExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTimedExpressionAccess().getGroup()); }
		(rule__TimedExpression__Group__0)
		{ after(grammarAccess.getTimedExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTimedSubject
entryRuleTimedSubject
:
{ before(grammarAccess.getTimedSubjectRule()); }
	 ruleTimedSubject
{ after(grammarAccess.getTimedSubjectRule()); } 
	 EOF 
;

// Rule TimedSubject
ruleTimedSubject 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTimedSubjectAccess().getAlternatives()); }
		(rule__TimedSubject__Alternatives)
		{ after(grammarAccess.getTimedSubjectAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParenthesizedSubexpression
entryRuleParenthesizedSubexpression
:
{ before(grammarAccess.getParenthesizedSubexpressionRule()); }
	 ruleParenthesizedSubexpression
{ after(grammarAccess.getParenthesizedSubexpressionRule()); } 
	 EOF 
;

// Rule ParenthesizedSubexpression
ruleParenthesizedSubexpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParenthesizedSubexpressionAccess().getGroup()); }
		(rule__ParenthesizedSubexpression__Group__0)
		{ after(grammarAccess.getParenthesizedSubexpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnaryOperator
entryRuleUnaryOperator
:
{ before(grammarAccess.getUnaryOperatorRule()); }
	 ruleUnaryOperator
{ after(grammarAccess.getUnaryOperatorRule()); } 
	 EOF 
;

// Rule UnaryOperator
ruleUnaryOperator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnaryOperatorAccess().getAlternatives()); }
		(rule__UnaryOperator__Alternatives)
		{ after(grammarAccess.getUnaryOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRange
entryRuleRange
:
{ before(grammarAccess.getRangeRule()); }
	 ruleRange
{ after(grammarAccess.getRangeRule()); } 
	 EOF 
;

// Rule Range
ruleRange 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRangeAccess().getGroup()); }
		(rule__Range__Group__0)
		{ after(grammarAccess.getRangeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRangeSymbol
entryRuleRangeSymbol
:
{ before(grammarAccess.getRangeSymbolRule()); }
	 ruleRangeSymbol
{ after(grammarAccess.getRangeSymbolRule()); } 
	 EOF 
;

// Rule RangeSymbol
ruleRangeSymbol 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRangeSymbolAccess().getAlternatives()); }
		(rule__RangeSymbol__Alternatives)
		{ after(grammarAccess.getRangeSymbolAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConditionalExpression
entryRuleConditionalExpression
:
{ before(grammarAccess.getConditionalExpressionRule()); }
	 ruleConditionalExpression
{ after(grammarAccess.getConditionalExpressionRule()); } 
	 EOF 
;

// Rule ConditionalExpression
ruleConditionalExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionalExpressionAccess().getGroup()); }
		(rule__ConditionalExpression__Group__0)
		{ after(grammarAccess.getConditionalExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleValue
entryRuleValue
:
{ before(grammarAccess.getValueRule()); }
	 ruleValue
{ after(grammarAccess.getValueRule()); } 
	 EOF 
;

// Rule Value
ruleValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getValueAccess().getAlternatives()); }
		(rule__Value__Alternatives)
		{ after(grammarAccess.getValueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnumerationValue
entryRuleEnumerationValue
:
{ before(grammarAccess.getEnumerationValueRule()); }
	 ruleEnumerationValue
{ after(grammarAccess.getEnumerationValueRule()); } 
	 EOF 
;

// Rule EnumerationValue
ruleEnumerationValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnumerationValueAccess().getGroup()); }
		(rule__EnumerationValue__Group__0)
		{ after(grammarAccess.getEnumerationValueAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConstant
entryRuleConstant
:
{ before(grammarAccess.getConstantRule()); }
	 ruleConstant
{ after(grammarAccess.getConstantRule()); } 
	 EOF 
;

// Rule Constant
ruleConstant 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstantAccess().getAlternatives()); }
		(rule__Constant__Alternatives)
		{ after(grammarAccess.getConstantAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNonNumericProperty
entryRuleNonNumericProperty
:
{ before(grammarAccess.getNonNumericPropertyRule()); }
	 ruleNonNumericProperty
{ after(grammarAccess.getNonNumericPropertyRule()); } 
	 EOF 
;

// Rule NonNumericProperty
ruleNonNumericProperty 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNonNumericPropertyAccess().getGroup()); }
		(rule__NonNumericProperty__Group__0)
		{ after(grammarAccess.getNonNumericPropertyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariable
entryRuleVariable
:
{ before(grammarAccess.getVariableRule()); }
	 ruleVariable
{ after(grammarAccess.getVariableRule()); } 
	 EOF 
;

// Rule Variable
ruleVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableAccess().getGroup()); }
		(rule__Variable__Group__0)
		{ after(grammarAccess.getVariableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleValueName
entryRuleValueName
:
{ before(grammarAccess.getValueNameRule()); }
	 ruleValueName
{ after(grammarAccess.getValueNameRule()); } 
	 EOF 
;

// Rule ValueName
ruleValueName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getValueNameAccess().getGroup()); }
		(rule__ValueName__Group__0)
		{ after(grammarAccess.getValueNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePartialName
entryRulePartialName
:
{ before(grammarAccess.getPartialNameRule()); }
	 rulePartialName
{ after(grammarAccess.getPartialNameRule()); } 
	 EOF 
;

// Rule PartialName
rulePartialName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPartialNameAccess().getGroup()); }
		(rule__PartialName__Group__0)
		{ after(grammarAccess.getPartialNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIndexExpressionOrRange
entryRuleIndexExpressionOrRange
:
{ before(grammarAccess.getIndexExpressionOrRangeRule()); }
	 ruleIndexExpressionOrRange
{ after(grammarAccess.getIndexExpressionOrRangeRule()); } 
	 EOF 
;

// Rule IndexExpressionOrRange
ruleIndexExpressionOrRange 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIndexExpressionOrRangeAccess().getGroup()); }
		(rule__IndexExpressionOrRange__Group__0)
		{ after(grammarAccess.getIndexExpressionOrRangeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePeriodShift
entryRulePeriodShift
:
{ before(grammarAccess.getPeriodShiftRule()); }
	 rulePeriodShift
{ after(grammarAccess.getPeriodShiftRule()); } 
	 EOF 
;

// Rule PeriodShift
rulePeriodShift 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPeriodShiftAccess().getGroup()); }
		(rule__PeriodShift__Group__0)
		{ after(grammarAccess.getPeriodShiftAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIndexExpression
entryRuleIndexExpression
:
{ before(grammarAccess.getIndexExpressionRule()); }
	 ruleIndexExpression
{ after(grammarAccess.getIndexExpressionRule()); } 
	 EOF 
;

// Rule IndexExpression
ruleIndexExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIndexExpressionAccess().getGroup()); }
		(rule__IndexExpression__Group__0)
		{ after(grammarAccess.getIndexExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCaseExpression
entryRuleCaseExpression
:
{ before(grammarAccess.getCaseExpressionRule()); }
	 ruleCaseExpression
{ after(grammarAccess.getCaseExpressionRule()); } 
	 EOF 
;

// Rule CaseExpression
ruleCaseExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCaseExpressionAccess().getGroup()); }
		(rule__CaseExpression__Group__0)
		{ after(grammarAccess.getCaseExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCaseChoice
entryRuleCaseChoice
:
{ before(grammarAccess.getCaseChoiceRule()); }
	 ruleCaseChoice
{ after(grammarAccess.getCaseChoiceRule()); } 
	 EOF 
;

// Rule CaseChoice
ruleCaseChoice 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCaseChoiceAccess().getGroup()); }
		(rule__CaseChoice__Group__0)
		{ after(grammarAccess.getCaseChoiceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLogicVariables
entryRuleLogicVariables
:
{ before(grammarAccess.getLogicVariablesRule()); }
	 ruleLogicVariables
{ after(grammarAccess.getLogicVariablesRule()); } 
	 EOF 
;

// Rule LogicVariables
ruleLogicVariables 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLogicVariablesAccess().getGroup()); }
		(rule__LogicVariables__Group__0)
		{ after(grammarAccess.getLogicVariablesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSumQuantification
entryRuleSumQuantification
:
{ before(grammarAccess.getSumQuantificationRule()); }
	 ruleSumQuantification
{ after(grammarAccess.getSumQuantificationRule()); } 
	 EOF 
;

// Rule SumQuantification
ruleSumQuantification 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSumQuantificationAccess().getGroup()); }
		(rule__SumQuantification__Group__0)
		{ after(grammarAccess.getSumQuantificationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProductQuantification
entryRuleProductQuantification
:
{ before(grammarAccess.getProductQuantificationRule()); }
	 ruleProductQuantification
{ after(grammarAccess.getProductQuantificationRule()); } 
	 EOF 
;

// Rule ProductQuantification
ruleProductQuantification 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProductQuantificationAccess().getGroup()); }
		(rule__ProductQuantification__Group__0)
		{ after(grammarAccess.getProductQuantificationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCountingQuantification
entryRuleCountingQuantification
:
{ before(grammarAccess.getCountingQuantificationRule()); }
	 ruleCountingQuantification
{ after(grammarAccess.getCountingQuantificationRule()); } 
	 EOF 
;

// Rule CountingQuantification
ruleCountingQuantification 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCountingQuantificationAccess().getGroup()); }
		(rule__CountingQuantification__Group__0)
		{ after(grammarAccess.getCountingQuantificationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUniversalQuantification
entryRuleUniversalQuantification
:
{ before(grammarAccess.getUniversalQuantificationRule()); }
	 ruleUniversalQuantification
{ after(grammarAccess.getUniversalQuantificationRule()); } 
	 EOF 
;

// Rule UniversalQuantification
ruleUniversalQuantification 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUniversalQuantificationAccess().getGroup()); }
		(rule__UniversalQuantification__Group__0)
		{ after(grammarAccess.getUniversalQuantificationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExistentialQuantification
entryRuleExistentialQuantification
:
{ before(grammarAccess.getExistentialQuantificationRule()); }
	 ruleExistentialQuantification
{ after(grammarAccess.getExistentialQuantificationRule()); } 
	 EOF 
;

// Rule ExistentialQuantification
ruleExistentialQuantification 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExistentialQuantificationAccess().getGroup()); }
		(rule__ExistentialQuantification__Group__0)
		{ after(grammarAccess.getExistentialQuantificationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRecordTerm
entryRuleRecordTerm
:
{ before(grammarAccess.getRecordTermRule()); }
	 ruleRecordTerm
{ after(grammarAccess.getRecordTermRule()); } 
	 EOF 
;

// Rule RecordTerm
ruleRecordTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRecordTermAccess().getGroup()); }
		(rule__RecordTerm__Group__0)
		{ after(grammarAccess.getRecordTermAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRecordValue
entryRuleRecordValue
:
{ before(grammarAccess.getRecordValueRule()); }
	 ruleRecordValue
{ after(grammarAccess.getRecordValueRule()); } 
	 EOF 
;

// Rule RecordValue
ruleRecordValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRecordValueAccess().getGroup()); }
		(rule__RecordValue__Group__0)
		{ after(grammarAccess.getRecordValueAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInvocation
entryRuleInvocation
:
{ before(grammarAccess.getInvocationRule()); }
	 ruleInvocation
{ after(grammarAccess.getInvocationRule()); } 
	 EOF 
;

// Rule Invocation
ruleInvocation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInvocationAccess().getGroup()); }
		(rule__Invocation__Group__0)
		{ after(grammarAccess.getInvocationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleActualParameter
entryRuleActualParameter
:
{ before(grammarAccess.getActualParameterRule()); }
	 ruleActualParameter
{ after(grammarAccess.getActualParameterRule()); } 
	 EOF 
;

// Rule ActualParameter
ruleActualParameter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getActualParameterAccess().getGroup()); }
		(rule__ActualParameter__Group__0)
		{ after(grammarAccess.getActualParameterAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariableList
entryRuleVariableList
:
{ before(grammarAccess.getVariableListRule()); }
	 ruleVariableList
{ after(grammarAccess.getVariableListRule()); } 
	 EOF 
;

// Rule VariableList
ruleVariableList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableListAccess().getGroup()); }
		(rule__VariableList__Group__0)
		{ after(grammarAccess.getVariableListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAssertionFunctionValue
entryRuleAssertionFunctionValue
:
{ before(grammarAccess.getAssertionFunctionValueRule()); }
	 ruleAssertionFunctionValue
{ after(grammarAccess.getAssertionFunctionValueRule()); } 
	 EOF 
;

// Rule AssertionFunctionValue
ruleAssertionFunctionValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssertionFunctionValueAccess().getAlternatives()); }
		(rule__AssertionFunctionValue__Alternatives)
		{ after(grammarAccess.getAssertionFunctionValueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConditionalAssertionFunction
entryRuleConditionalAssertionFunction
:
{ before(grammarAccess.getConditionalAssertionFunctionRule()); }
	 ruleConditionalAssertionFunction
{ after(grammarAccess.getConditionalAssertionFunctionRule()); } 
	 EOF 
;

// Rule ConditionalAssertionFunction
ruleConditionalAssertionFunction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionalAssertionFunctionAccess().getGroup()); }
		(rule__ConditionalAssertionFunction__Group__0)
		{ after(grammarAccess.getConditionalAssertionFunctionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConditionValuePair
entryRuleConditionValuePair
:
{ before(grammarAccess.getConditionValuePairRule()); }
	 ruleConditionValuePair
{ after(grammarAccess.getConditionValuePairRule()); } 
	 EOF 
;

// Rule ConditionValuePair
ruleConditionValuePair 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionValuePairAccess().getGroup()); }
		(rule__ConditionValuePair__Group__0)
		{ after(grammarAccess.getConditionValuePairAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAssertionEnumeration
entryRuleAssertionEnumeration
:
{ before(grammarAccess.getAssertionEnumerationRule()); }
	 ruleAssertionEnumeration
{ after(grammarAccess.getAssertionEnumerationRule()); } 
	 EOF 
;

// Rule AssertionEnumeration
ruleAssertionEnumeration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssertionEnumerationAccess().getAlternatives()); }
		(rule__AssertionEnumeration__Alternatives)
		{ after(grammarAccess.getAssertionEnumerationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnumerationPair
entryRuleEnumerationPair
:
{ before(grammarAccess.getEnumerationPairRule()); }
	 ruleEnumerationPair
{ after(grammarAccess.getEnumerationPairRule()); } 
	 EOF 
;

// Rule EnumerationPair
ruleEnumerationPair 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnumerationPairAccess().getGroup()); }
		(rule__EnumerationPair__Group__0)
		{ after(grammarAccess.getEnumerationPairAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeLibrary
entryRuleTypeLibrary
:
{ before(grammarAccess.getTypeLibraryRule()); }
	 ruleTypeLibrary
{ after(grammarAccess.getTypeLibraryRule()); } 
	 EOF 
;

// Rule TypeLibrary
ruleTypeLibrary 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		(
			{ before(grammarAccess.getTypeLibraryAccess().getDecsAssignment()); }
			(rule__TypeLibrary__DecsAssignment)
			{ after(grammarAccess.getTypeLibraryAccess().getDecsAssignment()); }
		)
		(
			{ before(grammarAccess.getTypeLibraryAccess().getDecsAssignment()); }
			(rule__TypeLibrary__DecsAssignment)*
			{ after(grammarAccess.getTypeLibraryAccess().getDecsAssignment()); }
		)
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeDeclaration
entryRuleTypeDeclaration
:
{ before(grammarAccess.getTypeDeclarationRule()); }
	 ruleTypeDeclaration
{ after(grammarAccess.getTypeDeclarationRule()); } 
	 EOF 
;

// Rule TypeDeclaration
ruleTypeDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeDeclarationAccess().getGroup()); }
		(rule__TypeDeclaration__Group__0)
		{ after(grammarAccess.getTypeDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeOrReference
entryRuleTypeOrReference
:
{ before(grammarAccess.getTypeOrReferenceRule()); }
	 ruleTypeOrReference
{ after(grammarAccess.getTypeOrReferenceRule()); } 
	 EOF 
;

// Rule TypeOrReference
ruleTypeOrReference 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeOrReferenceAccess().getAlternatives()); }
		(rule__TypeOrReference__Alternatives)
		{ after(grammarAccess.getTypeOrReferenceAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBooleanType
entryRuleBooleanType
:
{ before(grammarAccess.getBooleanTypeRule()); }
	 ruleBooleanType
{ after(grammarAccess.getBooleanTypeRule()); } 
	 EOF 
;

// Rule BooleanType
ruleBooleanType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBooleanTypeAccess().getBAssignment()); }
		(rule__BooleanType__BAssignment)
		{ after(grammarAccess.getBooleanTypeAccess().getBAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStringType
entryRuleStringType
:
{ before(grammarAccess.getStringTypeRule()); }
	 ruleStringType
{ after(grammarAccess.getStringTypeRule()); } 
	 EOF 
;

// Rule StringType
ruleStringType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStringTypeAccess().getSAssignment()); }
		(rule__StringType__SAssignment)
		{ after(grammarAccess.getStringTypeAccess().getSAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNullType
entryRuleNullType
:
{ before(grammarAccess.getNullTypeRule()); }
	 ruleNullType
{ after(grammarAccess.getNullTypeRule()); } 
	 EOF 
;

// Rule NullType
ruleNullType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNullTypeAccess().getNAssignment()); }
		(rule__NullType__NAssignment)
		{ after(grammarAccess.getNullTypeAccess().getNAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnumerationType
entryRuleEnumerationType
:
{ before(grammarAccess.getEnumerationTypeRule()); }
	 ruleEnumerationType
{ after(grammarAccess.getEnumerationTypeRule()); } 
	 EOF 
;

// Rule EnumerationType
ruleEnumerationType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnumerationTypeAccess().getGroup()); }
		(rule__EnumerationType__Group__0)
		{ after(grammarAccess.getEnumerationTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQuantityType
entryRuleQuantityType
:
{ before(grammarAccess.getQuantityTypeRule()); }
	 ruleQuantityType
{ after(grammarAccess.getQuantityTypeRule()); } 
	 EOF 
;

// Rule QuantityType
ruleQuantityType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQuantityTypeAccess().getGroup()); }
		(rule__QuantityType__Group__0)
		{ after(grammarAccess.getQuantityTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleANumber
entryRuleANumber
:
{ before(grammarAccess.getANumberRule()); }
	 ruleANumber
{ after(grammarAccess.getANumberRule()); } 
	 EOF 
;

// Rule ANumber
ruleANumber 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getANumberAccess().getAlternatives()); }
		(rule__ANumber__Alternatives)
		{ after(grammarAccess.getANumberAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArrayType
entryRuleArrayType
:
{ before(grammarAccess.getArrayTypeRule()); }
	 ruleArrayType
{ after(grammarAccess.getArrayTypeRule()); } 
	 EOF 
;

// Rule ArrayType
ruleArrayType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArrayTypeAccess().getGroup()); }
		(rule__ArrayType__Group__0)
		{ after(grammarAccess.getArrayTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArrayRangeList
entryRuleArrayRangeList
:
{ before(grammarAccess.getArrayRangeListRule()); }
	 ruleArrayRangeList
{ after(grammarAccess.getArrayRangeListRule()); } 
	 EOF 
;

// Rule ArrayRangeList
ruleArrayRangeList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArrayRangeListAccess().getGroup()); }
		(rule__ArrayRangeList__Group__0)
		{ after(grammarAccess.getArrayRangeListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArrayRange
entryRuleArrayRange
:
{ before(grammarAccess.getArrayRangeRule()); }
	 ruleArrayRange
{ after(grammarAccess.getArrayRangeRule()); } 
	 EOF 
;

// Rule ArrayRange
ruleArrayRange 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArrayRangeAccess().getGroup()); }
		(rule__ArrayRange__Group__0)
		{ after(grammarAccess.getArrayRangeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRecordType
entryRuleRecordType
:
{ before(grammarAccess.getRecordTypeRule()); }
	 ruleRecordType
{ after(grammarAccess.getRecordTypeRule()); } 
	 EOF 
;

// Rule RecordType
ruleRecordType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRecordTypeAccess().getGroup()); }
		(rule__RecordType__Group__0)
		{ after(grammarAccess.getRecordTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRecordField
entryRuleRecordField
:
{ before(grammarAccess.getRecordFieldRule()); }
	 ruleRecordField
{ after(grammarAccess.getRecordFieldRule()); } 
	 EOF 
;

// Rule RecordField
ruleRecordField 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRecordFieldAccess().getGroup()); }
		(rule__RecordField__Group__0)
		{ after(grammarAccess.getRecordFieldAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePropertyReference
entryRulePropertyReference
:
{ before(grammarAccess.getPropertyReferenceRule()); }
	 rulePropertyReference
{ after(grammarAccess.getPropertyReferenceRule()); } 
	 EOF 
;

// Rule PropertyReference
rulePropertyReference 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPropertyReferenceAccess().getAlternatives()); }
		(rule__PropertyReference__Alternatives)
		{ after(grammarAccess.getPropertyReferenceAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePropertyField
entryRulePropertyField
:
{ before(grammarAccess.getPropertyFieldRule()); }
	 rulePropertyField
{ after(grammarAccess.getPropertyFieldRule()); } 
	 EOF 
;

// Rule PropertyField
rulePropertyField 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPropertyFieldAccess().getAlternatives()); }
		(rule__PropertyField__Alternatives)
		{ after(grammarAccess.getPropertyFieldAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnitName
entryRuleUnitName
:
{ before(grammarAccess.getUnitNameRule()); }
	 ruleUnitName
{ after(grammarAccess.getUnitNameRule()); } 
	 EOF 
;

// Rule UnitName
ruleUnitName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnitNameAccess().getGroup()); }
		(rule__UnitName__Group__0)
		{ after(grammarAccess.getUnitNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnitFormula
entryRuleUnitFormula
:
{ before(grammarAccess.getUnitFormulaRule()); }
	 ruleUnitFormula
{ after(grammarAccess.getUnitFormulaRule()); } 
	 EOF 
;

// Rule UnitFormula
ruleUnitFormula 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnitFormulaAccess().getAlternatives()); }
		(rule__UnitFormula__Alternatives)
		{ after(grammarAccess.getUnitFormulaAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnitDeclaration
entryRuleUnitDeclaration
:
{ before(grammarAccess.getUnitDeclarationRule()); }
	 ruleUnitDeclaration
{ after(grammarAccess.getUnitDeclarationRule()); } 
	 EOF 
;

// Rule UnitDeclaration
ruleUnitDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnitDeclarationAccess().getAlternatives()); }
		(rule__UnitDeclaration__Alternatives)
		{ after(grammarAccess.getUnitDeclarationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRootDeclaration
entryRuleRootDeclaration
:
{ before(grammarAccess.getRootDeclarationRule()); }
	 ruleRootDeclaration
{ after(grammarAccess.getRootDeclarationRule()); } 
	 EOF 
;

// Rule RootDeclaration
ruleRootDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRootDeclarationAccess().getGroup()); }
		(rule__RootDeclaration__Group__0)
		{ after(grammarAccess.getRootDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnitExtension
entryRuleUnitExtension
:
{ before(grammarAccess.getUnitExtensionRule()); }
	 ruleUnitExtension
{ after(grammarAccess.getUnitExtensionRule()); } 
	 EOF 
;

// Rule UnitExtension
ruleUnitExtension 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnitExtensionAccess().getGroup()); }
		(rule__UnitExtension__Group__0)
		{ after(grammarAccess.getUnitExtensionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMulDiv
entryRuleMulDiv
:
{ before(grammarAccess.getMulDivRule()); }
	 ruleMulDiv
{ after(grammarAccess.getMulDivRule()); } 
	 EOF 
;

// Rule MulDiv
ruleMulDiv 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMulDivAccess().getAlternatives()); }
		(rule__MulDiv__Alternatives)
		{ after(grammarAccess.getMulDivAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnitFactor
entryRuleUnitFactor
:
{ before(grammarAccess.getUnitFactorRule()); }
	 ruleUnitFactor
{ after(grammarAccess.getUnitFactorRule()); } 
	 EOF 
;

// Rule UnitFactor
ruleUnitFactor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnitFactorAccess().getGroup()); }
		(rule__UnitFactor__Group__0)
		{ after(grammarAccess.getUnitFactorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQuantity
entryRuleQuantity
:
{ before(grammarAccess.getQuantityRule()); }
	 ruleQuantity
{ after(grammarAccess.getQuantityRule()); } 
	 EOF 
;

// Rule Quantity
ruleQuantity 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQuantityAccess().getGroup()); }
		(rule__Quantity__Group__0)
		{ after(grammarAccess.getQuantityAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePositiveNumber
entryRulePositiveNumber
:
{ before(grammarAccess.getPositiveNumberRule()); }
	 rulePositiveNumber
{ after(grammarAccess.getPositiveNumberRule()); } 
	 EOF 
;

// Rule PositiveNumber
rulePositiveNumber 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPositiveNumberAccess().getNUMBERTerminalRuleCall()); }
		RULE_NUMBER
		{ after(grammarAccess.getPositiveNumberAccess().getNUMBERTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleType
entryRuleType
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeAccess().getAlternatives()); }
		(rule__Type__Alternatives)
		{ after(grammarAccess.getTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQCLREF
entryRuleQCLREF
:
{ before(grammarAccess.getQCLREFRule()); }
	 ruleQCLREF
{ after(grammarAccess.getQCLREFRule()); } 
	 EOF 
;

// Rule QCLREF
ruleQCLREF 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQCLREFAccess().getGroup()); }
		(rule__QCLREF__Group__0)
		{ after(grammarAccess.getQCLREFAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQCREF
entryRuleQCREF
:
{ before(grammarAccess.getQCREFRule()); }
	 ruleQCREF
{ after(grammarAccess.getQCREFRule()); } 
	 EOF 
;

// Rule QCREF
ruleQCREF 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQCREFAccess().getGroup()); }
		(rule__QCREF__Group__0)
		{ after(grammarAccess.getQCREFAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTIMES
entryRuleTIMES
:
{ before(grammarAccess.getTIMESRule()); }
	 ruleTIMES
{ after(grammarAccess.getTIMESRule()); } 
	 EOF 
;

// Rule TIMES
ruleTIMES 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTIMESAccess().getAsteriskKeyword()); }
		'*'
		{ after(grammarAccess.getTIMESAccess().getAsteriskKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BLESSGrammarRoots__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBLESSGrammarRootsAccess().getGroup_0()); }
		(rule__BLESSGrammarRoots__Group_0__0)
		{ after(grammarAccess.getBLESSGrammarRootsAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getBLESSGrammarRootsAccess().getGroup_1()); }
		(rule__BLESSGrammarRoots__Group_1__0)
		{ after(grammarAccess.getBLESSGrammarRootsAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getBLESSGrammarRootsAccess().getGroup_2()); }
		(rule__BLESSGrammarRoots__Group_2__0)
		{ after(grammarAccess.getBLESSGrammarRootsAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getBLESSGrammarRootsAccess().getGroup_3()); }
		(rule__BLESSGrammarRoots__Group_3__0)
		{ after(grammarAccess.getBLESSGrammarRootsAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getBLESSGrammarRootsAccess().getGroup_4()); }
		(rule__BLESSGrammarRoots__Group_4__0)
		{ after(grammarAccess.getBLESSGrammarRootsAccess().getGroup_4()); }
	)
	|
	(
		{ before(grammarAccess.getBLESSGrammarRootsAccess().getGroup_5()); }
		(rule__BLESSGrammarRoots__Group_5__0)
		{ after(grammarAccess.getBLESSGrammarRootsAccess().getGroup_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorTransition__Alternatives_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBehaviorTransitionAccess().getDispatchAssignment_5_0()); }
		(rule__BehaviorTransition__DispatchAssignment_5_0)
		{ after(grammarAccess.getBehaviorTransitionAccess().getDispatchAssignment_5_0()); }
	)
	|
	(
		{ before(grammarAccess.getBehaviorTransitionAccess().getExecuteAssignment_5_1()); }
		(rule__BehaviorTransition__ExecuteAssignment_5_1)
		{ after(grammarAccess.getBehaviorTransitionAccess().getExecuteAssignment_5_1()); }
	)
	|
	(
		{ before(grammarAccess.getBehaviorTransitionAccess().getModeAssignment_5_2()); }
		(rule__BehaviorTransition__ModeAssignment_5_2)
		{ after(grammarAccess.getBehaviorTransitionAccess().getModeAssignment_5_2()); }
	)
	|
	(
		{ before(grammarAccess.getBehaviorTransitionAccess().getInternalAssignment_5_3()); }
		(rule__BehaviorTransition__InternalAssignment_5_3)
		{ after(grammarAccess.getBehaviorTransitionAccess().getInternalAssignment_5_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DispatchExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDispatchExpressionAccess().getGroup_0()); }
		(rule__DispatchExpression__Group_0__0)
		{ after(grammarAccess.getDispatchExpressionAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getDispatchExpressionAccess().getSubprogramaccessdispatchAssignment_1()); }
		(rule__DispatchExpression__SubprogramaccessdispatchAssignment_1)
		{ after(grammarAccess.getDispatchExpressionAccess().getSubprogramaccessdispatchAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DispatchTrigger__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDispatchTriggerAccess().getPortAssignment_0()); }
		(rule__DispatchTrigger__PortAssignment_0)
		{ after(grammarAccess.getDispatchTriggerAccess().getPortAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getDispatchTriggerAccess().getGroup_1()); }
		(rule__DispatchTrigger__Group_1__0)
		{ after(grammarAccess.getDispatchTriggerAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecuteCondition__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExecuteConditionAccess().getEorAssignment_0()); }
		(rule__ExecuteCondition__EorAssignment_0)
		{ after(grammarAccess.getExecuteConditionAccess().getEorAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getExecuteConditionAccess().getOtherwiseAssignment_1()); }
		(rule__ExecuteCondition__OtherwiseAssignment_1)
		{ after(grammarAccess.getExecuteConditionAccess().getOtherwiseAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventTrigger__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEventTriggerAccess().getGroup_0()); }
		(rule__EventTrigger__Group_0__0)
		{ after(grammarAccess.getEventTriggerAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getEventTriggerAccess().getGroup_1()); }
		(rule__EventTrigger__Group_1__0)
		{ after(grammarAccess.getEventTriggerAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOperator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalOperatorAccess().getOpAssignment_0()); }
		(rule__LogicalOperator__OpAssignment_0)
		{ after(grammarAccess.getLogicalOperatorAccess().getOpAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getLogicalOperatorAccess().getOpAssignment_1()); }
		(rule__LogicalOperator__OpAssignment_1)
		{ after(grammarAccess.getLogicalOperatorAccess().getOpAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getLogicalOperatorAccess().getOpAssignment_2()); }
		(rule__LogicalOperator__OpAssignment_2)
		{ after(grammarAccess.getLogicalOperatorAccess().getOpAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getLogicalOperatorAccess().getGroup_3()); }
		(rule__LogicalOperator__Group_3__0)
		{ after(grammarAccess.getLogicalOperatorAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getLogicalOperatorAccess().getGroup_4()); }
		(rule__LogicalOperator__Group_4__0)
		{ after(grammarAccess.getLogicalOperatorAccess().getGroup_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getNonvolatileAssignment_1_0()); }
		(rule__VariableDeclaration__NonvolatileAssignment_1_0)
		{ after(grammarAccess.getVariableDeclarationAccess().getNonvolatileAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getSharedAssignment_1_1()); }
		(rule__VariableDeclaration__SharedAssignment_1_1)
		{ after(grammarAccess.getVariableDeclarationAccess().getSharedAssignment_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getConstantAssignment_1_2()); }
		(rule__VariableDeclaration__ConstantAssignment_1_2)
		{ after(grammarAccess.getVariableDeclarationAccess().getConstantAssignment_1_2()); }
	)
	|
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getSpreadAssignment_1_3()); }
		(rule__VariableDeclaration__SpreadAssignment_1_3)
		{ after(grammarAccess.getVariableDeclarationAccess().getSpreadAssignment_1_3()); }
	)
	|
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getFinalAssignment_1_4()); }
		(rule__VariableDeclaration__FinalAssignment_1_4)
		{ after(grammarAccess.getVariableDeclarationAccess().getFinalAssignment_1_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorActions__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBehaviorActionsAccess().getGroup_1_0()); }
		(rule__BehaviorActions__Group_1_0__0)
		{ after(grammarAccess.getBehaviorActionsAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getBehaviorActionsAccess().getGroup_1_1()); }
		(rule__BehaviorActions__Group_1_1__0)
		{ after(grammarAccess.getBehaviorActionsAccess().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getBasicAssignment_0()); }
		(rule__Action__BasicAssignment_0)
		{ after(grammarAccess.getActionAccess().getBasicAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getActionAccess().getIf_fiAssignment_1()); }
		(rule__Action__If_fiAssignment_1)
		{ after(grammarAccess.getActionAccess().getIf_fiAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getActionAccess().getWlAssignment_2()); }
		(rule__Action__WlAssignment_2)
		{ after(grammarAccess.getActionAccess().getWlAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getActionAccess().getFlAssignment_3()); }
		(rule__Action__FlAssignment_3)
		{ after(grammarAccess.getActionAccess().getFlAssignment_3()); }
	)
	|
	(
		{ before(grammarAccess.getActionAccess().getDuAssignment_4()); }
		(rule__Action__DuAssignment_4)
		{ after(grammarAccess.getActionAccess().getDuAssignment_4()); }
	)
	|
	(
		{ before(grammarAccess.getActionAccess().getElqAssignment_5()); }
		(rule__Action__ElqAssignment_5)
		{ after(grammarAccess.getActionAccess().getElqAssignment_5()); }
	)
	|
	(
		{ before(grammarAccess.getActionAccess().getUlqAssignment_6()); }
		(rule__Action__UlqAssignment_6)
		{ after(grammarAccess.getActionAccess().getUlqAssignment_6()); }
	)
	|
	(
		{ before(grammarAccess.getActionAccess().getLaAssignment_7()); }
		(rule__Action__LaAssignment_7)
		{ after(grammarAccess.getActionAccess().getLaAssignment_7()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicAction__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBasicActionAccess().getSkipAssignment_0()); }
		(rule__BasicAction__SkipAssignment_0)
		{ after(grammarAccess.getBasicActionAccess().getSkipAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getBasicActionAccess().getAssignAssignment_1()); }
		(rule__BasicAction__AssignAssignment_1)
		{ after(grammarAccess.getBasicActionAccess().getAssignAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getBasicActionAccess().getGroup_2()); }
		(rule__BasicAction__Group_2__0)
		{ after(grammarAccess.getBasicActionAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getBasicActionAccess().getWhenAssignment_3()); }
		(rule__BasicAction__WhenAssignment_3)
		{ after(grammarAccess.getBasicActionAccess().getWhenAssignment_3()); }
	)
	|
	(
		{ before(grammarAccess.getBasicActionAccess().getCombAssignment_4()); }
		(rule__BasicAction__CombAssignment_4)
		{ after(grammarAccess.getBasicActionAccess().getCombAssignment_4()); }
	)
	|
	(
		{ before(grammarAccess.getBasicActionAccess().getCommunicationAssignment_5()); }
		(rule__BasicAction__CommunicationAssignment_5)
		{ after(grammarAccess.getBasicActionAccess().getCommunicationAssignment_5()); }
	)
	|
	(
		{ before(grammarAccess.getBasicActionAccess().getComputationAssignment_6()); }
		(rule__BasicAction__ComputationAssignment_6)
		{ after(grammarAccess.getBasicActionAccess().getComputationAssignment_6()); }
	)
	|
	(
		{ before(grammarAccess.getBasicActionAccess().getMulti_assignAssignment_7()); }
		(rule__BasicAction__Multi_assignAssignment_7)
		{ after(grammarAccess.getBasicActionAccess().getMulti_assignAssignment_7()); }
	)
	|
	(
		{ before(grammarAccess.getBasicActionAccess().getExcAssignment_8()); }
		(rule__BasicAction__ExcAssignment_8)
		{ after(grammarAccess.getBasicActionAccess().getExcAssignment_8()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinableOperation__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCombinableOperationAccess().getGroup_0()); }
		(rule__CombinableOperation__Group_0__0)
		{ after(grammarAccess.getCombinableOperationAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getCombinableOperationAccess().getGroup_1()); }
		(rule__CombinableOperation__Group_1__0)
		{ after(grammarAccess.getCombinableOperationAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getCombinableOperationAccess().getGroup_2()); }
		(rule__CombinableOperation__Group_2__0)
		{ after(grammarAccess.getCombinableOperationAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinableOperation__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCombinableOperationAccess().getF_orAssignment_1_0_0()); }
		(rule__CombinableOperation__F_orAssignment_1_0_0)
		{ after(grammarAccess.getCombinableOperationAccess().getF_orAssignment_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getCombinableOperationAccess().getF_andAssignment_1_0_1()); }
		(rule__CombinableOperation__F_andAssignment_1_0_1)
		{ after(grammarAccess.getCombinableOperationAccess().getF_andAssignment_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getCombinableOperationAccess().getF_xorAssignment_1_0_2()); }
		(rule__CombinableOperation__F_xorAssignment_1_0_2)
		{ after(grammarAccess.getCombinableOperationAccess().getF_xorAssignment_1_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommunicationAction__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommunicationActionAccess().getPcAssignment_0()); }
		(rule__CommunicationAction__PcAssignment_0)
		{ after(grammarAccess.getCommunicationActionAccess().getPcAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getCommunicationActionAccess().getPoAssignment_1()); }
		(rule__CommunicationAction__PoAssignment_1)
		{ after(grammarAccess.getCommunicationActionAccess().getPoAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getCommunicationActionAccess().getPiAssignment_2()); }
		(rule__CommunicationAction__PiAssignment_2)
		{ after(grammarAccess.getCommunicationActionAccess().getPiAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getCommunicationActionAccess().getFpAssignment_3()); }
		(rule__CommunicationAction__FpAssignment_3)
		{ after(grammarAccess.getCommunicationActionAccess().getFpAssignment_3()); }
	)
	|
	(
		{ before(grammarAccess.getCommunicationActionAccess().getPauseAssignment_4()); }
		(rule__CommunicationAction__PauseAssignment_4)
		{ after(grammarAccess.getCommunicationActionAccess().getPauseAssignment_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubProgramParameter__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubProgramParameterAccess().getValueAssignment_0()); }
		(rule__SubProgramParameter__ValueAssignment_0)
		{ after(grammarAccess.getSubProgramParameterAccess().getValueAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getSubProgramParameterAccess().getConstantAssignment_1()); }
		(rule__SubProgramParameter__ConstantAssignment_1)
		{ after(grammarAccess.getSubProgramParameterAccess().getConstantAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getSubProgramParameterAccess().getExpressionAssignment_2()); }
		(rule__SubProgramParameter__ExpressionAssignment_2)
		{ after(grammarAccess.getSubProgramParameterAccess().getExpressionAssignment_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionOrAny__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionOrAnyAccess().getExpAssignment_0()); }
		(rule__ExpressionOrAny__ExpAssignment_0)
		{ after(grammarAccess.getExpressionOrAnyAccess().getExpAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionOrAnyAccess().getAnyAssignment_1()); }
		(rule__ExpressionOrAny__AnyAssignment_1)
		{ after(grammarAccess.getExpressionOrAnyAccess().getAnyAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Alternative__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAlternativeAccess().getBlessaltAssignment_3_0()); }
		(rule__Alternative__BlessaltAssignment_3_0)
		{ after(grammarAccess.getAlternativeAccess().getBlessaltAssignment_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getAlternativeAccess().getBaaltAssignment_3_1()); }
		(rule__Alternative__BaaltAssignment_3_1)
		{ after(grammarAccess.getAlternativeAccess().getBaaltAssignment_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CatchClauseTerm__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		(
			{ before(grammarAccess.getCatchClauseTermAccess().getExceptionsAssignment_1_0()); }
			(rule__CatchClauseTerm__ExceptionsAssignment_1_0)
			{ after(grammarAccess.getCatchClauseTermAccess().getExceptionsAssignment_1_0()); }
		)
		(
			{ before(grammarAccess.getCatchClauseTermAccess().getExceptionsAssignment_1_0()); }
			(rule__CatchClauseTerm__ExceptionsAssignment_1_0)*
			{ after(grammarAccess.getCatchClauseTermAccess().getExceptionsAssignment_1_0()); }
		)
	)
	|
	(
		{ before(grammarAccess.getCatchClauseTermAccess().getAllAssignment_1_1()); }
		(rule__CatchClauseTerm__AllAssignment_1_1)
		{ after(grammarAccess.getCatchClauseTermAccess().getAllAssignment_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LockingAction__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLockingActionAccess().getEntercriticalAssignment_0()); }
		(rule__LockingAction__EntercriticalAssignment_0)
		{ after(grammarAccess.getLockingActionAccess().getEntercriticalAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getLockingActionAccess().getLeavecriticalAssignment_1()); }
		(rule__LockingAction__LeavecriticalAssignment_1)
		{ after(grammarAccess.getLockingActionAccess().getLeavecriticalAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getLockingActionAccess().getGroup_2()); }
		(rule__LockingAction__Group_2__0)
		{ after(grammarAccess.getLockingActionAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getLockingActionAccess().getGroup_3()); }
		(rule__LockingAction__Group_3__0)
		{ after(grammarAccess.getLockingActionAccess().getGroup_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorTime__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBehaviorTimeAccess().getQuantityAssignment_0()); }
		(rule__BehaviorTime__QuantityAssignment_0)
		{ after(grammarAccess.getBehaviorTimeAccess().getQuantityAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getBehaviorTimeAccess().getGroup_1()); }
		(rule__BehaviorTime__Group_1__0)
		{ after(grammarAccess.getBehaviorTimeAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorTime__Alternatives_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBehaviorTimeAccess().getUnitAssignment_1_1_0()); }
		(rule__BehaviorTime__UnitAssignment_1_1_0)
		{ after(grammarAccess.getBehaviorTimeAccess().getUnitAssignment_1_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getBehaviorTimeAccess().getScalarAssignment_1_1_1()); }
		(rule__BehaviorTime__ScalarAssignment_1_1_1)
		{ after(grammarAccess.getBehaviorTimeAccess().getScalarAssignment_1_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getBehaviorTimeAccess().getWholeAssignment_1_1_2()); }
		(rule__BehaviorTime__WholeAssignment_1_1_2)
		{ after(grammarAccess.getBehaviorTimeAccess().getWholeAssignment_1_1_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assertion__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssertionAccess().getNamedassertionAssignment_0()); }
		(rule__Assertion__NamedassertionAssignment_0)
		{ after(grammarAccess.getAssertionAccess().getNamedassertionAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getAssertionAccess().getNamelessassertionAssignment_1()); }
		(rule__Assertion__NamelessassertionAssignment_1)
		{ after(grammarAccess.getAssertionAccess().getNamelessassertionAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getAssertionAccess().getNamelessfunctionAssignment_2()); }
		(rule__Assertion__NamelessfunctionAssignment_2)
		{ after(grammarAccess.getAssertionAccess().getNamelessfunctionAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getAssertionAccess().getNamelessenumerationAssignment_3()); }
		(rule__Assertion__NamelessenumerationAssignment_3)
		{ after(grammarAccess.getAssertionAccess().getNamelessenumerationAssignment_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedAssertion__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNamedAssertionAccess().getGroup_3_0()); }
		(rule__NamedAssertion__Group_3_0__0)
		{ after(grammarAccess.getNamedAssertionAccess().getGroup_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getNamedAssertionAccess().getGroup_3_1()); }
		(rule__NamedAssertion__Group_3_1__0)
		{ after(grammarAccess.getNamedAssertionAccess().getGroup_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedAssertion__Alternatives_3_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNamedAssertionAccess().getGroup_3_0_1_0()); }
		(rule__NamedAssertion__Group_3_0_1_0__0)
		{ after(grammarAccess.getNamedAssertionAccess().getGroup_3_0_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getNamedAssertionAccess().getGroup_3_0_1_1()); }
		(rule__NamedAssertion__Group_3_0_1_1__0)
		{ after(grammarAccess.getNamedAssertionAccess().getGroup_3_0_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getAllAssignment_0()); }
		(rule__Expression__AllAssignment_0)
		{ after(grammarAccess.getExpressionAccess().getAllAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getExistsAssignment_1()); }
		(rule__Expression__ExistsAssignment_1)
		{ after(grammarAccess.getExpressionAccess().getExistsAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getSumAssignment_2()); }
		(rule__Expression__SumAssignment_2)
		{ after(grammarAccess.getExpressionAccess().getSumAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getProductAssignment_3()); }
		(rule__Expression__ProductAssignment_3)
		{ after(grammarAccess.getExpressionAccess().getProductAssignment_3()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getNumberofAssignment_4()); }
		(rule__Expression__NumberofAssignment_4)
		{ after(grammarAccess.getExpressionAccess().getNumberofAssignment_4()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getGroup_5()); }
		(rule__Expression__Group_5__0)
		{ after(grammarAccess.getExpressionAccess().getGroup_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Alternatives_5_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getSymAssignment_5_1_0_0()); }
		(rule__Expression__SymAssignment_5_1_0_0)
		{ after(grammarAccess.getExpressionAccess().getSymAssignment_5_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getSymAssignment_5_1_0_1()); }
		(rule__Expression__SymAssignment_5_1_0_1)
		{ after(grammarAccess.getExpressionAccess().getSymAssignment_5_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Disjunction__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDisjunctionAccess().getGroup_1_0()); }
		(rule__Disjunction__Group_1_0__0)
		{ after(grammarAccess.getDisjunctionAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getDisjunctionAccess().getGroup_1_1()); }
		(rule__Disjunction__Group_1_1__0)
		{ after(grammarAccess.getDisjunctionAccess().getGroup_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getDisjunctionAccess().getGroup_1_2()); }
		(rule__Disjunction__Group_1_2__0)
		{ after(grammarAccess.getDisjunctionAccess().getGroup_1_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conjunction__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConjunctionAccess().getGroup_1_0()); }
		(rule__Conjunction__Group_1_0__0)
		{ after(grammarAccess.getConjunctionAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getConjunctionAccess().getGroup_1_1()); }
		(rule__Conjunction__Group_1_1__0)
		{ after(grammarAccess.getConjunctionAccess().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationAccess().getGroup_1_0()); }
		(rule__Relation__Group_1_0__0)
		{ after(grammarAccess.getRelationAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getRelationAccess().getGroup_1_1()); }
		(rule__Relation__Group_1_1__0)
		{ after(grammarAccess.getRelationAccess().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__SymAlternatives_1_0_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationAccess().getSymEqualsSignKeyword_1_0_0_0_0()); }
		'='
		{ after(grammarAccess.getRelationAccess().getSymEqualsSignKeyword_1_0_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getRelationAccess().getSymLessThanSignGreaterThanSignKeyword_1_0_0_0_1()); }
		'<>'
		{ after(grammarAccess.getRelationAccess().getSymLessThanSignGreaterThanSignKeyword_1_0_0_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getRelationAccess().getSymLessThanSignKeyword_1_0_0_0_2()); }
		'<'
		{ after(grammarAccess.getRelationAccess().getSymLessThanSignKeyword_1_0_0_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getRelationAccess().getSymLessThanSignEqualsSignKeyword_1_0_0_0_3()); }
		'<='
		{ after(grammarAccess.getRelationAccess().getSymLessThanSignEqualsSignKeyword_1_0_0_0_3()); }
	)
	|
	(
		{ before(grammarAccess.getRelationAccess().getSymGreaterThanSignEqualsSignKeyword_1_0_0_0_4()); }
		'>='
		{ after(grammarAccess.getRelationAccess().getSymGreaterThanSignEqualsSignKeyword_1_0_0_0_4()); }
	)
	|
	(
		{ before(grammarAccess.getRelationAccess().getSymGreaterThanSignKeyword_1_0_0_0_5()); }
		'>'
		{ after(grammarAccess.getRelationAccess().getSymGreaterThanSignKeyword_1_0_0_0_5()); }
	)
	|
	(
		{ before(grammarAccess.getRelationAccess().getSymExclamationMarkEqualsSignKeyword_1_0_0_0_6()); }
		'!='
		{ after(grammarAccess.getRelationAccess().getSymExclamationMarkEqualsSignKeyword_1_0_0_0_6()); }
	)
	|
	(
		{ before(grammarAccess.getRelationAccess().getSymPlusSignEqualsSignKeyword_1_0_0_0_7()); }
		'+='
		{ after(grammarAccess.getRelationAccess().getSymPlusSignEqualsSignKeyword_1_0_0_0_7()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddSub__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddSubAccess().getGroup_1_0()); }
		(rule__AddSub__Group_1_0__0)
		{ after(grammarAccess.getAddSubAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getAddSubAccess().getGroup_1_1()); }
		(rule__AddSub__Group_1_1__0)
		{ after(grammarAccess.getAddSubAccess().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultDiv__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultDivAccess().getGroup_1_0()); }
		(rule__MultDiv__Group_1_0__0)
		{ after(grammarAccess.getMultDivAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getMultDivAccess().getGroup_1_1()); }
		(rule__MultDiv__Group_1_1__0)
		{ after(grammarAccess.getMultDivAccess().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultDiv__SymAlternatives_1_0_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultDivAccess().getSymSolidusKeyword_1_0_0_0_0()); }
		'/'
		{ after(grammarAccess.getMultDivAccess().getSymSolidusKeyword_1_0_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getMultDivAccess().getSymDivKeyword_1_0_0_0_1()); }
		'div'
		{ after(grammarAccess.getMultDivAccess().getSymDivKeyword_1_0_0_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getMultDivAccess().getSymModKeyword_1_0_0_0_2()); }
		'mod'
		{ after(grammarAccess.getMultDivAccess().getSymModKeyword_1_0_0_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getMultDivAccess().getSymRemKeyword_1_0_0_0_3()); }
		'rem'
		{ after(grammarAccess.getMultDivAccess().getSymRemKeyword_1_0_0_0_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimedExpression__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimedExpressionAccess().getTickAssignment_1_0()); }
		(rule__TimedExpression__TickAssignment_1_0)
		{ after(grammarAccess.getTimedExpressionAccess().getTickAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getTimedExpressionAccess().getGroup_1_1()); }
		(rule__TimedExpression__Group_1_1__0)
		{ after(grammarAccess.getTimedExpressionAccess().getGroup_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getTimedExpressionAccess().getGroup_1_2()); }
		(rule__TimedExpression__Group_1_2__0)
		{ after(grammarAccess.getTimedExpressionAccess().getGroup_1_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimedSubject__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimedSubjectAccess().getPsAssignment_0()); }
		(rule__TimedSubject__PsAssignment_0)
		{ after(grammarAccess.getTimedSubjectAccess().getPsAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getTimedSubjectAccess().getValueAssignment_1()); }
		(rule__TimedSubject__ValueAssignment_1)
		{ after(grammarAccess.getTimedSubjectAccess().getValueAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getTimedSubjectAccess().getConditionalAssignment_2()); }
		(rule__TimedSubject__ConditionalAssignment_2)
		{ after(grammarAccess.getTimedSubjectAccess().getConditionalAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getTimedSubjectAccess().getRecordAssignment_3()); }
		(rule__TimedSubject__RecordAssignment_3)
		{ after(grammarAccess.getTimedSubjectAccess().getRecordAssignment_3()); }
	)
	|
	(
		{ before(grammarAccess.getTimedSubjectAccess().getInvocationAssignment_4()); }
		(rule__TimedSubject__InvocationAssignment_4)
		{ after(grammarAccess.getTimedSubjectAccess().getInvocationAssignment_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesizedSubexpression__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParenthesizedSubexpressionAccess().getGroup_1_0()); }
		(rule__ParenthesizedSubexpression__Group_1_0__0)
		{ after(grammarAccess.getParenthesizedSubexpressionAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getParenthesizedSubexpressionAccess().getCaseexpressionAssignment_1_1()); }
		(rule__ParenthesizedSubexpression__CaseexpressionAssignment_1_1)
		{ after(grammarAccess.getParenthesizedSubexpressionAccess().getCaseexpressionAssignment_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOperator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryOperatorAccess().getNotAssignment_0()); }
		(rule__UnaryOperator__NotAssignment_0)
		{ after(grammarAccess.getUnaryOperatorAccess().getNotAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryOperatorAccess().getUnary_minusAssignment_1()); }
		(rule__UnaryOperator__Unary_minusAssignment_1)
		{ after(grammarAccess.getUnaryOperatorAccess().getUnary_minusAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryOperatorAccess().getAbsolute_valueAssignment_2()); }
		(rule__UnaryOperator__Absolute_valueAssignment_2)
		{ after(grammarAccess.getUnaryOperatorAccess().getAbsolute_valueAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryOperatorAccess().getTruncateAssignment_3()); }
		(rule__UnaryOperator__TruncateAssignment_3)
		{ after(grammarAccess.getUnaryOperatorAccess().getTruncateAssignment_3()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryOperatorAccess().getRoundAssignment_4()); }
		(rule__UnaryOperator__RoundAssignment_4)
		{ after(grammarAccess.getUnaryOperatorAccess().getRoundAssignment_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeSymbol__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRangeSymbolAccess().getDOTDOTTerminalRuleCall_0()); }
		RULE_DOTDOT
		{ after(grammarAccess.getRangeSymbolAccess().getDOTDOTTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getRangeSymbolAccess().getCOMMADOTTerminalRuleCall_1()); }
		RULE_COMMADOT
		{ after(grammarAccess.getRangeSymbolAccess().getCOMMADOTTerminalRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getRangeSymbolAccess().getDOTCOMMATerminalRuleCall_2()); }
		RULE_DOTCOMMA
		{ after(grammarAccess.getRangeSymbolAccess().getDOTCOMMATerminalRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getRangeSymbolAccess().getCOMMACOMMATerminalRuleCall_3()); }
		RULE_COMMACOMMA
		{ after(grammarAccess.getRangeSymbolAccess().getCOMMACOMMATerminalRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getValue_nameAssignment_0()); }
		(rule__Value__Value_nameAssignment_0)
		{ after(grammarAccess.getValueAccess().getValue_nameAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getConstantAssignment_1()); }
		(rule__Value__ConstantAssignment_1)
		{ after(grammarAccess.getValueAccess().getConstantAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getTimeoutAssignment_2()); }
		(rule__Value__TimeoutAssignment_2)
		{ after(grammarAccess.getValueAccess().getTimeoutAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getNowAssignment_3()); }
		(rule__Value__NowAssignment_3)
		{ after(grammarAccess.getValueAccess().getNowAssignment_3()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getTopsAssignment_4()); }
		(rule__Value__TopsAssignment_4)
		{ after(grammarAccess.getValueAccess().getTopsAssignment_4()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getEnum_valAssignment_5()); }
		(rule__Value__Enum_valAssignment_5)
		{ after(grammarAccess.getValueAccess().getEnum_valAssignment_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantAccess().getNumeric_constantAssignment_0()); }
		(rule__Constant__Numeric_constantAssignment_0)
		{ after(grammarAccess.getConstantAccess().getNumeric_constantAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getConstantAccess().getString_literalAssignment_1()); }
		(rule__Constant__String_literalAssignment_1)
		{ after(grammarAccess.getConstantAccess().getString_literalAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getConstantAccess().getTAssignment_2()); }
		(rule__Constant__TAssignment_2)
		{ after(grammarAccess.getConstantAccess().getTAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getConstantAccess().getFAssignment_3()); }
		(rule__Constant__FAssignment_3)
		{ after(grammarAccess.getConstantAccess().getFAssignment_3()); }
	)
	|
	(
		{ before(grammarAccess.getConstantAccess().getNulAssignment_4()); }
		(rule__Constant__NulAssignment_4)
		{ after(grammarAccess.getConstantAccess().getNulAssignment_4()); }
	)
	|
	(
		{ before(grammarAccess.getConstantAccess().getPropAssignment_5()); }
		(rule__Constant__PropAssignment_5)
		{ after(grammarAccess.getConstantAccess().getPropAssignment_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NonNumericProperty__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNonNumericPropertyAccess().getPropertyAssignment_1_0()); }
		(rule__NonNumericProperty__PropertyAssignment_1_0)
		{ after(grammarAccess.getNonNumericPropertyAccess().getPropertyAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getNonNumericPropertyAccess().getPropertyConstantAssignment_1_1()); }
		(rule__NonNumericProperty__PropertyConstantAssignment_1_1)
		{ after(grammarAccess.getNonNumericPropertyAccess().getPropertyConstantAssignment_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueName__Alternatives_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueNameAccess().getQAssignment_4_0()); }
		(rule__ValueName__QAssignment_4_0)
		{ after(grammarAccess.getValueNameAccess().getQAssignment_4_0()); }
	)
	|
	(
		{ before(grammarAccess.getValueNameAccess().getGroup_4_1()); }
		(rule__ValueName__Group_4_1__0)
		{ after(grammarAccess.getValueNameAccess().getGroup_4_1()); }
	)
	|
	(
		{ before(grammarAccess.getValueNameAccess().getGroup_4_2()); }
		(rule__ValueName__Group_4_2__0)
		{ after(grammarAccess.getValueNameAccess().getGroup_4_2()); }
	)
	|
	(
		{ before(grammarAccess.getValueNameAccess().getGroup_4_3()); }
		(rule__ValueName__Group_4_3__0)
		{ after(grammarAccess.getValueNameAccess().getGroup_4_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PeriodShift__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPeriodShiftAccess().getVAssignment_1_0()); }
		(rule__PeriodShift__VAssignment_1_0)
		{ after(grammarAccess.getPeriodShiftAccess().getVAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getPeriodShiftAccess().getGroup_1_1()); }
		(rule__PeriodShift__Group_1_1__0)
		{ after(grammarAccess.getPeriodShiftAccess().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexExpression__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIndexExpressionAccess().getGroup_1_0()); }
		(rule__IndexExpression__Group_1_0__0)
		{ after(grammarAccess.getIndexExpressionAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getIndexExpressionAccess().getGroup_1_1()); }
		(rule__IndexExpression__Group_1_1__0)
		{ after(grammarAccess.getIndexExpressionAccess().getGroup_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getIndexExpressionAccess().getGroup_1_2()); }
		(rule__IndexExpression__Group_1_2__0)
		{ after(grammarAccess.getIndexExpressionAccess().getGroup_1_2()); }
	)
	|
	(
		{ before(grammarAccess.getIndexExpressionAccess().getGroup_1_3()); }
		(rule__IndexExpression__Group_1_3__0)
		{ after(grammarAccess.getIndexExpressionAccess().getGroup_1_3()); }
	)
	|
	(
		{ before(grammarAccess.getIndexExpressionAccess().getGroup_1_4()); }
		(rule__IndexExpression__Group_1_4__0)
		{ after(grammarAccess.getIndexExpressionAccess().getGroup_1_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SumQuantification__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSumQuantificationAccess().getGroup_2_0()); }
		(rule__SumQuantification__Group_2_0__0)
		{ after(grammarAccess.getSumQuantificationAccess().getGroup_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getSumQuantificationAccess().getGroup_2_1()); }
		(rule__SumQuantification__Group_2_1__0)
		{ after(grammarAccess.getSumQuantificationAccess().getGroup_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProductQuantification__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProductQuantificationAccess().getGroup_2_0()); }
		(rule__ProductQuantification__Group_2_0__0)
		{ after(grammarAccess.getProductQuantificationAccess().getGroup_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getProductQuantificationAccess().getGroup_2_1()); }
		(rule__ProductQuantification__Group_2_1__0)
		{ after(grammarAccess.getProductQuantificationAccess().getGroup_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CountingQuantification__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCountingQuantificationAccess().getGroup_2_0()); }
		(rule__CountingQuantification__Group_2_0__0)
		{ after(grammarAccess.getCountingQuantificationAccess().getGroup_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getCountingQuantificationAccess().getGroup_2_1()); }
		(rule__CountingQuantification__Group_2_1__0)
		{ after(grammarAccess.getCountingQuantificationAccess().getGroup_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UniversalQuantification__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUniversalQuantificationAccess().getGroup_2_0()); }
		(rule__UniversalQuantification__Group_2_0__0)
		{ after(grammarAccess.getUniversalQuantificationAccess().getGroup_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getUniversalQuantificationAccess().getGroup_2_1()); }
		(rule__UniversalQuantification__Group_2_1__0)
		{ after(grammarAccess.getUniversalQuantificationAccess().getGroup_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistentialQuantification__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExistentialQuantificationAccess().getGroup_2_0()); }
		(rule__ExistentialQuantification__Group_2_0__0)
		{ after(grammarAccess.getExistentialQuantificationAccess().getGroup_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getExistentialQuantificationAccess().getGroup_2_1()); }
		(rule__ExistentialQuantification__Group_2_1__0)
		{ after(grammarAccess.getExistentialQuantificationAccess().getGroup_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Invocation__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInvocationAccess().getGroup_2_0()); }
		(rule__Invocation__Group_2_0__0)
		{ after(grammarAccess.getInvocationAccess().getGroup_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getInvocationAccess().getActual_parameterAssignment_2_1()); }
		(rule__Invocation__Actual_parameterAssignment_2_1)
		{ after(grammarAccess.getInvocationAccess().getActual_parameterAssignment_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssertionFunctionValue__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssertionFunctionValueAccess().getCexpAssignment_0()); }
		(rule__AssertionFunctionValue__CexpAssignment_0)
		{ after(grammarAccess.getAssertionFunctionValueAccess().getCexpAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getAssertionFunctionValueAccess().getPexpAssignment_1()); }
		(rule__AssertionFunctionValue__PexpAssignment_1)
		{ after(grammarAccess.getAssertionFunctionValueAccess().getPexpAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssertionEnumeration__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssertionEnumerationAccess().getPredAssignment_0()); }
		(rule__AssertionEnumeration__PredAssignment_0)
		{ after(grammarAccess.getAssertionEnumerationAccess().getPredAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getAssertionEnumerationAccess().getGroup_1()); }
		(rule__AssertionEnumeration__Group_1__0)
		{ after(grammarAccess.getAssertionEnumerationAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeOrReference__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeOrReferenceAccess().getTyAssignment_0()); }
		(rule__TypeOrReference__TyAssignment_0)
		{ after(grammarAccess.getTypeOrReferenceAccess().getTyAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeOrReferenceAccess().getRefAssignment_1()); }
		(rule__TypeOrReference__RefAssignment_1)
		{ after(grammarAccess.getTypeOrReferenceAccess().getRefAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuantityType__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQuantityTypeAccess().getUnitAssignment_1_0()); }
		(rule__QuantityType__UnitAssignment_1_0)
		{ after(grammarAccess.getQuantityTypeAccess().getUnitAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getQuantityTypeAccess().getScalarAssignment_1_1()); }
		(rule__QuantityType__ScalarAssignment_1_1)
		{ after(grammarAccess.getQuantityTypeAccess().getScalarAssignment_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getQuantityTypeAccess().getWholeAssignment_1_2()); }
		(rule__QuantityType__WholeAssignment_1_2)
		{ after(grammarAccess.getQuantityTypeAccess().getWholeAssignment_1_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ANumber__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getANumberAccess().getLitAssignment_0()); }
		(rule__ANumber__LitAssignment_0)
		{ after(grammarAccess.getANumberAccess().getLitAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getANumberAccess().getPropertyAssignment_1()); }
		(rule__ANumber__PropertyAssignment_1)
		{ after(grammarAccess.getANumberAccess().getPropertyAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getANumberAccess().getPropertyConstantAssignment_2()); }
		(rule__ANumber__PropertyConstantAssignment_2)
		{ after(grammarAccess.getANumberAccess().getPropertyConstantAssignment_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordType__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRecordTypeAccess().getRecordAssignment_0_0()); }
		(rule__RecordType__RecordAssignment_0_0)
		{ after(grammarAccess.getRecordTypeAccess().getRecordAssignment_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getRecordTypeAccess().getVariantAssignment_0_1()); }
		(rule__RecordType__VariantAssignment_0_1)
		{ after(grammarAccess.getRecordTypeAccess().getVariantAssignment_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getRecordTypeAccess().getVariantAssignment_0_2()); }
		(rule__RecordType__VariantAssignment_0_2)
		{ after(grammarAccess.getRecordTypeAccess().getVariantAssignment_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyReference__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyReferenceAccess().getGroup_0()); }
		(rule__PropertyReference__Group_0__0)
		{ after(grammarAccess.getPropertyReferenceAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getPropertyReferenceAccess().getGroup_1()); }
		(rule__PropertyReference__Group_1__0)
		{ after(grammarAccess.getPropertyReferenceAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getPropertyReferenceAccess().getGroup_2()); }
		(rule__PropertyReference__Group_2__0)
		{ after(grammarAccess.getPropertyReferenceAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyField__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyFieldAccess().getGroup_0()); }
		(rule__PropertyField__Group_0__0)
		{ after(grammarAccess.getPropertyFieldAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getPropertyFieldAccess().getGroup_1()); }
		(rule__PropertyField__Group_1__0)
		{ after(grammarAccess.getPropertyFieldAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyField__Alternatives_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyFieldAccess().getIndexAssignment_0_1_0()); }
		(rule__PropertyField__IndexAssignment_0_1_0)
		{ after(grammarAccess.getPropertyFieldAccess().getIndexAssignment_0_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getPropertyFieldAccess().getVariableAssignment_0_1_1()); }
		(rule__PropertyField__VariableAssignment_0_1_1)
		{ after(grammarAccess.getPropertyFieldAccess().getVariableAssignment_0_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyField__Alternatives_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyFieldAccess().getPfAssignment_1_1_0()); }
		(rule__PropertyField__PfAssignment_1_1_0)
		{ after(grammarAccess.getPropertyFieldAccess().getPfAssignment_1_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getPropertyFieldAccess().getUpperAssignment_1_1_1()); }
		(rule__PropertyField__UpperAssignment_1_1_1)
		{ after(grammarAccess.getPropertyFieldAccess().getUpperAssignment_1_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getPropertyFieldAccess().getLowerAssignment_1_1_2()); }
		(rule__PropertyField__LowerAssignment_1_1_2)
		{ after(grammarAccess.getPropertyFieldAccess().getLowerAssignment_1_1_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitFormula__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnitFormulaAccess().getGroup_0()); }
		(rule__UnitFormula__Group_0__0)
		{ after(grammarAccess.getUnitFormulaAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnitFormulaAccess().getGroup_1()); }
		(rule__UnitFormula__Group_1__0)
		{ after(grammarAccess.getUnitFormulaAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitDeclaration__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnitDeclarationAccess().getRootDeclarationParserRuleCall_0()); }
		ruleRootDeclaration
		{ after(grammarAccess.getUnitDeclarationAccess().getRootDeclarationParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnitDeclarationAccess().getUnitExtensionParserRuleCall_1()); }
		ruleUnitExtension
		{ after(grammarAccess.getUnitDeclarationAccess().getUnitExtensionParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RootDeclaration__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRootDeclarationAccess().getBaseAssignment_0_0()); }
		(rule__RootDeclaration__BaseAssignment_0_0)
		{ after(grammarAccess.getRootDeclarationAccess().getBaseAssignment_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getRootDeclarationAccess().getFormulaAssignment_0_1()); }
		(rule__RootDeclaration__FormulaAssignment_0_1)
		{ after(grammarAccess.getRootDeclarationAccess().getFormulaAssignment_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulDiv__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMulDivAccess().getTIMESParserRuleCall_0()); }
		ruleTIMES
		{ after(grammarAccess.getMulDivAccess().getTIMESParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getMulDivAccess().getSolidusKeyword_1()); }
		'/'
		{ after(grammarAccess.getMulDivAccess().getSolidusKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Quantity__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQuantityAccess().getUnitAssignment_1_0()); }
		(rule__Quantity__UnitAssignment_1_0)
		{ after(grammarAccess.getQuantityAccess().getUnitAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getQuantityAccess().getScalarAssignment_1_1()); }
		(rule__Quantity__ScalarAssignment_1_1)
		{ after(grammarAccess.getQuantityAccess().getScalarAssignment_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getQuantityAccess().getWholeAssignment_1_2()); }
		(rule__Quantity__WholeAssignment_1_2)
		{ after(grammarAccess.getQuantityAccess().getWholeAssignment_1_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getEnumerationTypeParserRuleCall_0()); }
		ruleEnumerationType
		{ after(grammarAccess.getTypeAccess().getEnumerationTypeParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getQuantityTypeParserRuleCall_1()); }
		ruleQuantityType
		{ after(grammarAccess.getTypeAccess().getQuantityTypeParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getArrayTypeParserRuleCall_2()); }
		ruleArrayType
		{ after(grammarAccess.getTypeAccess().getArrayTypeParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getRecordTypeParserRuleCall_3()); }
		ruleRecordType
		{ after(grammarAccess.getTypeAccess().getRecordTypeParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getBooleanTypeParserRuleCall_4()); }
		ruleBooleanType
		{ after(grammarAccess.getTypeAccess().getBooleanTypeParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getStringTypeParserRuleCall_5()); }
		ruleStringType
		{ after(grammarAccess.getTypeAccess().getStringTypeParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getNullTypeParserRuleCall_6()); }
		ruleNullType
		{ after(grammarAccess.getTypeAccess().getNullTypeParserRuleCall_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BLESSGrammarRoots__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BLESSGrammarRoots__Group_0__0__Impl
	rule__BLESSGrammarRoots__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BLESSGrammarRoots__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBLESSGrammarRootsAccess().getUnitlibraryKeyword_0_0()); }
	'unitlibrary'
	{ after(grammarAccess.getBLESSGrammarRootsAccess().getUnitlibraryKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BLESSGrammarRoots__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BLESSGrammarRoots__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BLESSGrammarRoots__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBLESSGrammarRootsAccess().getUnit_libraryAssignment_0_1()); }
	(rule__BLESSGrammarRoots__Unit_libraryAssignment_0_1)
	{ after(grammarAccess.getBLESSGrammarRootsAccess().getUnit_libraryAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BLESSGrammarRoots__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BLESSGrammarRoots__Group_1__0__Impl
	rule__BLESSGrammarRoots__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BLESSGrammarRoots__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBLESSGrammarRootsAccess().getTypelibraryKeyword_1_0()); }
	'typelibrary'
	{ after(grammarAccess.getBLESSGrammarRootsAccess().getTypelibraryKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BLESSGrammarRoots__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BLESSGrammarRoots__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BLESSGrammarRoots__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBLESSGrammarRootsAccess().getType_libraryAssignment_1_1()); }
	(rule__BLESSGrammarRoots__Type_libraryAssignment_1_1)
	{ after(grammarAccess.getBLESSGrammarRootsAccess().getType_libraryAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BLESSGrammarRoots__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BLESSGrammarRoots__Group_2__0__Impl
	rule__BLESSGrammarRoots__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BLESSGrammarRoots__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBLESSGrammarRootsAccess().getAssertionlibraryKeyword_2_0()); }
	'assertionlibrary'
	{ after(grammarAccess.getBLESSGrammarRootsAccess().getAssertionlibraryKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BLESSGrammarRoots__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BLESSGrammarRoots__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BLESSGrammarRoots__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBLESSGrammarRootsAccess().getAssertion_libraryAssignment_2_1()); }
	(rule__BLESSGrammarRoots__Assertion_libraryAssignment_2_1)
	{ after(grammarAccess.getBLESSGrammarRootsAccess().getAssertion_libraryAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BLESSGrammarRoots__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BLESSGrammarRoots__Group_3__0__Impl
	rule__BLESSGrammarRoots__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BLESSGrammarRoots__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBLESSGrammarRootsAccess().getActionsubclauseKeyword_3_0()); }
	'actionsubclause'
	{ after(grammarAccess.getBLESSGrammarRootsAccess().getActionsubclauseKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BLESSGrammarRoots__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BLESSGrammarRoots__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BLESSGrammarRoots__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBLESSGrammarRootsAccess().getAction_subclauseAssignment_3_1()); }
	(rule__BLESSGrammarRoots__Action_subclauseAssignment_3_1)
	{ after(grammarAccess.getBLESSGrammarRootsAccess().getAction_subclauseAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BLESSGrammarRoots__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BLESSGrammarRoots__Group_4__0__Impl
	rule__BLESSGrammarRoots__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BLESSGrammarRoots__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBLESSGrammarRootsAccess().getExceptionsKeyword_4_0()); }
	'exceptions'
	{ after(grammarAccess.getBLESSGrammarRootsAccess().getExceptionsKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BLESSGrammarRoots__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BLESSGrammarRoots__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BLESSGrammarRoots__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBLESSGrammarRootsAccess().getException_libraryAssignment_4_1()); }
	(rule__BLESSGrammarRoots__Exception_libraryAssignment_4_1)
	{ after(grammarAccess.getBLESSGrammarRootsAccess().getException_libraryAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BLESSGrammarRoots__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BLESSGrammarRoots__Group_5__0__Impl
	rule__BLESSGrammarRoots__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BLESSGrammarRoots__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBLESSGrammarRootsAccess().getBlesssubclauseKeyword_5_0()); }
	'blesssubclause'
	{ after(grammarAccess.getBLESSGrammarRootsAccess().getBlesssubclauseKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BLESSGrammarRoots__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BLESSGrammarRoots__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BLESSGrammarRoots__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBLESSGrammarRootsAccess().getBless_subclauseAssignment_5_1()); }
	(rule__BLESSGrammarRoots__Bless_subclauseAssignment_5_1)
	{ after(grammarAccess.getBLESSGrammarRootsAccess().getBless_subclauseAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BLESSSubclause__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BLESSSubclause__Group__0__Impl
	rule__BLESSSubclause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BLESSSubclause__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBLESSSubclauseAccess().getBLESSSubclauseAction_0()); }
	()
	{ after(grammarAccess.getBLESSSubclauseAccess().getBLESSSubclauseAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BLESSSubclause__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BLESSSubclause__Group__1__Impl
	rule__BLESSSubclause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BLESSSubclause__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBLESSSubclauseAccess().getNo_proofAssignment_1()); }
	(rule__BLESSSubclause__No_proofAssignment_1)?
	{ after(grammarAccess.getBLESSSubclauseAccess().getNo_proofAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BLESSSubclause__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BLESSSubclause__Group__2__Impl
	rule__BLESSSubclause__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BLESSSubclause__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBLESSSubclauseAccess().getAssert_clauseAssignment_2()); }
	(rule__BLESSSubclause__Assert_clauseAssignment_2)?
	{ after(grammarAccess.getBLESSSubclauseAccess().getAssert_clauseAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BLESSSubclause__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BLESSSubclause__Group__3__Impl
	rule__BLESSSubclause__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BLESSSubclause__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBLESSSubclauseAccess().getInvariantAssignment_3()); }
	(rule__BLESSSubclause__InvariantAssignment_3)?
	{ after(grammarAccess.getBLESSSubclauseAccess().getInvariantAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BLESSSubclause__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BLESSSubclause__Group__4__Impl
	rule__BLESSSubclause__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__BLESSSubclause__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBLESSSubclauseAccess().getVariablesAssignment_4()); }
	(rule__BLESSSubclause__VariablesAssignment_4)?
	{ after(grammarAccess.getBLESSSubclauseAccess().getVariablesAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BLESSSubclause__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BLESSSubclause__Group__5__Impl
	rule__BLESSSubclause__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__BLESSSubclause__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBLESSSubclauseAccess().getStatesSectionAssignment_5()); }
	(rule__BLESSSubclause__StatesSectionAssignment_5)?
	{ after(grammarAccess.getBLESSSubclauseAccess().getStatesSectionAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BLESSSubclause__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BLESSSubclause__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BLESSSubclause__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBLESSSubclauseAccess().getTransitionsAssignment_6()); }
	(rule__BLESSSubclause__TransitionsAssignment_6)?
	{ after(grammarAccess.getBLESSSubclauseAccess().getTransitionsAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AssertionLibrary__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssertionLibrary__Group__0__Impl
	rule__AssertionLibrary__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssertionLibrary__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssertionLibraryAccess().getAssertionLibraryAction_0()); }
	()
	{ after(grammarAccess.getAssertionLibraryAccess().getAssertionLibraryAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssertionLibrary__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssertionLibrary__Group__1__Impl
	rule__AssertionLibrary__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AssertionLibrary__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssertionLibraryAccess().getGhostsAssignment_1()); }
	(rule__AssertionLibrary__GhostsAssignment_1)?
	{ after(grammarAccess.getAssertionLibraryAccess().getGhostsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssertionLibrary__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssertionLibrary__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssertionLibrary__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssertionLibraryAccess().getAssertion_listAssignment_2()); }
	(rule__AssertionLibrary__Assertion_listAssignment_2)*
	{ after(grammarAccess.getAssertionLibraryAccess().getAssertion_listAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExceptionLibrary__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExceptionLibrary__Group__0__Impl
	rule__ExceptionLibrary__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExceptionLibrary__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExceptionLibraryAccess().getExceptionLibraryAction_0()); }
	()
	{ after(grammarAccess.getExceptionLibraryAccess().getExceptionLibraryAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExceptionLibrary__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExceptionLibrary__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExceptionLibrary__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getExceptionLibraryAccess().getExceptiondefinitionsAssignment_1()); }
		(rule__ExceptionLibrary__ExceptiondefinitionsAssignment_1)
		{ after(grammarAccess.getExceptionLibraryAccess().getExceptiondefinitionsAssignment_1()); }
	)
	(
		{ before(grammarAccess.getExceptionLibraryAccess().getExceptiondefinitionsAssignment_1()); }
		(rule__ExceptionLibrary__ExceptiondefinitionsAssignment_1)*
		{ after(grammarAccess.getExceptionLibraryAccess().getExceptiondefinitionsAssignment_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ActionSubclause__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionSubclause__Group__0__Impl
	rule__ActionSubclause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionSubclause__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionSubclauseAccess().getActionSubclauseAction_0()); }
	()
	{ after(grammarAccess.getActionSubclauseAccess().getActionSubclauseAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionSubclause__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionSubclause__Group__1__Impl
	rule__ActionSubclause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionSubclause__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionSubclauseAccess().getNo_proofAssignment_1()); }
	(rule__ActionSubclause__No_proofAssignment_1)?
	{ after(grammarAccess.getActionSubclauseAccess().getNo_proofAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionSubclause__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionSubclause__Group__2__Impl
	rule__ActionSubclause__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionSubclause__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionSubclauseAccess().getThrows_clauseAssignment_2()); }
	(rule__ActionSubclause__Throws_clauseAssignment_2)?
	{ after(grammarAccess.getActionSubclauseAccess().getThrows_clauseAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionSubclause__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionSubclause__Group__3__Impl
	rule__ActionSubclause__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionSubclause__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionSubclauseAccess().getAssert_clauseAssignment_3()); }
	(rule__ActionSubclause__Assert_clauseAssignment_3)?
	{ after(grammarAccess.getActionSubclauseAccess().getAssert_clauseAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionSubclause__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionSubclause__Group__4__Impl
	rule__ActionSubclause__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionSubclause__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionSubclauseAccess().getGroup_4()); }
	(rule__ActionSubclause__Group_4__0)?
	{ after(grammarAccess.getActionSubclauseAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionSubclause__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionSubclause__Group__5__Impl
	rule__ActionSubclause__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionSubclause__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionSubclauseAccess().getGroup_5()); }
	(rule__ActionSubclause__Group_5__0)?
	{ after(grammarAccess.getActionSubclauseAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionSubclause__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionSubclause__Group__6__Impl
	rule__ActionSubclause__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionSubclause__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionSubclauseAccess().getGroup_6()); }
	(rule__ActionSubclause__Group_6__0)?
	{ after(grammarAccess.getActionSubclauseAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionSubclause__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionSubclause__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionSubclause__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionSubclauseAccess().getElqAssignment_7()); }
	(rule__ActionSubclause__ElqAssignment_7)
	{ after(grammarAccess.getActionSubclauseAccess().getElqAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ActionSubclause__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionSubclause__Group_4__0__Impl
	rule__ActionSubclause__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionSubclause__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionSubclauseAccess().getPreKeyword_4_0()); }
	'pre'
	{ after(grammarAccess.getActionSubclauseAccess().getPreKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionSubclause__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionSubclause__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionSubclause__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionSubclauseAccess().getPreconditionAssignment_4_1()); }
	(rule__ActionSubclause__PreconditionAssignment_4_1)
	{ after(grammarAccess.getActionSubclauseAccess().getPreconditionAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ActionSubclause__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionSubclause__Group_5__0__Impl
	rule__ActionSubclause__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionSubclause__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionSubclauseAccess().getPostKeyword_5_0()); }
	'post'
	{ after(grammarAccess.getActionSubclauseAccess().getPostKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionSubclause__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionSubclause__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionSubclause__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionSubclauseAccess().getPostconditionAssignment_5_1()); }
	(rule__ActionSubclause__PostconditionAssignment_5_1)
	{ after(grammarAccess.getActionSubclauseAccess().getPostconditionAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ActionSubclause__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionSubclause__Group_6__0__Impl
	rule__ActionSubclause__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionSubclause__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionSubclauseAccess().getInvariantKeyword_6_0()); }
	'invariant'
	{ after(grammarAccess.getActionSubclauseAccess().getInvariantKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionSubclause__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionSubclause__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionSubclause__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionSubclauseAccess().getInvariantAssignment_6_1()); }
	(rule__ActionSubclause__InvariantAssignment_6_1)
	{ after(grammarAccess.getActionSubclauseAccess().getInvariantAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InvariantClause__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InvariantClause__Group__0__Impl
	rule__InvariantClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InvariantClause__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInvariantClauseAccess().getInvariantKeyword_0()); }
	'invariant'
	{ after(grammarAccess.getInvariantClauseAccess().getInvariantKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InvariantClause__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InvariantClause__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InvariantClause__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInvariantClauseAccess().getInvAssignment_1()); }
	(rule__InvariantClause__InvAssignment_1)
	{ after(grammarAccess.getInvariantClauseAccess().getInvAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariablesSection__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariablesSection__Group__0__Impl
	rule__VariablesSection__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariablesSection__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariablesSectionAccess().getVariablesKeyword_0()); }
	'variables'
	{ after(grammarAccess.getVariablesSectionAccess().getVariablesKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariablesSection__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariablesSection__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariablesSection__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getVariablesSectionAccess().getBehavior_variablesAssignment_1()); }
		(rule__VariablesSection__Behavior_variablesAssignment_1)
		{ after(grammarAccess.getVariablesSectionAccess().getBehavior_variablesAssignment_1()); }
	)
	(
		{ before(grammarAccess.getVariablesSectionAccess().getBehavior_variablesAssignment_1()); }
		(rule__VariablesSection__Behavior_variablesAssignment_1)*
		{ after(grammarAccess.getVariablesSectionAccess().getBehavior_variablesAssignment_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StatesSection__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatesSection__Group__0__Impl
	rule__StatesSection__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StatesSection__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatesSectionAccess().getStAssignment_0()); }
	(rule__StatesSection__StAssignment_0)
	{ after(grammarAccess.getStatesSectionAccess().getStAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatesSection__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatesSection__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StatesSection__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getStatesSectionAccess().getStatesAssignment_1()); }
		(rule__StatesSection__StatesAssignment_1)
		{ after(grammarAccess.getStatesSectionAccess().getStatesAssignment_1()); }
	)
	(
		{ before(grammarAccess.getStatesSectionAccess().getStatesAssignment_1()); }
		(rule__StatesSection__StatesAssignment_1)*
		{ after(grammarAccess.getStatesSectionAccess().getStatesAssignment_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BehaviorState__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BehaviorState__Group__0__Impl
	rule__BehaviorState__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorState__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorStateAccess().getNameAssignment_0()); }
	(rule__BehaviorState__NameAssignment_0)
	{ after(grammarAccess.getBehaviorStateAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorState__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BehaviorState__Group__1__Impl
	rule__BehaviorState__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorState__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorStateAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getBehaviorStateAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorState__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BehaviorState__Group__2__Impl
	rule__BehaviorState__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorState__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorStateAccess().getInitialAssignment_2()); }
	(rule__BehaviorState__InitialAssignment_2)?
	{ after(grammarAccess.getBehaviorStateAccess().getInitialAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorState__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BehaviorState__Group__3__Impl
	rule__BehaviorState__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorState__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorStateAccess().getCompleteAssignment_3()); }
	(rule__BehaviorState__CompleteAssignment_3)?
	{ after(grammarAccess.getBehaviorStateAccess().getCompleteAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorState__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BehaviorState__Group__4__Impl
	rule__BehaviorState__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorState__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorStateAccess().getFinalAssignment_4()); }
	(rule__BehaviorState__FinalAssignment_4)?
	{ after(grammarAccess.getBehaviorStateAccess().getFinalAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorState__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BehaviorState__Group__5__Impl
	rule__BehaviorState__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorState__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorStateAccess().getModeAssignment_5()); }
	(rule__BehaviorState__ModeAssignment_5)?
	{ after(grammarAccess.getBehaviorStateAccess().getModeAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorState__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BehaviorState__Group__6__Impl
	rule__BehaviorState__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorState__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorStateAccess().getStateKeyword_6()); }
	'state'
	{ after(grammarAccess.getBehaviorStateAccess().getStateKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorState__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BehaviorState__Group__7__Impl
	rule__BehaviorState__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorState__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorStateAccess().getState_assertionAssignment_7()); }
	(rule__BehaviorState__State_assertionAssignment_7)?
	{ after(grammarAccess.getBehaviorStateAccess().getState_assertionAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorState__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BehaviorState__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorState__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorStateAccess().getSemicolonKeyword_8()); }
	(';')?
	{ after(grammarAccess.getBehaviorStateAccess().getSemicolonKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Transitions__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transitions__Group__0__Impl
	rule__Transitions__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transitions__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionsAccess().getTransitionsKeyword_0()); }
	'transitions'
	{ after(grammarAccess.getTransitionsAccess().getTransitionsKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transitions__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transitions__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transitions__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getTransitionsAccess().getBtAssignment_1()); }
		(rule__Transitions__BtAssignment_1)
		{ after(grammarAccess.getTransitionsAccess().getBtAssignment_1()); }
	)
	(
		{ before(grammarAccess.getTransitionsAccess().getBtAssignment_1()); }
		(rule__Transitions__BtAssignment_1)*
		{ after(grammarAccess.getTransitionsAccess().getBtAssignment_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BehaviorTransition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BehaviorTransition__Group__0__Impl
	rule__BehaviorTransition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorTransition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorTransitionAccess().getNameAssignment_0()); }
	(rule__BehaviorTransition__NameAssignment_0)
	{ after(grammarAccess.getBehaviorTransitionAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorTransition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BehaviorTransition__Group__1__Impl
	rule__BehaviorTransition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorTransition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorTransitionAccess().getPriorityAssignment_1()); }
	(rule__BehaviorTransition__PriorityAssignment_1)?
	{ after(grammarAccess.getBehaviorTransitionAccess().getPriorityAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorTransition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BehaviorTransition__Group__2__Impl
	rule__BehaviorTransition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorTransition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorTransitionAccess().getColonAssignment_2()); }
	(rule__BehaviorTransition__ColonAssignment_2)
	{ after(grammarAccess.getBehaviorTransitionAccess().getColonAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorTransition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BehaviorTransition__Group__3__Impl
	rule__BehaviorTransition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorTransition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorTransitionAccess().getGroup_3()); }
	(rule__BehaviorTransition__Group_3__0)
	{ after(grammarAccess.getBehaviorTransitionAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorTransition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BehaviorTransition__Group__4__Impl
	rule__BehaviorTransition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorTransition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorTransitionAccess().getHyphenMinusLeftSquareBracketKeyword_4()); }
	'-['
	{ after(grammarAccess.getBehaviorTransitionAccess().getHyphenMinusLeftSquareBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorTransition__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BehaviorTransition__Group__5__Impl
	rule__BehaviorTransition__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorTransition__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorTransitionAccess().getAlternatives_5()); }
	(rule__BehaviorTransition__Alternatives_5)?
	{ after(grammarAccess.getBehaviorTransitionAccess().getAlternatives_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorTransition__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BehaviorTransition__Group__6__Impl
	rule__BehaviorTransition__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorTransition__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorTransitionAccess().getRightSquareBracketHyphenMinusGreaterThanSignKeyword_6()); }
	']->'
	{ after(grammarAccess.getBehaviorTransitionAccess().getRightSquareBracketHyphenMinusGreaterThanSignKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorTransition__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BehaviorTransition__Group__7__Impl
	rule__BehaviorTransition__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorTransition__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorTransitionAccess().getDestinationAssignment_7()); }
	(rule__BehaviorTransition__DestinationAssignment_7)
	{ after(grammarAccess.getBehaviorTransitionAccess().getDestinationAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorTransition__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BehaviorTransition__Group__8__Impl
	rule__BehaviorTransition__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorTransition__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorTransitionAccess().getGroup_8()); }
	(rule__BehaviorTransition__Group_8__0)?
	{ after(grammarAccess.getBehaviorTransitionAccess().getGroup_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorTransition__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BehaviorTransition__Group__9__Impl
	rule__BehaviorTransition__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorTransition__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorTransitionAccess().getAssAssignment_9()); }
	(rule__BehaviorTransition__AssAssignment_9)?
	{ after(grammarAccess.getBehaviorTransitionAccess().getAssAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorTransition__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BehaviorTransition__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorTransition__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorTransitionAccess().getSemicolonKeyword_10()); }
	(';')?
	{ after(grammarAccess.getBehaviorTransitionAccess().getSemicolonKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BehaviorTransition__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BehaviorTransition__Group_3__0__Impl
	rule__BehaviorTransition__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorTransition__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorTransitionAccess().getSourcesAssignment_3_0()); }
	(rule__BehaviorTransition__SourcesAssignment_3_0)
	{ after(grammarAccess.getBehaviorTransitionAccess().getSourcesAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorTransition__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BehaviorTransition__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorTransition__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorTransitionAccess().getGroup_3_1()); }
	(rule__BehaviorTransition__Group_3_1__0)*
	{ after(grammarAccess.getBehaviorTransitionAccess().getGroup_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BehaviorTransition__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BehaviorTransition__Group_3_1__0__Impl
	rule__BehaviorTransition__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorTransition__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorTransitionAccess().getCommaKeyword_3_1_0()); }
	','
	{ after(grammarAccess.getBehaviorTransitionAccess().getCommaKeyword_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorTransition__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BehaviorTransition__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorTransition__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorTransitionAccess().getSourcesAssignment_3_1_1()); }
	(rule__BehaviorTransition__SourcesAssignment_3_1_1)
	{ after(grammarAccess.getBehaviorTransitionAccess().getSourcesAssignment_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BehaviorTransition__Group_8__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BehaviorTransition__Group_8__0__Impl
	rule__BehaviorTransition__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorTransition__Group_8__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorTransitionAccess().getLeftCurlyBracketKeyword_8_0()); }
	'{'
	{ after(grammarAccess.getBehaviorTransitionAccess().getLeftCurlyBracketKeyword_8_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorTransition__Group_8__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BehaviorTransition__Group_8__1__Impl
	rule__BehaviorTransition__Group_8__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorTransition__Group_8__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorTransitionAccess().getActionsAssignment_8_1()); }
	(rule__BehaviorTransition__ActionsAssignment_8_1)?
	{ after(grammarAccess.getBehaviorTransitionAccess().getActionsAssignment_8_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorTransition__Group_8__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BehaviorTransition__Group_8__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorTransition__Group_8__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorTransitionAccess().getRightCurlyBracketKeyword_8_2()); }
	'}'
	{ after(grammarAccess.getBehaviorTransitionAccess().getRightCurlyBracketKeyword_8_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Priority__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Priority__Group__0__Impl
	rule__Priority__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Priority__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPriorityAccess().getLeftSquareBracketKeyword_0()); }
	'['
	{ after(grammarAccess.getPriorityAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Priority__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Priority__Group__1__Impl
	rule__Priority__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Priority__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPriorityAccess().getPriorityAssignment_1()); }
	(rule__Priority__PriorityAssignment_1)
	{ after(grammarAccess.getPriorityAccess().getPriorityAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Priority__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Priority__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Priority__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPriorityAccess().getRightSquareBracketKeyword_2()); }
	']'
	{ after(grammarAccess.getPriorityAccess().getRightSquareBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DispatchCondition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DispatchCondition__Group__0__Impl
	rule__DispatchCondition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DispatchCondition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDispatchConditionAccess().getOnKeyword_0()); }
	'on'
	{ after(grammarAccess.getDispatchConditionAccess().getOnKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DispatchCondition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DispatchCondition__Group__1__Impl
	rule__DispatchCondition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DispatchCondition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDispatchConditionAccess().getDispatchAssignment_1()); }
	(rule__DispatchCondition__DispatchAssignment_1)
	{ after(grammarAccess.getDispatchConditionAccess().getDispatchAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DispatchCondition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DispatchCondition__Group__2__Impl
	rule__DispatchCondition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DispatchCondition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDispatchConditionAccess().getDeAssignment_2()); }
	(rule__DispatchCondition__DeAssignment_2)?
	{ after(grammarAccess.getDispatchConditionAccess().getDeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DispatchCondition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DispatchCondition__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DispatchCondition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDispatchConditionAccess().getFrozenAssignment_3()); }
	(rule__DispatchCondition__FrozenAssignment_3)?
	{ after(grammarAccess.getDispatchConditionAccess().getFrozenAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DispatchExpression__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DispatchExpression__Group_0__0__Impl
	rule__DispatchExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DispatchExpression__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDispatchExpressionAccess().getDcAssignment_0_0()); }
	(rule__DispatchExpression__DcAssignment_0_0)
	{ after(grammarAccess.getDispatchExpressionAccess().getDcAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DispatchExpression__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DispatchExpression__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DispatchExpression__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDispatchExpressionAccess().getGroup_0_1()); }
	(rule__DispatchExpression__Group_0_1__0)?
	{ after(grammarAccess.getDispatchExpressionAccess().getGroup_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DispatchExpression__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DispatchExpression__Group_0_1__0__Impl
	rule__DispatchExpression__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DispatchExpression__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDispatchExpressionAccess().getOrAssignment_0_1_0()); }
	(rule__DispatchExpression__OrAssignment_0_1_0)
	{ after(grammarAccess.getDispatchExpressionAccess().getOrAssignment_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DispatchExpression__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DispatchExpression__Group_0_1__1__Impl
	rule__DispatchExpression__Group_0_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DispatchExpression__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDispatchExpressionAccess().getDcAssignment_0_1_1()); }
	(rule__DispatchExpression__DcAssignment_0_1_1)
	{ after(grammarAccess.getDispatchExpressionAccess().getDcAssignment_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DispatchExpression__Group_0_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DispatchExpression__Group_0_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DispatchExpression__Group_0_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDispatchExpressionAccess().getGroup_0_1_2()); }
	(rule__DispatchExpression__Group_0_1_2__0)*
	{ after(grammarAccess.getDispatchExpressionAccess().getGroup_0_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DispatchExpression__Group_0_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DispatchExpression__Group_0_1_2__0__Impl
	rule__DispatchExpression__Group_0_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DispatchExpression__Group_0_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDispatchExpressionAccess().getOrKeyword_0_1_2_0()); }
	'or'
	{ after(grammarAccess.getDispatchExpressionAccess().getOrKeyword_0_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DispatchExpression__Group_0_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DispatchExpression__Group_0_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DispatchExpression__Group_0_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDispatchExpressionAccess().getDcAssignment_0_1_2_1()); }
	(rule__DispatchExpression__DcAssignment_0_1_2_1)
	{ after(grammarAccess.getDispatchExpressionAccess().getDcAssignment_0_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SubprogramAccessDispatch__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubprogramAccessDispatch__Group__0__Impl
	rule__SubprogramAccessDispatch__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SubprogramAccessDispatch__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubprogramAccessDispatchAccess().getAccessKeyword_0()); }
	'access'
	{ after(grammarAccess.getSubprogramAccessDispatchAccess().getAccessKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubprogramAccessDispatch__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubprogramAccessDispatch__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SubprogramAccessDispatch__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubprogramAccessDispatchAccess().getAccessAssignment_1()); }
	(rule__SubprogramAccessDispatch__AccessAssignment_1)
	{ after(grammarAccess.getSubprogramAccessDispatchAccess().getAccessAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DispatchConjunction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DispatchConjunction__Group__0__Impl
	rule__DispatchConjunction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DispatchConjunction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDispatchConjunctionAccess().getTriggerAssignment_0()); }
	(rule__DispatchConjunction__TriggerAssignment_0)
	{ after(grammarAccess.getDispatchConjunctionAccess().getTriggerAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DispatchConjunction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DispatchConjunction__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DispatchConjunction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDispatchConjunctionAccess().getGroup_1()); }
	(rule__DispatchConjunction__Group_1__0)?
	{ after(grammarAccess.getDispatchConjunctionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DispatchConjunction__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DispatchConjunction__Group_1__0__Impl
	rule__DispatchConjunction__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DispatchConjunction__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDispatchConjunctionAccess().getAndAssignment_1_0()); }
	(rule__DispatchConjunction__AndAssignment_1_0)
	{ after(grammarAccess.getDispatchConjunctionAccess().getAndAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DispatchConjunction__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DispatchConjunction__Group_1__1__Impl
	rule__DispatchConjunction__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DispatchConjunction__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDispatchConjunctionAccess().getTriggerAssignment_1_1()); }
	(rule__DispatchConjunction__TriggerAssignment_1_1)
	{ after(grammarAccess.getDispatchConjunctionAccess().getTriggerAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DispatchConjunction__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DispatchConjunction__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DispatchConjunction__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDispatchConjunctionAccess().getGroup_1_2()); }
	(rule__DispatchConjunction__Group_1_2__0)*
	{ after(grammarAccess.getDispatchConjunctionAccess().getGroup_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DispatchConjunction__Group_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DispatchConjunction__Group_1_2__0__Impl
	rule__DispatchConjunction__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DispatchConjunction__Group_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDispatchConjunctionAccess().getAndKeyword_1_2_0()); }
	'and'
	{ after(grammarAccess.getDispatchConjunctionAccess().getAndKeyword_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DispatchConjunction__Group_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DispatchConjunction__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DispatchConjunction__Group_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDispatchConjunctionAccess().getTriggerAssignment_1_2_1()); }
	(rule__DispatchConjunction__TriggerAssignment_1_2_1)
	{ after(grammarAccess.getDispatchConjunctionAccess().getTriggerAssignment_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DispatchTrigger__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DispatchTrigger__Group_1__0__Impl
	rule__DispatchTrigger__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DispatchTrigger__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDispatchTriggerAccess().getTimeoutAssignment_1_0()); }
	(rule__DispatchTrigger__TimeoutAssignment_1_0)
	{ after(grammarAccess.getDispatchTriggerAccess().getTimeoutAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DispatchTrigger__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DispatchTrigger__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DispatchTrigger__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDispatchTriggerAccess().getGroup_1_1()); }
	(rule__DispatchTrigger__Group_1_1__0)?
	{ after(grammarAccess.getDispatchTriggerAccess().getGroup_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DispatchTrigger__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DispatchTrigger__Group_1_1__0__Impl
	rule__DispatchTrigger__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DispatchTrigger__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDispatchTriggerAccess().getGroup_1_1_0()); }
	(rule__DispatchTrigger__Group_1_1_0__0)?
	{ after(grammarAccess.getDispatchTriggerAccess().getGroup_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DispatchTrigger__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DispatchTrigger__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DispatchTrigger__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDispatchTriggerAccess().getTimeAssignment_1_1_1()); }
	(rule__DispatchTrigger__TimeAssignment_1_1_1)
	{ after(grammarAccess.getDispatchTriggerAccess().getTimeAssignment_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DispatchTrigger__Group_1_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DispatchTrigger__Group_1_1_0__0__Impl
	rule__DispatchTrigger__Group_1_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DispatchTrigger__Group_1_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDispatchTriggerAccess().getLpAssignment_1_1_0_0()); }
	(rule__DispatchTrigger__LpAssignment_1_1_0_0)
	{ after(grammarAccess.getDispatchTriggerAccess().getLpAssignment_1_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DispatchTrigger__Group_1_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DispatchTrigger__Group_1_1_0__1__Impl
	rule__DispatchTrigger__Group_1_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DispatchTrigger__Group_1_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDispatchTriggerAccess().getPortsAssignment_1_1_0_1()); }
	(rule__DispatchTrigger__PortsAssignment_1_1_0_1)
	{ after(grammarAccess.getDispatchTriggerAccess().getPortsAssignment_1_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DispatchTrigger__Group_1_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DispatchTrigger__Group_1_1_0__2__Impl
	rule__DispatchTrigger__Group_1_1_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DispatchTrigger__Group_1_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDispatchTriggerAccess().getGroup_1_1_0_2()); }
	(rule__DispatchTrigger__Group_1_1_0_2__0)*
	{ after(grammarAccess.getDispatchTriggerAccess().getGroup_1_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DispatchTrigger__Group_1_1_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DispatchTrigger__Group_1_1_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DispatchTrigger__Group_1_1_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDispatchTriggerAccess().getRightParenthesisKeyword_1_1_0_3()); }
	')'
	{ after(grammarAccess.getDispatchTriggerAccess().getRightParenthesisKeyword_1_1_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DispatchTrigger__Group_1_1_0_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DispatchTrigger__Group_1_1_0_2__0__Impl
	rule__DispatchTrigger__Group_1_1_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DispatchTrigger__Group_1_1_0_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDispatchTriggerAccess().getOrKeyword_1_1_0_2_0()); }
	('or')?
	{ after(grammarAccess.getDispatchTriggerAccess().getOrKeyword_1_1_0_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DispatchTrigger__Group_1_1_0_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DispatchTrigger__Group_1_1_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DispatchTrigger__Group_1_1_0_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDispatchTriggerAccess().getPortsAssignment_1_1_0_2_1()); }
	(rule__DispatchTrigger__PortsAssignment_1_1_0_2_1)
	{ after(grammarAccess.getDispatchTriggerAccess().getPortsAssignment_1_1_0_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PortName__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PortName__Group__0__Impl
	rule__PortName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PortName__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortNameAccess().getPortAssignment_0()); }
	(rule__PortName__PortAssignment_0)
	{ after(grammarAccess.getPortNameAccess().getPortAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PortName__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PortName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PortName__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortNameAccess().getGroup_1()); }
	(rule__PortName__Group_1__0)?
	{ after(grammarAccess.getPortNameAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PortName__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PortName__Group_1__0__Impl
	rule__PortName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PortName__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortNameAccess().getLeftSquareBracketKeyword_1_0()); }
	'['
	{ after(grammarAccess.getPortNameAccess().getLeftSquareBracketKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PortName__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PortName__Group_1__1__Impl
	rule__PortName__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PortName__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortNameAccess().getIndexAssignment_1_1()); }
	(rule__PortName__IndexAssignment_1_1)
	{ after(grammarAccess.getPortNameAccess().getIndexAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PortName__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PortName__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PortName__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortNameAccess().getRightSquareBracketKeyword_1_2()); }
	']'
	{ after(grammarAccess.getPortNameAccess().getRightSquareBracketKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ModeCondition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModeCondition__Group__0__Impl
	rule__ModeCondition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModeCondition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModeConditionAccess().getOnKeyword_0()); }
	'on'
	{ after(grammarAccess.getModeConditionAccess().getOnKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModeCondition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModeCondition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModeCondition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModeConditionAccess().getTleAssignment_1()); }
	(rule__ModeCondition__TleAssignment_1)
	{ after(grammarAccess.getModeConditionAccess().getTleAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TriggerLogicalExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TriggerLogicalExpression__Group__0__Impl
	rule__TriggerLogicalExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TriggerLogicalExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTriggerLogicalExpressionAccess().getFirstAssignment_0()); }
	(rule__TriggerLogicalExpression__FirstAssignment_0)
	{ after(grammarAccess.getTriggerLogicalExpressionAccess().getFirstAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TriggerLogicalExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TriggerLogicalExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TriggerLogicalExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTriggerLogicalExpressionAccess().getGroup_1()); }
	(rule__TriggerLogicalExpression__Group_1__0)?
	{ after(grammarAccess.getTriggerLogicalExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TriggerLogicalExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TriggerLogicalExpression__Group_1__0__Impl
	rule__TriggerLogicalExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TriggerLogicalExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTriggerLogicalExpressionAccess().getOpAssignment_1_0()); }
	(rule__TriggerLogicalExpression__OpAssignment_1_0)
	{ after(grammarAccess.getTriggerLogicalExpressionAccess().getOpAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TriggerLogicalExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TriggerLogicalExpression__Group_1__1__Impl
	rule__TriggerLogicalExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TriggerLogicalExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTriggerLogicalExpressionAccess().getTriggerAssignment_1_1()); }
	(rule__TriggerLogicalExpression__TriggerAssignment_1_1)
	{ after(grammarAccess.getTriggerLogicalExpressionAccess().getTriggerAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TriggerLogicalExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TriggerLogicalExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TriggerLogicalExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTriggerLogicalExpressionAccess().getGroup_1_2()); }
	(rule__TriggerLogicalExpression__Group_1_2__0)*
	{ after(grammarAccess.getTriggerLogicalExpressionAccess().getGroup_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TriggerLogicalExpression__Group_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TriggerLogicalExpression__Group_1_2__0__Impl
	rule__TriggerLogicalExpression__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TriggerLogicalExpression__Group_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTriggerLogicalExpressionAccess().getOpsAssignment_1_2_0()); }
	(rule__TriggerLogicalExpression__OpsAssignment_1_2_0)
	{ after(grammarAccess.getTriggerLogicalExpressionAccess().getOpsAssignment_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TriggerLogicalExpression__Group_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TriggerLogicalExpression__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TriggerLogicalExpression__Group_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTriggerLogicalExpressionAccess().getTriggerAssignment_1_2_1()); }
	(rule__TriggerLogicalExpression__TriggerAssignment_1_2_1)
	{ after(grammarAccess.getTriggerLogicalExpressionAccess().getTriggerAssignment_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EventTrigger__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EventTrigger__Group_0__0__Impl
	rule__EventTrigger__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EventTrigger__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventTriggerAccess().getSubAssignment_0_0()); }
	(rule__EventTrigger__SubAssignment_0_0)
	{ after(grammarAccess.getEventTriggerAccess().getSubAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventTrigger__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EventTrigger__Group_0__1__Impl
	rule__EventTrigger__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EventTrigger__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventTriggerAccess().getGroup_0_1()); }
	(rule__EventTrigger__Group_0_1__0)*
	{ after(grammarAccess.getEventTriggerAccess().getGroup_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventTrigger__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EventTrigger__Group_0__2__Impl
	rule__EventTrigger__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EventTrigger__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventTriggerAccess().getFullStopKeyword_0_2()); }
	'.'
	{ after(grammarAccess.getEventTriggerAccess().getFullStopKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventTrigger__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EventTrigger__Group_0__3__Impl
	rule__EventTrigger__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EventTrigger__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventTriggerAccess().getSubAssignment_0_3()); }
	(rule__EventTrigger__SubAssignment_0_3)
	{ after(grammarAccess.getEventTriggerAccess().getSubAssignment_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventTrigger__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EventTrigger__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EventTrigger__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventTriggerAccess().getGroup_0_4()); }
	(rule__EventTrigger__Group_0_4__0)?
	{ after(grammarAccess.getEventTriggerAccess().getGroup_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EventTrigger__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EventTrigger__Group_0_1__0__Impl
	rule__EventTrigger__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EventTrigger__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventTriggerAccess().getFullStopKeyword_0_1_0()); }
	'.'
	{ after(grammarAccess.getEventTriggerAccess().getFullStopKeyword_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventTrigger__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EventTrigger__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EventTrigger__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventTriggerAccess().getSubAssignment_0_1_1()); }
	(rule__EventTrigger__SubAssignment_0_1_1)
	{ after(grammarAccess.getEventTriggerAccess().getSubAssignment_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EventTrigger__Group_0_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EventTrigger__Group_0_4__0__Impl
	rule__EventTrigger__Group_0_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EventTrigger__Group_0_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventTriggerAccess().getLeftSquareBracketKeyword_0_4_0()); }
	'['
	{ after(grammarAccess.getEventTriggerAccess().getLeftSquareBracketKeyword_0_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventTrigger__Group_0_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EventTrigger__Group_0_4__1__Impl
	rule__EventTrigger__Group_0_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EventTrigger__Group_0_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventTriggerAccess().getIndexAssignment_0_4_1()); }
	(rule__EventTrigger__IndexAssignment_0_4_1)
	{ after(grammarAccess.getEventTriggerAccess().getIndexAssignment_0_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventTrigger__Group_0_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EventTrigger__Group_0_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EventTrigger__Group_0_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventTriggerAccess().getRightSquareBracketKeyword_0_4_2()); }
	']'
	{ after(grammarAccess.getEventTriggerAccess().getRightSquareBracketKeyword_0_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EventTrigger__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EventTrigger__Group_1__0__Impl
	rule__EventTrigger__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EventTrigger__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventTriggerAccess().getLeftParenthesisKeyword_1_0()); }
	'('
	{ after(grammarAccess.getEventTriggerAccess().getLeftParenthesisKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventTrigger__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EventTrigger__Group_1__1__Impl
	rule__EventTrigger__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EventTrigger__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventTriggerAccess().getTleAssignment_1_1()); }
	(rule__EventTrigger__TleAssignment_1_1)
	{ after(grammarAccess.getEventTriggerAccess().getTleAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventTrigger__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EventTrigger__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EventTrigger__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventTriggerAccess().getRightParenthesisKeyword_1_2()); }
	')'
	{ after(grammarAccess.getEventTriggerAccess().getRightParenthesisKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalOperator__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalOperator__Group_3__0__Impl
	rule__LogicalOperator__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOperator__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalOperatorAccess().getAndKeyword_3_0()); }
	'and'
	{ after(grammarAccess.getLogicalOperatorAccess().getAndKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOperator__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalOperator__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOperator__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalOperatorAccess().getOpAssignment_3_1()); }
	(rule__LogicalOperator__OpAssignment_3_1)
	{ after(grammarAccess.getLogicalOperatorAccess().getOpAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalOperator__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalOperator__Group_4__0__Impl
	rule__LogicalOperator__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOperator__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalOperatorAccess().getOrKeyword_4_0()); }
	'or'
	{ after(grammarAccess.getLogicalOperatorAccess().getOrKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOperator__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicalOperator__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOperator__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicalOperatorAccess().getOpAssignment_4_1()); }
	(rule__LogicalOperator__OpAssignment_4_1)
	{ after(grammarAccess.getLogicalOperatorAccess().getOpAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InternalCondition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InternalCondition__Group__0__Impl
	rule__InternalCondition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InternalCondition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInternalConditionAccess().getOnKeyword_0()); }
	'on'
	{ after(grammarAccess.getInternalConditionAccess().getOnKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InternalCondition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InternalCondition__Group__1__Impl
	rule__InternalCondition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InternalCondition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInternalConditionAccess().getInternalKeyword_1()); }
	'internal'
	{ after(grammarAccess.getInternalConditionAccess().getInternalKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InternalCondition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InternalCondition__Group__2__Impl
	rule__InternalCondition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InternalCondition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInternalConditionAccess().getFirstAssignment_2()); }
	(rule__InternalCondition__FirstAssignment_2)
	{ after(grammarAccess.getInternalConditionAccess().getFirstAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InternalCondition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InternalCondition__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InternalCondition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInternalConditionAccess().getGroup_3()); }
	(rule__InternalCondition__Group_3__0)*
	{ after(grammarAccess.getInternalConditionAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InternalCondition__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InternalCondition__Group_3__0__Impl
	rule__InternalCondition__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InternalCondition__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInternalConditionAccess().getOrKeyword_3_0()); }
	'or'
	{ after(grammarAccess.getInternalConditionAccess().getOrKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InternalCondition__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InternalCondition__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InternalCondition__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInternalConditionAccess().getPortsAssignment_3_1()); }
	(rule__InternalCondition__PortsAssignment_3_1)
	{ after(grammarAccess.getInternalConditionAccess().getPortsAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AssertClause__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssertClause__Group__0__Impl
	rule__AssertClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssertClause__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssertClauseAccess().getAssertKeyword_0()); }
	'assert'
	{ after(grammarAccess.getAssertClauseAccess().getAssertKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssertClause__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssertClause__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssertClause__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getAssertClauseAccess().getAssertionsAssignment_1()); }
		(rule__AssertClause__AssertionsAssignment_1)
		{ after(grammarAccess.getAssertClauseAccess().getAssertionsAssignment_1()); }
	)
	(
		{ before(grammarAccess.getAssertClauseAccess().getAssertionsAssignment_1()); }
		(rule__AssertClause__AssertionsAssignment_1)*
		{ after(grammarAccess.getAssertClauseAccess().getAssertionsAssignment_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExistentialLatticeQuantification__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistentialLatticeQuantification__Group__0__Impl
	rule__ExistentialLatticeQuantification__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistentialLatticeQuantification__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistentialLatticeQuantificationAccess().getQuantified_variablesAssignment_0()); }
	(rule__ExistentialLatticeQuantification__Quantified_variablesAssignment_0)?
	{ after(grammarAccess.getExistentialLatticeQuantificationAccess().getQuantified_variablesAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistentialLatticeQuantification__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistentialLatticeQuantification__Group__1__Impl
	rule__ExistentialLatticeQuantification__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistentialLatticeQuantification__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistentialLatticeQuantificationAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getExistentialLatticeQuantificationAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistentialLatticeQuantification__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistentialLatticeQuantification__Group__2__Impl
	rule__ExistentialLatticeQuantification__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistentialLatticeQuantification__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistentialLatticeQuantificationAccess().getActionsAssignment_2()); }
	(rule__ExistentialLatticeQuantification__ActionsAssignment_2)
	{ after(grammarAccess.getExistentialLatticeQuantificationAccess().getActionsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistentialLatticeQuantification__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistentialLatticeQuantification__Group__3__Impl
	rule__ExistentialLatticeQuantification__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistentialLatticeQuantification__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistentialLatticeQuantificationAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getExistentialLatticeQuantificationAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistentialLatticeQuantification__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistentialLatticeQuantification__Group__4__Impl
	rule__ExistentialLatticeQuantification__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistentialLatticeQuantification__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistentialLatticeQuantificationAccess().getTimeoutAssignment_4()); }
	(rule__ExistentialLatticeQuantification__TimeoutAssignment_4)?
	{ after(grammarAccess.getExistentialLatticeQuantificationAccess().getTimeoutAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistentialLatticeQuantification__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistentialLatticeQuantification__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistentialLatticeQuantification__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistentialLatticeQuantificationAccess().getCatch_clauseAssignment_5()); }
	(rule__ExistentialLatticeQuantification__Catch_clauseAssignment_5)?
	{ after(grammarAccess.getExistentialLatticeQuantificationAccess().getCatch_clauseAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QuantifiedVariables__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QuantifiedVariables__Group__0__Impl
	rule__QuantifiedVariables__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QuantifiedVariables__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuantifiedVariablesAccess().getDeclareKeyword_0()); }
	'declare'
	{ after(grammarAccess.getQuantifiedVariablesAccess().getDeclareKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuantifiedVariables__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QuantifiedVariables__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QuantifiedVariables__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getQuantifiedVariablesAccess().getVariablesAssignment_1()); }
		(rule__QuantifiedVariables__VariablesAssignment_1)
		{ after(grammarAccess.getQuantifiedVariablesAccess().getVariablesAssignment_1()); }
	)
	(
		{ before(grammarAccess.getQuantifiedVariablesAccess().getVariablesAssignment_1()); }
		(rule__QuantifiedVariables__VariablesAssignment_1)*
		{ after(grammarAccess.getQuantifiedVariablesAccess().getVariablesAssignment_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UniversalLatticeQuantification__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UniversalLatticeQuantification__Group__0__Impl
	rule__UniversalLatticeQuantification__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UniversalLatticeQuantification__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUniversalLatticeQuantificationAccess().getForallKeyword_0()); }
	'forall'
	{ after(grammarAccess.getUniversalLatticeQuantificationAccess().getForallKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UniversalLatticeQuantification__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UniversalLatticeQuantification__Group__1__Impl
	rule__UniversalLatticeQuantification__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UniversalLatticeQuantification__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getUniversalLatticeQuantificationAccess().getVariablesAssignment_1()); }
		(rule__UniversalLatticeQuantification__VariablesAssignment_1)
		{ after(grammarAccess.getUniversalLatticeQuantificationAccess().getVariablesAssignment_1()); }
	)
	(
		{ before(grammarAccess.getUniversalLatticeQuantificationAccess().getVariablesAssignment_1()); }
		(rule__UniversalLatticeQuantification__VariablesAssignment_1)*
		{ after(grammarAccess.getUniversalLatticeQuantificationAccess().getVariablesAssignment_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UniversalLatticeQuantification__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UniversalLatticeQuantification__Group__2__Impl
	rule__UniversalLatticeQuantification__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UniversalLatticeQuantification__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUniversalLatticeQuantificationAccess().getInKeyword_2()); }
	'in'
	{ after(grammarAccess.getUniversalLatticeQuantificationAccess().getInKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UniversalLatticeQuantification__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UniversalLatticeQuantification__Group__3__Impl
	rule__UniversalLatticeQuantification__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__UniversalLatticeQuantification__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUniversalLatticeQuantificationAccess().getLower_boundAssignment_3()); }
	(rule__UniversalLatticeQuantification__Lower_boundAssignment_3)
	{ after(grammarAccess.getUniversalLatticeQuantificationAccess().getLower_boundAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UniversalLatticeQuantification__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UniversalLatticeQuantification__Group__4__Impl
	rule__UniversalLatticeQuantification__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__UniversalLatticeQuantification__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUniversalLatticeQuantificationAccess().getDOTDOTTerminalRuleCall_4()); }
	RULE_DOTDOT
	{ after(grammarAccess.getUniversalLatticeQuantificationAccess().getDOTDOTTerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UniversalLatticeQuantification__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UniversalLatticeQuantification__Group__5__Impl
	rule__UniversalLatticeQuantification__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__UniversalLatticeQuantification__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUniversalLatticeQuantificationAccess().getUpper_boundAssignment_5()); }
	(rule__UniversalLatticeQuantification__Upper_boundAssignment_5)
	{ after(grammarAccess.getUniversalLatticeQuantificationAccess().getUpper_boundAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UniversalLatticeQuantification__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UniversalLatticeQuantification__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UniversalLatticeQuantification__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUniversalLatticeQuantificationAccess().getElqAssignment_6()); }
	(rule__UniversalLatticeQuantification__ElqAssignment_6)
	{ after(grammarAccess.getUniversalLatticeQuantificationAccess().getElqAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group__0__Impl
	rule__VariableDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getVariableAssignment_0()); }
	(rule__VariableDeclaration__VariableAssignment_0)
	{ after(grammarAccess.getVariableDeclarationAccess().getVariableAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group__1__Impl
	rule__VariableDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getAlternatives_1()); }
	(rule__VariableDeclaration__Alternatives_1)?
	{ after(grammarAccess.getVariableDeclarationAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group__2__Impl
	rule__VariableDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getGroup_2()); }
	(rule__VariableDeclaration__Group_2__0)?
	{ after(grammarAccess.getVariableDeclarationAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group__3__Impl
	rule__VariableDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getAssertionAssignment_3()); }
	(rule__VariableDeclaration__AssertionAssignment_3)?
	{ after(grammarAccess.getVariableDeclarationAccess().getAssertionAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getSemicolonKeyword_4()); }
	(';')?
	{ after(grammarAccess.getVariableDeclarationAccess().getSemicolonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group_2__0__Impl
	rule__VariableDeclaration__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getAssignAssignment_2_0()); }
	(rule__VariableDeclaration__AssignAssignment_2_0)
	{ after(grammarAccess.getVariableDeclarationAccess().getAssignAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getExpressionAssignment_2_1()); }
	(rule__VariableDeclaration__ExpressionAssignment_2_1)
	{ after(grammarAccess.getVariableDeclarationAccess().getExpressionAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionParameters__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionParameters__Group__0__Impl
	rule__FunctionParameters__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionParameters__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionParametersAccess().getParametersAssignment_0()); }
	(rule__FunctionParameters__ParametersAssignment_0)
	{ after(grammarAccess.getFunctionParametersAccess().getParametersAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionParameters__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionParameters__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionParameters__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionParametersAccess().getGroup_1()); }
	(rule__FunctionParameters__Group_1__0)?
	{ after(grammarAccess.getFunctionParametersAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionParameters__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionParameters__Group_1__0__Impl
	rule__FunctionParameters__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionParameters__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionParametersAccess().getCommaAssignment_1_0()); }
	(rule__FunctionParameters__CommaAssignment_1_0)
	{ after(grammarAccess.getFunctionParametersAccess().getCommaAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionParameters__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionParameters__Group_1__1__Impl
	rule__FunctionParameters__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionParameters__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionParametersAccess().getParametersAssignment_1_1()); }
	(rule__FunctionParameters__ParametersAssignment_1_1)
	{ after(grammarAccess.getFunctionParametersAccess().getParametersAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionParameters__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionParameters__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionParameters__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionParametersAccess().getGroup_1_2()); }
	(rule__FunctionParameters__Group_1_2__0)*
	{ after(grammarAccess.getFunctionParametersAccess().getGroup_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionParameters__Group_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionParameters__Group_1_2__0__Impl
	rule__FunctionParameters__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionParameters__Group_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionParametersAccess().getCommaKeyword_1_2_0()); }
	','
	{ after(grammarAccess.getFunctionParametersAccess().getCommaKeyword_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionParameters__Group_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionParameters__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionParameters__Group_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionParametersAccess().getParametersAssignment_1_2_1()); }
	(rule__FunctionParameters__ParametersAssignment_1_2_1)
	{ after(grammarAccess.getFunctionParametersAccess().getParametersAssignment_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FormalExpressionPair__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FormalExpressionPair__Group__0__Impl
	rule__FormalExpressionPair__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalExpressionPair__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormalExpressionPairAccess().getFormalAssignment_0()); }
	(rule__FormalExpressionPair__FormalAssignment_0)
	{ after(grammarAccess.getFormalExpressionPairAccess().getFormalAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalExpressionPair__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FormalExpressionPair__Group__1__Impl
	rule__FormalExpressionPair__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalExpressionPair__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormalExpressionPairAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getFormalExpressionPairAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalExpressionPair__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FormalExpressionPair__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalExpressionPair__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormalExpressionPairAccess().getActualAssignment_2()); }
	(rule__FormalExpressionPair__ActualAssignment_2)
	{ after(grammarAccess.getFormalExpressionPairAccess().getActualAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BehaviorActions__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BehaviorActions__Group__0__Impl
	rule__BehaviorActions__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorActions__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorActionsAccess().getActionAssignment_0()); }
	(rule__BehaviorActions__ActionAssignment_0)
	{ after(grammarAccess.getBehaviorActionsAccess().getActionAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorActions__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BehaviorActions__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorActions__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorActionsAccess().getAlternatives_1()); }
	(rule__BehaviorActions__Alternatives_1)?
	{ after(grammarAccess.getBehaviorActionsAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BehaviorActions__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BehaviorActions__Group_1_0__0__Impl
	rule__BehaviorActions__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorActions__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorActionsAccess().getSemiAssignment_1_0_0()); }
	(rule__BehaviorActions__SemiAssignment_1_0_0)
	{ after(grammarAccess.getBehaviorActionsAccess().getSemiAssignment_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorActions__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BehaviorActions__Group_1_0__1__Impl
	rule__BehaviorActions__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorActions__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorActionsAccess().getActionAssignment_1_0_1()); }
	(rule__BehaviorActions__ActionAssignment_1_0_1)
	{ after(grammarAccess.getBehaviorActionsAccess().getActionAssignment_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorActions__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BehaviorActions__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorActions__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorActionsAccess().getGroup_1_0_2()); }
	(rule__BehaviorActions__Group_1_0_2__0)*
	{ after(grammarAccess.getBehaviorActionsAccess().getGroup_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BehaviorActions__Group_1_0_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BehaviorActions__Group_1_0_2__0__Impl
	rule__BehaviorActions__Group_1_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorActions__Group_1_0_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorActionsAccess().getSemicolonKeyword_1_0_2_0()); }
	';'
	{ after(grammarAccess.getBehaviorActionsAccess().getSemicolonKeyword_1_0_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorActions__Group_1_0_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BehaviorActions__Group_1_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorActions__Group_1_0_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorActionsAccess().getActionAssignment_1_0_2_1()); }
	(rule__BehaviorActions__ActionAssignment_1_0_2_1)
	{ after(grammarAccess.getBehaviorActionsAccess().getActionAssignment_1_0_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BehaviorActions__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BehaviorActions__Group_1_1__0__Impl
	rule__BehaviorActions__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorActions__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorActionsAccess().getAmpAssignment_1_1_0()); }
	(rule__BehaviorActions__AmpAssignment_1_1_0)
	{ after(grammarAccess.getBehaviorActionsAccess().getAmpAssignment_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorActions__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BehaviorActions__Group_1_1__1__Impl
	rule__BehaviorActions__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorActions__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorActionsAccess().getActionAssignment_1_1_1()); }
	(rule__BehaviorActions__ActionAssignment_1_1_1)
	{ after(grammarAccess.getBehaviorActionsAccess().getActionAssignment_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorActions__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BehaviorActions__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorActions__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorActionsAccess().getGroup_1_1_2()); }
	(rule__BehaviorActions__Group_1_1_2__0)*
	{ after(grammarAccess.getBehaviorActionsAccess().getGroup_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BehaviorActions__Group_1_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BehaviorActions__Group_1_1_2__0__Impl
	rule__BehaviorActions__Group_1_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorActions__Group_1_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorActionsAccess().getAmpersandKeyword_1_1_2_0()); }
	'&'
	{ after(grammarAccess.getBehaviorActionsAccess().getAmpersandKeyword_1_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorActions__Group_1_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BehaviorActions__Group_1_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorActions__Group_1_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorActionsAccess().getActionAssignment_1_1_2_1()); }
	(rule__BehaviorActions__ActionAssignment_1_1_2_1)
	{ after(grammarAccess.getBehaviorActionsAccess().getActionAssignment_1_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AssertedAction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssertedAction__Group__0__Impl
	rule__AssertedAction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssertedAction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssertedActionAccess().getPreconditionAssignment_0()); }
	(rule__AssertedAction__PreconditionAssignment_0)?
	{ after(grammarAccess.getAssertedActionAccess().getPreconditionAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssertedAction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssertedAction__Group__1__Impl
	rule__AssertedAction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AssertedAction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssertedActionAccess().getActionAssignment_1()); }
	(rule__AssertedAction__ActionAssignment_1)
	{ after(grammarAccess.getAssertedActionAccess().getActionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssertedAction__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssertedAction__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssertedAction__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssertedActionAccess().getPostconditionAssignment_2()); }
	(rule__AssertedAction__PostconditionAssignment_2)?
	{ after(grammarAccess.getAssertedActionAccess().getPostconditionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BasicAction__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BasicAction__Group_2__0__Impl
	rule__BasicAction__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicAction__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBasicActionAccess().getSetmodeKeyword_2_0()); }
	'setmode'
	{ after(grammarAccess.getBasicActionAccess().getSetmodeKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicAction__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BasicAction__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicAction__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBasicActionAccess().getModeAssignment_2_1()); }
	(rule__BasicAction__ModeAssignment_2_1)
	{ after(grammarAccess.getBasicActionAccess().getModeAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CombinableOperation__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CombinableOperation__Group_0__0__Impl
	rule__CombinableOperation__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinableOperation__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCombinableOperationAccess().getF_addAssignment_0_0()); }
	(rule__CombinableOperation__F_addAssignment_0_0)
	{ after(grammarAccess.getCombinableOperationAccess().getF_addAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinableOperation__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CombinableOperation__Group_0__1__Impl
	rule__CombinableOperation__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinableOperation__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCombinableOperationAccess().getLeftParenthesisKeyword_0_1()); }
	'('
	{ after(grammarAccess.getCombinableOperationAccess().getLeftParenthesisKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinableOperation__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CombinableOperation__Group_0__2__Impl
	rule__CombinableOperation__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinableOperation__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCombinableOperationAccess().getTargetAssignment_0_2()); }
	(rule__CombinableOperation__TargetAssignment_0_2)
	{ after(grammarAccess.getCombinableOperationAccess().getTargetAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinableOperation__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CombinableOperation__Group_0__3__Impl
	rule__CombinableOperation__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinableOperation__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCombinableOperationAccess().getCommaKeyword_0_3()); }
	','
	{ after(grammarAccess.getCombinableOperationAccess().getCommaKeyword_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinableOperation__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CombinableOperation__Group_0__4__Impl
	rule__CombinableOperation__Group_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinableOperation__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCombinableOperationAccess().getArithmeticAssignment_0_4()); }
	(rule__CombinableOperation__ArithmeticAssignment_0_4)
	{ after(grammarAccess.getCombinableOperationAccess().getArithmeticAssignment_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinableOperation__Group_0__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CombinableOperation__Group_0__5__Impl
	rule__CombinableOperation__Group_0__6
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinableOperation__Group_0__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCombinableOperationAccess().getCommaKeyword_0_5()); }
	','
	{ after(grammarAccess.getCombinableOperationAccess().getCommaKeyword_0_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinableOperation__Group_0__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CombinableOperation__Group_0__6__Impl
	rule__CombinableOperation__Group_0__7
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinableOperation__Group_0__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCombinableOperationAccess().getResultAssignment_0_6()); }
	(rule__CombinableOperation__ResultAssignment_0_6)
	{ after(grammarAccess.getCombinableOperationAccess().getResultAssignment_0_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinableOperation__Group_0__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CombinableOperation__Group_0__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinableOperation__Group_0__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCombinableOperationAccess().getRightParenthesisKeyword_0_7()); }
	')'
	{ after(grammarAccess.getCombinableOperationAccess().getRightParenthesisKeyword_0_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CombinableOperation__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CombinableOperation__Group_1__0__Impl
	rule__CombinableOperation__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinableOperation__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCombinableOperationAccess().getAlternatives_1_0()); }
	(rule__CombinableOperation__Alternatives_1_0)
	{ after(grammarAccess.getCombinableOperationAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinableOperation__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CombinableOperation__Group_1__1__Impl
	rule__CombinableOperation__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinableOperation__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCombinableOperationAccess().getLeftParenthesisKeyword_1_1()); }
	'('
	{ after(grammarAccess.getCombinableOperationAccess().getLeftParenthesisKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinableOperation__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CombinableOperation__Group_1__2__Impl
	rule__CombinableOperation__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinableOperation__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCombinableOperationAccess().getTargetAssignment_1_2()); }
	(rule__CombinableOperation__TargetAssignment_1_2)
	{ after(grammarAccess.getCombinableOperationAccess().getTargetAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinableOperation__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CombinableOperation__Group_1__3__Impl
	rule__CombinableOperation__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinableOperation__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCombinableOperationAccess().getCommaKeyword_1_3()); }
	','
	{ after(grammarAccess.getCombinableOperationAccess().getCommaKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinableOperation__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CombinableOperation__Group_1__4__Impl
	rule__CombinableOperation__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinableOperation__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCombinableOperationAccess().getBoolAssignment_1_4()); }
	(rule__CombinableOperation__BoolAssignment_1_4)
	{ after(grammarAccess.getCombinableOperationAccess().getBoolAssignment_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinableOperation__Group_1__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CombinableOperation__Group_1__5__Impl
	rule__CombinableOperation__Group_1__6
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinableOperation__Group_1__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCombinableOperationAccess().getGroup_1_5()); }
	(rule__CombinableOperation__Group_1_5__0)?
	{ after(grammarAccess.getCombinableOperationAccess().getGroup_1_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinableOperation__Group_1__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CombinableOperation__Group_1__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinableOperation__Group_1__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCombinableOperationAccess().getRightParenthesisKeyword_1_6()); }
	')'
	{ after(grammarAccess.getCombinableOperationAccess().getRightParenthesisKeyword_1_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CombinableOperation__Group_1_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CombinableOperation__Group_1_5__0__Impl
	rule__CombinableOperation__Group_1_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinableOperation__Group_1_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCombinableOperationAccess().getCommaKeyword_1_5_0()); }
	','
	{ after(grammarAccess.getCombinableOperationAccess().getCommaKeyword_1_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinableOperation__Group_1_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CombinableOperation__Group_1_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinableOperation__Group_1_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCombinableOperationAccess().getResultAssignment_1_5_1()); }
	(rule__CombinableOperation__ResultAssignment_1_5_1)
	{ after(grammarAccess.getCombinableOperationAccess().getResultAssignment_1_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CombinableOperation__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CombinableOperation__Group_2__0__Impl
	rule__CombinableOperation__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinableOperation__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCombinableOperationAccess().getSwAssignment_2_0()); }
	(rule__CombinableOperation__SwAssignment_2_0)
	{ after(grammarAccess.getCombinableOperationAccess().getSwAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinableOperation__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CombinableOperation__Group_2__1__Impl
	rule__CombinableOperation__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinableOperation__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCombinableOperationAccess().getLeftParenthesisKeyword_2_1()); }
	'('
	{ after(grammarAccess.getCombinableOperationAccess().getLeftParenthesisKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinableOperation__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CombinableOperation__Group_2__2__Impl
	rule__CombinableOperation__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinableOperation__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCombinableOperationAccess().getTargetAssignment_2_2()); }
	(rule__CombinableOperation__TargetAssignment_2_2)
	{ after(grammarAccess.getCombinableOperationAccess().getTargetAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinableOperation__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CombinableOperation__Group_2__3__Impl
	rule__CombinableOperation__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinableOperation__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCombinableOperationAccess().getCommaKeyword_2_3()); }
	','
	{ after(grammarAccess.getCombinableOperationAccess().getCommaKeyword_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinableOperation__Group_2__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CombinableOperation__Group_2__4__Impl
	rule__CombinableOperation__Group_2__5
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinableOperation__Group_2__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCombinableOperationAccess().getReferenceAssignment_2_4()); }
	(rule__CombinableOperation__ReferenceAssignment_2_4)
	{ after(grammarAccess.getCombinableOperationAccess().getReferenceAssignment_2_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinableOperation__Group_2__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CombinableOperation__Group_2__5__Impl
	rule__CombinableOperation__Group_2__6
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinableOperation__Group_2__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCombinableOperationAccess().getCommaKeyword_2_5()); }
	','
	{ after(grammarAccess.getCombinableOperationAccess().getCommaKeyword_2_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinableOperation__Group_2__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CombinableOperation__Group_2__6__Impl
	rule__CombinableOperation__Group_2__7
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinableOperation__Group_2__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCombinableOperationAccess().getResultAssignment_2_6()); }
	(rule__CombinableOperation__ResultAssignment_2_6)
	{ after(grammarAccess.getCombinableOperationAccess().getResultAssignment_2_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinableOperation__Group_2__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CombinableOperation__Group_2__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinableOperation__Group_2__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCombinableOperationAccess().getRightParenthesisKeyword_2_7()); }
	')'
	{ after(grammarAccess.getCombinableOperationAccess().getRightParenthesisKeyword_2_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SubprogramCall__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubprogramCall__Group__0__Impl
	rule__SubprogramCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SubprogramCall__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubprogramCallAccess().getProcedureAssignment_0()); }
	(rule__SubprogramCall__ProcedureAssignment_0)
	{ after(grammarAccess.getSubprogramCallAccess().getProcedureAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubprogramCall__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubprogramCall__Group__1__Impl
	rule__SubprogramCall__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SubprogramCall__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubprogramCallAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getSubprogramCallAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubprogramCall__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubprogramCall__Group__2__Impl
	rule__SubprogramCall__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SubprogramCall__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubprogramCallAccess().getParametersAssignment_2()); }
	(rule__SubprogramCall__ParametersAssignment_2)?
	{ after(grammarAccess.getSubprogramCallAccess().getParametersAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubprogramCall__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubprogramCall__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SubprogramCall__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubprogramCallAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getSubprogramCallAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FormalActualList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FormalActualList__Group__0__Impl
	rule__FormalActualList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalActualList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormalActualListAccess().getVariablesAssignment_0()); }
	(rule__FormalActualList__VariablesAssignment_0)
	{ after(grammarAccess.getFormalActualListAccess().getVariablesAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalActualList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FormalActualList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalActualList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormalActualListAccess().getGroup_1()); }
	(rule__FormalActualList__Group_1__0)?
	{ after(grammarAccess.getFormalActualListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FormalActualList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FormalActualList__Group_1__0__Impl
	rule__FormalActualList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalActualList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormalActualListAccess().getCommaAssignment_1_0()); }
	(rule__FormalActualList__CommaAssignment_1_0)
	{ after(grammarAccess.getFormalActualListAccess().getCommaAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalActualList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FormalActualList__Group_1__1__Impl
	rule__FormalActualList__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalActualList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormalActualListAccess().getVariablesAssignment_1_1()); }
	(rule__FormalActualList__VariablesAssignment_1_1)
	{ after(grammarAccess.getFormalActualListAccess().getVariablesAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalActualList__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FormalActualList__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalActualList__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormalActualListAccess().getGroup_1_2()); }
	(rule__FormalActualList__Group_1_2__0)*
	{ after(grammarAccess.getFormalActualListAccess().getGroup_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FormalActualList__Group_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FormalActualList__Group_1_2__0__Impl
	rule__FormalActualList__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalActualList__Group_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormalActualListAccess().getCommaKeyword_1_2_0()); }
	','
	{ after(grammarAccess.getFormalActualListAccess().getCommaKeyword_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalActualList__Group_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FormalActualList__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalActualList__Group_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormalActualListAccess().getVariablesAssignment_1_2_1()); }
	(rule__FormalActualList__VariablesAssignment_1_2_1)
	{ after(grammarAccess.getFormalActualListAccess().getVariablesAssignment_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FormalActual__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FormalActual__Group__0__Impl
	rule__FormalActual__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalActual__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormalActualAccess().getGroup_0()); }
	(rule__FormalActual__Group_0__0)?
	{ after(grammarAccess.getFormalActualAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalActual__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FormalActual__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalActual__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormalActualAccess().getActualAssignment_1()); }
	(rule__FormalActual__ActualAssignment_1)
	{ after(grammarAccess.getFormalActualAccess().getActualAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FormalActual__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FormalActual__Group_0__0__Impl
	rule__FormalActual__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalActual__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormalActualAccess().getFormalAssignment_0_0()); }
	(rule__FormalActual__FormalAssignment_0_0)
	{ after(grammarAccess.getFormalActualAccess().getFormalAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalActual__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FormalActual__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalActual__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormalActualAccess().getColonKeyword_0_1()); }
	':'
	{ after(grammarAccess.getFormalActualAccess().getColonKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PortOutput__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PortOutput__Group__0__Impl
	rule__PortOutput__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PortOutput__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortOutputAccess().getPortAssignment_0()); }
	(rule__PortOutput__PortAssignment_0)
	{ after(grammarAccess.getPortOutputAccess().getPortAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PortOutput__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PortOutput__Group__1__Impl
	rule__PortOutput__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PortOutput__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortOutputAccess().getExclamationMarkKeyword_1()); }
	'!'
	{ after(grammarAccess.getPortOutputAccess().getExclamationMarkKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PortOutput__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PortOutput__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PortOutput__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortOutputAccess().getGroup_2()); }
	(rule__PortOutput__Group_2__0)?
	{ after(grammarAccess.getPortOutputAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PortOutput__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PortOutput__Group_2__0__Impl
	rule__PortOutput__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PortOutput__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortOutputAccess().getLeftParenthesisKeyword_2_0()); }
	'('
	{ after(grammarAccess.getPortOutputAccess().getLeftParenthesisKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PortOutput__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PortOutput__Group_2__1__Impl
	rule__PortOutput__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PortOutput__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortOutputAccess().getEorAssignment_2_1()); }
	(rule__PortOutput__EorAssignment_2_1)
	{ after(grammarAccess.getPortOutputAccess().getEorAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PortOutput__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PortOutput__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PortOutput__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortOutputAccess().getRightParenthesisKeyword_2_2()); }
	')'
	{ after(grammarAccess.getPortOutputAccess().getRightParenthesisKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PortInput__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PortInput__Group__0__Impl
	rule__PortInput__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PortInput__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortInputAccess().getPortAssignment_0()); }
	(rule__PortInput__PortAssignment_0)
	{ after(grammarAccess.getPortInputAccess().getPortAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PortInput__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PortInput__Group__1__Impl
	rule__PortInput__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PortInput__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortInputAccess().getQuestionMarkKeyword_1()); }
	'?'
	{ after(grammarAccess.getPortInputAccess().getQuestionMarkKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PortInput__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PortInput__Group__2__Impl
	rule__PortInput__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PortInput__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortInputAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getPortInputAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PortInput__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PortInput__Group__3__Impl
	rule__PortInput__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PortInput__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortInputAccess().getTargetAssignment_3()); }
	(rule__PortInput__TargetAssignment_3)
	{ after(grammarAccess.getPortInputAccess().getTargetAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PortInput__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PortInput__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PortInput__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortInputAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getPortInputAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group__0__Impl
	rule__Assignment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getLhsAssignment_0()); }
	(rule__Assignment__LhsAssignment_0)
	{ after(grammarAccess.getAssignmentAccess().getLhsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group__1__Impl
	rule__Assignment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getAsgnAssignment_1()); }
	(rule__Assignment__AsgnAssignment_1)
	{ after(grammarAccess.getAssignmentAccess().getAsgnAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getRhsAssignment_2()); }
	(rule__Assignment__RhsAssignment_2)
	{ after(grammarAccess.getAssignmentAccess().getRhsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NameTick__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NameTick__Group__0__Impl
	rule__NameTick__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NameTick__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNameTickAccess().getValueAssignment_0()); }
	(rule__NameTick__ValueAssignment_0)
	{ after(grammarAccess.getNameTickAccess().getValueAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NameTick__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NameTick__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NameTick__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNameTickAccess().getTickAssignment_1()); }
	(rule__NameTick__TickAssignment_1)?
	{ after(grammarAccess.getNameTickAccess().getTickAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SimultaneousAssignment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimultaneousAssignment__Group__0__Impl
	rule__SimultaneousAssignment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimultaneousAssignment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimultaneousAssignmentAccess().getVerticalLineKeyword_0()); }
	'|'
	{ after(grammarAccess.getSimultaneousAssignmentAccess().getVerticalLineKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimultaneousAssignment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimultaneousAssignment__Group__1__Impl
	rule__SimultaneousAssignment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SimultaneousAssignment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimultaneousAssignmentAccess().getLhsAssignment_1()); }
	(rule__SimultaneousAssignment__LhsAssignment_1)
	{ after(grammarAccess.getSimultaneousAssignmentAccess().getLhsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimultaneousAssignment__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimultaneousAssignment__Group__2__Impl
	rule__SimultaneousAssignment__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SimultaneousAssignment__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getSimultaneousAssignmentAccess().getGroup_2()); }
		(rule__SimultaneousAssignment__Group_2__0)
		{ after(grammarAccess.getSimultaneousAssignmentAccess().getGroup_2()); }
	)
	(
		{ before(grammarAccess.getSimultaneousAssignmentAccess().getGroup_2()); }
		(rule__SimultaneousAssignment__Group_2__0)*
		{ after(grammarAccess.getSimultaneousAssignmentAccess().getGroup_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimultaneousAssignment__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimultaneousAssignment__Group__3__Impl
	rule__SimultaneousAssignment__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SimultaneousAssignment__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimultaneousAssignmentAccess().getAsgnAssignment_3()); }
	(rule__SimultaneousAssignment__AsgnAssignment_3)
	{ after(grammarAccess.getSimultaneousAssignmentAccess().getAsgnAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimultaneousAssignment__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimultaneousAssignment__Group__4__Impl
	rule__SimultaneousAssignment__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SimultaneousAssignment__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimultaneousAssignmentAccess().getRhsAssignment_4()); }
	(rule__SimultaneousAssignment__RhsAssignment_4)
	{ after(grammarAccess.getSimultaneousAssignmentAccess().getRhsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimultaneousAssignment__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimultaneousAssignment__Group__5__Impl
	rule__SimultaneousAssignment__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__SimultaneousAssignment__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getSimultaneousAssignmentAccess().getGroup_5()); }
		(rule__SimultaneousAssignment__Group_5__0)
		{ after(grammarAccess.getSimultaneousAssignmentAccess().getGroup_5()); }
	)
	(
		{ before(grammarAccess.getSimultaneousAssignmentAccess().getGroup_5()); }
		(rule__SimultaneousAssignment__Group_5__0)*
		{ after(grammarAccess.getSimultaneousAssignmentAccess().getGroup_5()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimultaneousAssignment__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimultaneousAssignment__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimultaneousAssignment__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimultaneousAssignmentAccess().getVerticalLineKeyword_6()); }
	'|'
	{ after(grammarAccess.getSimultaneousAssignmentAccess().getVerticalLineKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SimultaneousAssignment__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimultaneousAssignment__Group_2__0__Impl
	rule__SimultaneousAssignment__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimultaneousAssignment__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimultaneousAssignmentAccess().getCommaKeyword_2_0()); }
	','
	{ after(grammarAccess.getSimultaneousAssignmentAccess().getCommaKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimultaneousAssignment__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimultaneousAssignment__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimultaneousAssignment__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimultaneousAssignmentAccess().getLhsAssignment_2_1()); }
	(rule__SimultaneousAssignment__LhsAssignment_2_1)
	{ after(grammarAccess.getSimultaneousAssignmentAccess().getLhsAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SimultaneousAssignment__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimultaneousAssignment__Group_5__0__Impl
	rule__SimultaneousAssignment__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimultaneousAssignment__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimultaneousAssignmentAccess().getCommaKeyword_5_0()); }
	','
	{ after(grammarAccess.getSimultaneousAssignmentAccess().getCommaKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimultaneousAssignment__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimultaneousAssignment__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimultaneousAssignment__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimultaneousAssignmentAccess().getRhsAssignment_5_1()); }
	(rule__SimultaneousAssignment__RhsAssignment_5_1)
	{ after(grammarAccess.getSimultaneousAssignmentAccess().getRhsAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Alternative__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Alternative__Group__0__Impl
	rule__Alternative__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Alternative__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlternativeAccess().getIfKeyword_0()); }
	'if'
	{ after(grammarAccess.getAlternativeAccess().getIfKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Alternative__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Alternative__Group__1__Impl
	rule__Alternative__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Alternative__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlternativeAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getAlternativeAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Alternative__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Alternative__Group__2__Impl
	rule__Alternative__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Alternative__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlternativeAccess().getGuardAssignment_2()); }
	(rule__Alternative__GuardAssignment_2)
	{ after(grammarAccess.getAlternativeAccess().getGuardAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Alternative__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Alternative__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Alternative__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlternativeAccess().getAlternatives_3()); }
	(rule__Alternative__Alternatives_3)
	{ after(grammarAccess.getAlternativeAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BLESSAlternative__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BLESSAlternative__Group__0__Impl
	rule__BLESSAlternative__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BLESSAlternative__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBLESSAlternativeAccess().getRightParenthesisTildeGreaterThanSignKeyword_0()); }
	')~>'
	{ after(grammarAccess.getBLESSAlternativeAccess().getRightParenthesisTildeGreaterThanSignKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BLESSAlternative__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BLESSAlternative__Group__1__Impl
	rule__BLESSAlternative__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BLESSAlternative__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBLESSAlternativeAccess().getActionAssignment_1()); }
	(rule__BLESSAlternative__ActionAssignment_1)
	{ after(grammarAccess.getBLESSAlternativeAccess().getActionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BLESSAlternative__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BLESSAlternative__Group__2__Impl
	rule__BLESSAlternative__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BLESSAlternative__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getBLESSAlternativeAccess().getGroup_2()); }
		(rule__BLESSAlternative__Group_2__0)
		{ after(grammarAccess.getBLESSAlternativeAccess().getGroup_2()); }
	)
	(
		{ before(grammarAccess.getBLESSAlternativeAccess().getGroup_2()); }
		(rule__BLESSAlternative__Group_2__0)*
		{ after(grammarAccess.getBLESSAlternativeAccess().getGroup_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BLESSAlternative__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BLESSAlternative__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BLESSAlternative__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBLESSAlternativeAccess().getFiKeyword_3()); }
	'fi'
	{ after(grammarAccess.getBLESSAlternativeAccess().getFiKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BLESSAlternative__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BLESSAlternative__Group_2__0__Impl
	rule__BLESSAlternative__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BLESSAlternative__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBLESSAlternativeAccess().getLeftSquareBracketRightSquareBracketKeyword_2_0()); }
	'[]'
	{ after(grammarAccess.getBLESSAlternativeAccess().getLeftSquareBracketRightSquareBracketKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BLESSAlternative__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BLESSAlternative__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BLESSAlternative__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBLESSAlternativeAccess().getAlternativeAssignment_2_1()); }
	(rule__BLESSAlternative__AlternativeAssignment_2_1)
	{ after(grammarAccess.getBLESSAlternativeAccess().getAlternativeAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GuardedAction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GuardedAction__Group__0__Impl
	rule__GuardedAction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GuardedAction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGuardedActionAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getGuardedActionAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GuardedAction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GuardedAction__Group__1__Impl
	rule__GuardedAction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GuardedAction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGuardedActionAccess().getGuardAssignment_1()); }
	(rule__GuardedAction__GuardAssignment_1)
	{ after(grammarAccess.getGuardedActionAccess().getGuardAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GuardedAction__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GuardedAction__Group__2__Impl
	rule__GuardedAction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GuardedAction__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGuardedActionAccess().getRightParenthesisTildeGreaterThanSignKeyword_2()); }
	')~>'
	{ after(grammarAccess.getGuardedActionAccess().getRightParenthesisTildeGreaterThanSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GuardedAction__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GuardedAction__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GuardedAction__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGuardedActionAccess().getActionAssignment_3()); }
	(rule__GuardedAction__ActionAssignment_3)
	{ after(grammarAccess.getGuardedActionAccess().getActionAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__WhileLoop__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileLoop__Group__0__Impl
	rule__WhileLoop__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileLoopAccess().getWhileKeyword_0()); }
	'while'
	{ after(grammarAccess.getWhileLoopAccess().getWhileKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileLoop__Group__1__Impl
	rule__WhileLoop__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileLoopAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getWhileLoopAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileLoop__Group__2__Impl
	rule__WhileLoop__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileLoopAccess().getTestAssignment_2()); }
	(rule__WhileLoop__TestAssignment_2)
	{ after(grammarAccess.getWhileLoopAccess().getTestAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileLoop__Group__3__Impl
	rule__WhileLoop__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileLoopAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getWhileLoopAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileLoop__Group__4__Impl
	rule__WhileLoop__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileLoopAccess().getGroup_4()); }
	(rule__WhileLoop__Group_4__0)?
	{ after(grammarAccess.getWhileLoopAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileLoop__Group__5__Impl
	rule__WhileLoop__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileLoopAccess().getGroup_5()); }
	(rule__WhileLoop__Group_5__0)?
	{ after(grammarAccess.getWhileLoopAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileLoop__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileLoopAccess().getElqAssignment_6()); }
	(rule__WhileLoop__ElqAssignment_6)
	{ after(grammarAccess.getWhileLoopAccess().getElqAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__WhileLoop__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileLoop__Group_4__0__Impl
	rule__WhileLoop__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileLoopAccess().getInvariantAssignment_4_0()); }
	(rule__WhileLoop__InvariantAssignment_4_0)
	{ after(grammarAccess.getWhileLoopAccess().getInvariantAssignment_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileLoop__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileLoopAccess().getInvAssignment_4_1()); }
	(rule__WhileLoop__InvAssignment_4_1)
	{ after(grammarAccess.getWhileLoopAccess().getInvAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__WhileLoop__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileLoop__Group_5__0__Impl
	rule__WhileLoop__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileLoopAccess().getBoundAssignment_5_0()); }
	(rule__WhileLoop__BoundAssignment_5_0)
	{ after(grammarAccess.getWhileLoopAccess().getBoundAssignment_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileLoop__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileLoopAccess().getBound_functionAssignment_5_1()); }
	(rule__WhileLoop__Bound_functionAssignment_5_1)
	{ after(grammarAccess.getWhileLoopAccess().getBound_functionAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ForLoop__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForLoop__Group__0__Impl
	rule__ForLoop__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForLoopAccess().getForKeyword_0()); }
	'for'
	{ after(grammarAccess.getForLoopAccess().getForKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForLoop__Group__1__Impl
	rule__ForLoop__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForLoopAccess().getCountAssignment_1()); }
	(rule__ForLoop__CountAssignment_1)
	{ after(grammarAccess.getForLoopAccess().getCountAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForLoop__Group__2__Impl
	rule__ForLoop__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForLoopAccess().getInKeyword_2()); }
	'in'
	{ after(grammarAccess.getForLoopAccess().getInKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForLoop__Group__3__Impl
	rule__ForLoop__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForLoopAccess().getLower_boundAssignment_3()); }
	(rule__ForLoop__Lower_boundAssignment_3)
	{ after(grammarAccess.getForLoopAccess().getLower_boundAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForLoop__Group__4__Impl
	rule__ForLoop__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForLoopAccess().getDOTDOTTerminalRuleCall_4()); }
	RULE_DOTDOT
	{ after(grammarAccess.getForLoopAccess().getDOTDOTTerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForLoop__Group__5__Impl
	rule__ForLoop__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForLoopAccess().getUpper_boundAssignment_5()); }
	(rule__ForLoop__Upper_boundAssignment_5)
	{ after(grammarAccess.getForLoopAccess().getUpper_boundAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForLoop__Group__6__Impl
	rule__ForLoop__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForLoopAccess().getGroup_6()); }
	(rule__ForLoop__Group_6__0)?
	{ after(grammarAccess.getForLoopAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForLoop__Group__7__Impl
	rule__ForLoop__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForLoopAccess().getLeftCurlyBracketKeyword_7()); }
	'{'
	{ after(grammarAccess.getForLoopAccess().getLeftCurlyBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForLoop__Group__8__Impl
	rule__ForLoop__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForLoopAccess().getActionAssignment_8()); }
	(rule__ForLoop__ActionAssignment_8)
	{ after(grammarAccess.getForLoopAccess().getActionAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForLoop__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForLoopAccess().getRightCurlyBracketKeyword_9()); }
	'}'
	{ after(grammarAccess.getForLoopAccess().getRightCurlyBracketKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ForLoop__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForLoop__Group_6__0__Impl
	rule__ForLoop__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForLoopAccess().getInvariantAssignment_6_0()); }
	(rule__ForLoop__InvariantAssignment_6_0)
	{ after(grammarAccess.getForLoopAccess().getInvariantAssignment_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForLoop__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForLoopAccess().getInvAssignment_6_1()); }
	(rule__ForLoop__InvAssignment_6_1)
	{ after(grammarAccess.getForLoopAccess().getInvAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DoUntilLoop__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DoUntilLoop__Group__0__Impl
	rule__DoUntilLoop__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DoUntilLoop__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDoUntilLoopAccess().getDoKeyword_0()); }
	'do'
	{ after(grammarAccess.getDoUntilLoopAccess().getDoKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DoUntilLoop__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DoUntilLoop__Group__1__Impl
	rule__DoUntilLoop__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DoUntilLoop__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDoUntilLoopAccess().getGroup_1()); }
	(rule__DoUntilLoop__Group_1__0)?
	{ after(grammarAccess.getDoUntilLoopAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DoUntilLoop__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DoUntilLoop__Group__2__Impl
	rule__DoUntilLoop__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DoUntilLoop__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDoUntilLoopAccess().getGroup_2()); }
	(rule__DoUntilLoop__Group_2__0)?
	{ after(grammarAccess.getDoUntilLoopAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DoUntilLoop__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DoUntilLoop__Group__3__Impl
	rule__DoUntilLoop__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DoUntilLoop__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDoUntilLoopAccess().getActionsAssignment_3()); }
	(rule__DoUntilLoop__ActionsAssignment_3)
	{ after(grammarAccess.getDoUntilLoopAccess().getActionsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DoUntilLoop__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DoUntilLoop__Group__4__Impl
	rule__DoUntilLoop__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DoUntilLoop__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDoUntilLoopAccess().getUntilKeyword_4()); }
	'until'
	{ after(grammarAccess.getDoUntilLoopAccess().getUntilKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DoUntilLoop__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DoUntilLoop__Group__5__Impl
	rule__DoUntilLoop__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__DoUntilLoop__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDoUntilLoopAccess().getLeftParenthesisKeyword_5()); }
	'('
	{ after(grammarAccess.getDoUntilLoopAccess().getLeftParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DoUntilLoop__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DoUntilLoop__Group__6__Impl
	rule__DoUntilLoop__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__DoUntilLoop__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDoUntilLoopAccess().getGuardAssignment_6()); }
	(rule__DoUntilLoop__GuardAssignment_6)
	{ after(grammarAccess.getDoUntilLoopAccess().getGuardAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DoUntilLoop__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DoUntilLoop__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DoUntilLoop__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDoUntilLoopAccess().getRightParenthesisKeyword_7()); }
	')'
	{ after(grammarAccess.getDoUntilLoopAccess().getRightParenthesisKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DoUntilLoop__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DoUntilLoop__Group_1__0__Impl
	rule__DoUntilLoop__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DoUntilLoop__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDoUntilLoopAccess().getInvariantAssignment_1_0()); }
	(rule__DoUntilLoop__InvariantAssignment_1_0)
	{ after(grammarAccess.getDoUntilLoopAccess().getInvariantAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DoUntilLoop__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DoUntilLoop__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DoUntilLoop__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDoUntilLoopAccess().getInvAssignment_1_1()); }
	(rule__DoUntilLoop__InvAssignment_1_1)
	{ after(grammarAccess.getDoUntilLoopAccess().getInvAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DoUntilLoop__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DoUntilLoop__Group_2__0__Impl
	rule__DoUntilLoop__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DoUntilLoop__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDoUntilLoopAccess().getBoundAssignment_2_0()); }
	(rule__DoUntilLoop__BoundAssignment_2_0)
	{ after(grammarAccess.getDoUntilLoopAccess().getBoundAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DoUntilLoop__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DoUntilLoop__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DoUntilLoop__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDoUntilLoopAccess().getBndAssignment_2_1()); }
	(rule__DoUntilLoop__BndAssignment_2_1)
	{ after(grammarAccess.getDoUntilLoopAccess().getBndAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ThrowsClause__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ThrowsClause__Group__0__Impl
	rule__ThrowsClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ThrowsClause__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getThrowsClauseAccess().getThrowsKeyword_0()); }
	'throws'
	{ after(grammarAccess.getThrowsClauseAccess().getThrowsKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ThrowsClause__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ThrowsClause__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ThrowsClause__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getThrowsClauseAccess().getExceptionsAssignment_1()); }
	(rule__ThrowsClause__ExceptionsAssignment_1)
	{ after(grammarAccess.getThrowsClauseAccess().getExceptionsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CatchClause__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CatchClause__Group__0__Impl
	rule__CatchClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CatchClause__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCatchClauseAccess().getCatchKeyword_0()); }
	'catch'
	{ after(grammarAccess.getCatchClauseAccess().getCatchKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CatchClause__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CatchClause__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CatchClause__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getCatchClauseAccess().getCatchesAssignment_1()); }
		(rule__CatchClause__CatchesAssignment_1)
		{ after(grammarAccess.getCatchClauseAccess().getCatchesAssignment_1()); }
	)
	(
		{ before(grammarAccess.getCatchClauseAccess().getCatchesAssignment_1()); }
		(rule__CatchClause__CatchesAssignment_1)*
		{ after(grammarAccess.getCatchClauseAccess().getCatchesAssignment_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CatchClauseTerm__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CatchClauseTerm__Group__0__Impl
	rule__CatchClauseTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CatchClauseTerm__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCatchClauseTermAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getCatchClauseTermAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CatchClauseTerm__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CatchClauseTerm__Group__1__Impl
	rule__CatchClauseTerm__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CatchClauseTerm__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCatchClauseTermAccess().getAlternatives_1()); }
	(rule__CatchClauseTerm__Alternatives_1)
	{ after(grammarAccess.getCatchClauseTermAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CatchClauseTerm__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CatchClauseTerm__Group__2__Impl
	rule__CatchClauseTerm__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CatchClauseTerm__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCatchClauseTermAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getCatchClauseTermAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CatchClauseTerm__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CatchClauseTerm__Group__3__Impl
	rule__CatchClauseTerm__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CatchClauseTerm__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCatchClauseTermAccess().getActionAssignment_3()); }
	(rule__CatchClauseTerm__ActionAssignment_3)
	{ after(grammarAccess.getCatchClauseTermAccess().getActionAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CatchClauseTerm__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CatchClauseTerm__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CatchClauseTerm__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCatchClauseTermAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getCatchClauseTermAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__WhenThrow__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhenThrow__Group__0__Impl
	rule__WhenThrow__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenThrow__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhenThrowAccess().getWhenKeyword_0()); }
	'when'
	{ after(grammarAccess.getWhenThrowAccess().getWhenKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenThrow__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhenThrow__Group__1__Impl
	rule__WhenThrow__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenThrow__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhenThrowAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getWhenThrowAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenThrow__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhenThrow__Group__2__Impl
	rule__WhenThrow__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenThrow__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhenThrowAccess().getExpAssignment_2()); }
	(rule__WhenThrow__ExpAssignment_2)
	{ after(grammarAccess.getWhenThrowAccess().getExpAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenThrow__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhenThrow__Group__3__Impl
	rule__WhenThrow__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenThrow__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhenThrowAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getWhenThrowAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenThrow__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhenThrow__Group__4__Impl
	rule__WhenThrow__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenThrow__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhenThrowAccess().getThrowKeyword_4()); }
	'throw'
	{ after(grammarAccess.getWhenThrowAccess().getThrowKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenThrow__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhenThrow__Group__5__Impl
	rule__WhenThrow__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenThrow__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhenThrowAccess().getExceptionAssignment_5()); }
	(rule__WhenThrow__ExceptionAssignment_5)
	{ after(grammarAccess.getWhenThrowAccess().getExceptionAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenThrow__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhenThrow__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenThrow__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhenThrowAccess().getMessageAssignment_6()); }
	(rule__WhenThrow__MessageAssignment_6)?
	{ after(grammarAccess.getWhenThrowAccess().getMessageAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Computation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Computation__Group__0__Impl
	rule__Computation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Computation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComputationAccess().getComputationKeyword_0()); }
	'computation'
	{ after(grammarAccess.getComputationAccess().getComputationKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Computation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Computation__Group__1__Impl
	rule__Computation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Computation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComputationAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getComputationAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Computation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Computation__Group__2__Impl
	rule__Computation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Computation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComputationAccess().getLbAssignment_2()); }
	(rule__Computation__LbAssignment_2)
	{ after(grammarAccess.getComputationAccess().getLbAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Computation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Computation__Group__3__Impl
	rule__Computation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Computation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComputationAccess().getGroup_3()); }
	(rule__Computation__Group_3__0)?
	{ after(grammarAccess.getComputationAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Computation__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Computation__Group__4__Impl
	rule__Computation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Computation__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComputationAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getComputationAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Computation__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Computation__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Computation__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComputationAccess().getGroup_5()); }
	(rule__Computation__Group_5__0)?
	{ after(grammarAccess.getComputationAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Computation__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Computation__Group_3__0__Impl
	rule__Computation__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Computation__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComputationAccess().getCommaKeyword_3_0()); }
	','
	{ after(grammarAccess.getComputationAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Computation__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Computation__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Computation__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComputationAccess().getUbAssignment_3_1()); }
	(rule__Computation__UbAssignment_3_1)
	{ after(grammarAccess.getComputationAccess().getUbAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Computation__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Computation__Group_5__0__Impl
	rule__Computation__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Computation__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComputationAccess().getInKeyword_5_0()); }
	'in'
	{ after(grammarAccess.getComputationAccess().getInKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Computation__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Computation__Group_5__1__Impl
	rule__Computation__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Computation__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComputationAccess().getBindingKeyword_5_1()); }
	'binding'
	{ after(grammarAccess.getComputationAccess().getBindingKeyword_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Computation__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Computation__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Computation__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getComputationAccess().getComponentAssignment_5_2()); }
		(rule__Computation__ComponentAssignment_5_2)
		{ after(grammarAccess.getComputationAccess().getComponentAssignment_5_2()); }
	)
	(
		{ before(grammarAccess.getComputationAccess().getComponentAssignment_5_2()); }
		(rule__Computation__ComponentAssignment_5_2)*
		{ after(grammarAccess.getComputationAccess().getComponentAssignment_5_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BAAlternative__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BAAlternative__Group__0__Impl
	rule__BAAlternative__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BAAlternative__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBAAlternativeAccess().getRightParenthesisKeyword_0()); }
	')'
	{ after(grammarAccess.getBAAlternativeAccess().getRightParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BAAlternative__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BAAlternative__Group__1__Impl
	rule__BAAlternative__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BAAlternative__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBAAlternativeAccess().getActionsAssignment_1()); }
	(rule__BAAlternative__ActionsAssignment_1)
	{ after(grammarAccess.getBAAlternativeAccess().getActionsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BAAlternative__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BAAlternative__Group__2__Impl
	rule__BAAlternative__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BAAlternative__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBAAlternativeAccess().getElseifaltAssignment_2()); }
	(rule__BAAlternative__ElseifaltAssignment_2)*
	{ after(grammarAccess.getBAAlternativeAccess().getElseifaltAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BAAlternative__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BAAlternative__Group__3__Impl
	rule__BAAlternative__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BAAlternative__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBAAlternativeAccess().getElsealtAssignment_3()); }
	(rule__BAAlternative__ElsealtAssignment_3)?
	{ after(grammarAccess.getBAAlternativeAccess().getElsealtAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BAAlternative__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BAAlternative__Group__4__Impl
	rule__BAAlternative__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__BAAlternative__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBAAlternativeAccess().getEndKeyword_4()); }
	'end'
	{ after(grammarAccess.getBAAlternativeAccess().getEndKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BAAlternative__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BAAlternative__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BAAlternative__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBAAlternativeAccess().getIfKeyword_5()); }
	'if'
	{ after(grammarAccess.getBAAlternativeAccess().getIfKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ElseifAlternative__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElseifAlternative__Group__0__Impl
	rule__ElseifAlternative__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseifAlternative__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElseifAlternativeAccess().getElsifKeyword_0()); }
	'elsif'
	{ after(grammarAccess.getElseifAlternativeAccess().getElsifKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseifAlternative__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElseifAlternative__Group__1__Impl
	rule__ElseifAlternative__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseifAlternative__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElseifAlternativeAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getElseifAlternativeAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseifAlternative__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElseifAlternative__Group__2__Impl
	rule__ElseifAlternative__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseifAlternative__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElseifAlternativeAccess().getTestAssignment_2()); }
	(rule__ElseifAlternative__TestAssignment_2)
	{ after(grammarAccess.getElseifAlternativeAccess().getTestAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseifAlternative__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElseifAlternative__Group__3__Impl
	rule__ElseifAlternative__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseifAlternative__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElseifAlternativeAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getElseifAlternativeAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseifAlternative__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElseifAlternative__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseifAlternative__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElseifAlternativeAccess().getActionsAssignment_4()); }
	(rule__ElseifAlternative__ActionsAssignment_4)
	{ after(grammarAccess.getElseifAlternativeAccess().getActionsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ElseAlternative__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElseAlternative__Group__0__Impl
	rule__ElseAlternative__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseAlternative__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElseAlternativeAccess().getElseKeyword_0()); }
	'else'
	{ after(grammarAccess.getElseAlternativeAccess().getElseKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseAlternative__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElseAlternative__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseAlternative__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElseAlternativeAccess().getActionsAssignment_1()); }
	(rule__ElseAlternative__ActionsAssignment_1)
	{ after(grammarAccess.getElseAlternativeAccess().getActionsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IssueException__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IssueException__Group__0__Impl
	rule__IssueException__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IssueException__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIssueExceptionAccess().getExceptionKeyword_0()); }
	'exception'
	{ after(grammarAccess.getIssueExceptionAccess().getExceptionKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IssueException__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IssueException__Group__1__Impl
	rule__IssueException__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IssueException__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIssueExceptionAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getIssueExceptionAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IssueException__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IssueException__Group__2__Impl
	rule__IssueException__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IssueException__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIssueExceptionAccess().getExceptionAssignment_2()); }
	(rule__IssueException__ExceptionAssignment_2)
	{ after(grammarAccess.getIssueExceptionAccess().getExceptionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IssueException__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IssueException__Group__3__Impl
	rule__IssueException__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IssueException__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIssueExceptionAccess().getMessageAssignment_3()); }
	(rule__IssueException__MessageAssignment_3)?
	{ after(grammarAccess.getIssueExceptionAccess().getMessageAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IssueException__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IssueException__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IssueException__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIssueExceptionAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getIssueExceptionAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LockingAction__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LockingAction__Group_2__0__Impl
	rule__LockingAction__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LockingAction__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLockingActionAccess().getRequired_data_accessAssignment_2_0()); }
	(rule__LockingAction__Required_data_accessAssignment_2_0)
	{ after(grammarAccess.getLockingActionAccess().getRequired_data_accessAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LockingAction__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LockingAction__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LockingAction__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLockingActionAccess().getLockAssignment_2_1()); }
	(rule__LockingAction__LockAssignment_2_1)
	{ after(grammarAccess.getLockingActionAccess().getLockAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LockingAction__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LockingAction__Group_3__0__Impl
	rule__LockingAction__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LockingAction__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLockingActionAccess().getRequired_data_accessAssignment_3_0()); }
	(rule__LockingAction__Required_data_accessAssignment_3_0)
	{ after(grammarAccess.getLockingActionAccess().getRequired_data_accessAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LockingAction__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LockingAction__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LockingAction__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLockingActionAccess().getUnlockAssignment_3_1()); }
	(rule__LockingAction__UnlockAssignment_3_1)
	{ after(grammarAccess.getLockingActionAccess().getUnlockAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FreezePort__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FreezePort__Group__0__Impl
	rule__FreezePort__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FreezePort__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFreezePortAccess().getFrozenKeyword_0()); }
	'frozen'
	{ after(grammarAccess.getFreezePortAccess().getFrozenKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FreezePort__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FreezePort__Group__1__Impl
	rule__FreezePort__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FreezePort__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFreezePortAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getFreezePortAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FreezePort__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FreezePort__Group__2__Impl
	rule__FreezePort__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FreezePort__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFreezePortAccess().getFrozenAssignment_2()); }
	(rule__FreezePort__FrozenAssignment_2)
	{ after(grammarAccess.getFreezePortAccess().getFrozenAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FreezePort__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FreezePort__Group__3__Impl
	rule__FreezePort__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FreezePort__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFreezePortAccess().getGroup_3()); }
	(rule__FreezePort__Group_3__0)*
	{ after(grammarAccess.getFreezePortAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FreezePort__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FreezePort__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FreezePort__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFreezePortAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getFreezePortAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FreezePort__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FreezePort__Group_3__0__Impl
	rule__FreezePort__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FreezePort__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFreezePortAccess().getCommaKeyword_3_0()); }
	','
	{ after(grammarAccess.getFreezePortAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FreezePort__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FreezePort__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FreezePort__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFreezePortAccess().getFrozenAssignment_3_1()); }
	(rule__FreezePort__FrozenAssignment_3_1)
	{ after(grammarAccess.getFreezePortAccess().getFrozenAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ActionTimeout__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionTimeout__Group__0__Impl
	rule__ActionTimeout__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionTimeout__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionTimeoutAccess().getTimeoutKeyword_0()); }
	'timeout'
	{ after(grammarAccess.getActionTimeoutAccess().getTimeoutKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionTimeout__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionTimeout__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionTimeout__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionTimeoutAccess().getDurationAssignment_1()); }
	(rule__ActionTimeout__DurationAssignment_1)
	{ after(grammarAccess.getActionTimeoutAccess().getDurationAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BehaviorTime__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BehaviorTime__Group_1__0__Impl
	rule__BehaviorTime__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorTime__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorTimeAccess().getValueAssignment_1_0()); }
	(rule__BehaviorTime__ValueAssignment_1_0)
	{ after(grammarAccess.getBehaviorTimeAccess().getValueAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorTime__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BehaviorTime__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorTime__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorTimeAccess().getAlternatives_1_1()); }
	(rule__BehaviorTime__Alternatives_1_1)?
	{ after(grammarAccess.getBehaviorTimeAccess().getAlternatives_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Exception__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exception__Group__0__Impl
	rule__Exception__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exception__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExceptionAccess().getNameAssignment_0()); }
	(rule__Exception__NameAssignment_0)
	{ after(grammarAccess.getExceptionAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exception__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exception__Group__1__Impl
	rule__Exception__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Exception__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExceptionAccess().getDescriptionAssignment_1()); }
	(rule__Exception__DescriptionAssignment_1)
	{ after(grammarAccess.getExceptionAccess().getDescriptionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exception__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exception__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exception__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExceptionAccess().getCodeAssignment_2()); }
	(rule__Exception__CodeAssignment_2)?
	{ after(grammarAccess.getExceptionAccess().getCodeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GhostVariables__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GhostVariables__Group__0__Impl
	rule__GhostVariables__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GhostVariables__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGhostVariablesAccess().getGhostKeyword_0()); }
	'ghost'
	{ after(grammarAccess.getGhostVariablesAccess().getGhostKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GhostVariables__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GhostVariables__Group__1__Impl
	rule__GhostVariables__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GhostVariables__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGhostVariablesAccess().getVariablesKeyword_1()); }
	'variables'
	{ after(grammarAccess.getGhostVariablesAccess().getVariablesKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GhostVariables__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GhostVariables__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GhostVariables__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getGhostVariablesAccess().getGvAssignment_2()); }
		(rule__GhostVariables__GvAssignment_2)
		{ after(grammarAccess.getGhostVariablesAccess().getGvAssignment_2()); }
	)
	(
		{ before(grammarAccess.getGhostVariablesAccess().getGvAssignment_2()); }
		(rule__GhostVariables__GvAssignment_2)*
		{ after(grammarAccess.getGhostVariablesAccess().getGvAssignment_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GhostVariable__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GhostVariable__Group__0__Impl
	rule__GhostVariable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GhostVariable__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGhostVariableAccess().getDefKeyword_0()); }
	'def'
	{ after(grammarAccess.getGhostVariableAccess().getDefKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GhostVariable__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GhostVariable__Group__1__Impl
	rule__GhostVariable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GhostVariable__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGhostVariableAccess().getNameAssignment_1()); }
	(rule__GhostVariable__NameAssignment_1)
	{ after(grammarAccess.getGhostVariableAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GhostVariable__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GhostVariable__Group__2__Impl
	rule__GhostVariable__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GhostVariable__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGhostVariableAccess().getTildeKeyword_2()); }
	'~'
	{ after(grammarAccess.getGhostVariableAccess().getTildeKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GhostVariable__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GhostVariable__Group__3__Impl
	rule__GhostVariable__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__GhostVariable__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGhostVariableAccess().getTodAssignment_3()); }
	(rule__GhostVariable__TodAssignment_3)
	{ after(grammarAccess.getGhostVariableAccess().getTodAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GhostVariable__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GhostVariable__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GhostVariable__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGhostVariableAccess().getGroup_4()); }
	(rule__GhostVariable__Group_4__0)?
	{ after(grammarAccess.getGhostVariableAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GhostVariable__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GhostVariable__Group_4__0__Impl
	rule__GhostVariable__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GhostVariable__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGhostVariableAccess().getColonKeyword_4_0()); }
	':'
	{ after(grammarAccess.getGhostVariableAccess().getColonKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GhostVariable__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GhostVariable__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GhostVariable__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGhostVariableAccess().getAssnAssignment_4_1()); }
	(rule__GhostVariable__AssnAssignment_4_1)
	{ after(grammarAccess.getGhostVariableAccess().getAssnAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NamedAssertion__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamedAssertion__Group__0__Impl
	rule__NamedAssertion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedAssertion__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamedAssertionAccess().getLessThanSignLessThanSignKeyword_0()); }
	'<<'
	{ after(grammarAccess.getNamedAssertionAccess().getLessThanSignLessThanSignKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedAssertion__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamedAssertion__Group__1__Impl
	rule__NamedAssertion__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedAssertion__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamedAssertionAccess().getNameAssignment_1()); }
	(rule__NamedAssertion__NameAssignment_1)
	{ after(grammarAccess.getNamedAssertionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedAssertion__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamedAssertion__Group__2__Impl
	rule__NamedAssertion__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedAssertion__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamedAssertionAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getNamedAssertionAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedAssertion__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamedAssertion__Group__3__Impl
	rule__NamedAssertion__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedAssertion__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamedAssertionAccess().getAlternatives_3()); }
	(rule__NamedAssertion__Alternatives_3)
	{ after(grammarAccess.getNamedAssertionAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedAssertion__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamedAssertion__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedAssertion__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamedAssertionAccess().getGreaterThanSignGreaterThanSignKeyword_4()); }
	'>>'
	{ after(grammarAccess.getNamedAssertionAccess().getGreaterThanSignGreaterThanSignKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NamedAssertion__Group_3_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamedAssertion__Group_3_0__0__Impl
	rule__NamedAssertion__Group_3_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedAssertion__Group_3_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamedAssertionAccess().getFormalsAssignment_3_0_0()); }
	(rule__NamedAssertion__FormalsAssignment_3_0_0)?
	{ after(grammarAccess.getNamedAssertionAccess().getFormalsAssignment_3_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedAssertion__Group_3_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamedAssertion__Group_3_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedAssertion__Group_3_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamedAssertionAccess().getAlternatives_3_0_1()); }
	(rule__NamedAssertion__Alternatives_3_0_1)
	{ after(grammarAccess.getNamedAssertionAccess().getAlternatives_3_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NamedAssertion__Group_3_0_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamedAssertion__Group_3_0_1_0__0__Impl
	rule__NamedAssertion__Group_3_0_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedAssertion__Group_3_0_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamedAssertionAccess().getPredAssignment_3_0_1_0_0()); }
	(rule__NamedAssertion__PredAssignment_3_0_1_0_0)
	{ after(grammarAccess.getNamedAssertionAccess().getPredAssignment_3_0_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedAssertion__Group_3_0_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamedAssertion__Group_3_0_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedAssertion__Group_3_0_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamedAssertionAccess().getPredicateAssignment_3_0_1_0_1()); }
	(rule__NamedAssertion__PredicateAssignment_3_0_1_0_1)
	{ after(grammarAccess.getNamedAssertionAccess().getPredicateAssignment_3_0_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NamedAssertion__Group_3_0_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamedAssertion__Group_3_0_1_1__0__Impl
	rule__NamedAssertion__Group_3_0_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedAssertion__Group_3_0_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamedAssertionAccess().getReturnsKeyword_3_0_1_1_0()); }
	'returns'
	{ after(grammarAccess.getNamedAssertionAccess().getReturnsKeyword_3_0_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedAssertion__Group_3_0_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamedAssertion__Group_3_0_1_1__1__Impl
	rule__NamedAssertion__Group_3_0_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedAssertion__Group_3_0_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamedAssertionAccess().getTodAssignment_3_0_1_1_1()); }
	(rule__NamedAssertion__TodAssignment_3_0_1_1_1)
	{ after(grammarAccess.getNamedAssertionAccess().getTodAssignment_3_0_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedAssertion__Group_3_0_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamedAssertion__Group_3_0_1_1__2__Impl
	rule__NamedAssertion__Group_3_0_1_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedAssertion__Group_3_0_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamedAssertionAccess().getFuncAssignment_3_0_1_1_2()); }
	(rule__NamedAssertion__FuncAssignment_3_0_1_1_2)
	{ after(grammarAccess.getNamedAssertionAccess().getFuncAssignment_3_0_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedAssertion__Group_3_0_1_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamedAssertion__Group_3_0_1_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedAssertion__Group_3_0_1_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamedAssertionAccess().getFunctionvalueAssignment_3_0_1_1_3()); }
	(rule__NamedAssertion__FunctionvalueAssignment_3_0_1_1_3)
	{ after(grammarAccess.getNamedAssertionAccess().getFunctionvalueAssignment_3_0_1_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NamedAssertion__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamedAssertion__Group_3_1__0__Impl
	rule__NamedAssertion__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedAssertion__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamedAssertionAccess().getAssertionvariableAssignment_3_1_0()); }
	(rule__NamedAssertion__AssertionvariableAssignment_3_1_0)
	{ after(grammarAccess.getNamedAssertionAccess().getAssertionvariableAssignment_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedAssertion__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamedAssertion__Group_3_1__1__Impl
	rule__NamedAssertion__Group_3_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedAssertion__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamedAssertionAccess().getTildeKeyword_3_1_1()); }
	'~'
	{ after(grammarAccess.getNamedAssertionAccess().getTildeKeyword_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedAssertion__Group_3_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamedAssertion__Group_3_1__2__Impl
	rule__NamedAssertion__Group_3_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedAssertion__Group_3_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamedAssertionAccess().getEnumerationTypeAssignment_3_1_2()); }
	(rule__NamedAssertion__EnumerationTypeAssignment_3_1_2)
	{ after(grammarAccess.getNamedAssertionAccess().getEnumerationTypeAssignment_3_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedAssertion__Group_3_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamedAssertion__Group_3_1__3__Impl
	rule__NamedAssertion__Group_3_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedAssertion__Group_3_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamedAssertionAccess().getEnumerAssignment_3_1_3()); }
	(rule__NamedAssertion__EnumerAssignment_3_1_3)
	{ after(grammarAccess.getNamedAssertionAccess().getEnumerAssignment_3_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedAssertion__Group_3_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamedAssertion__Group_3_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedAssertion__Group_3_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamedAssertionAccess().getEnumerationAssignment_3_1_4()); }
	(rule__NamedAssertion__EnumerationAssignment_3_1_4)
	{ after(grammarAccess.getNamedAssertionAccess().getEnumerationAssignment_3_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NamelessAssertion__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamelessAssertion__Group__0__Impl
	rule__NamelessAssertion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NamelessAssertion__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamelessAssertionAccess().getLessThanSignLessThanSignKeyword_0()); }
	'<<'
	{ after(grammarAccess.getNamelessAssertionAccess().getLessThanSignLessThanSignKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamelessAssertion__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamelessAssertion__Group__1__Impl
	rule__NamelessAssertion__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NamelessAssertion__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamelessAssertionAccess().getPredicateAssignment_1()); }
	(rule__NamelessAssertion__PredicateAssignment_1)
	{ after(grammarAccess.getNamelessAssertionAccess().getPredicateAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamelessAssertion__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamelessAssertion__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NamelessAssertion__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamelessAssertionAccess().getGreaterThanSignGreaterThanSignKeyword_2()); }
	'>>'
	{ after(grammarAccess.getNamelessAssertionAccess().getGreaterThanSignGreaterThanSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NamelessFunction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamelessFunction__Group__0__Impl
	rule__NamelessFunction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NamelessFunction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamelessFunctionAccess().getLessThanSignLessThanSignKeyword_0()); }
	'<<'
	{ after(grammarAccess.getNamelessFunctionAccess().getLessThanSignLessThanSignKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamelessFunction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamelessFunction__Group__1__Impl
	rule__NamelessFunction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NamelessFunction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamelessFunctionAccess().getReturnsKeyword_1()); }
	'returns'
	{ after(grammarAccess.getNamelessFunctionAccess().getReturnsKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamelessFunction__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamelessFunction__Group__2__Impl
	rule__NamelessFunction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NamelessFunction__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamelessFunctionAccess().getTodAssignment_2()); }
	(rule__NamelessFunction__TodAssignment_2)
	{ after(grammarAccess.getNamelessFunctionAccess().getTodAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamelessFunction__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamelessFunction__Group__3__Impl
	rule__NamelessFunction__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__NamelessFunction__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamelessFunctionAccess().getFuncAssignment_3()); }
	(rule__NamelessFunction__FuncAssignment_3)
	{ after(grammarAccess.getNamelessFunctionAccess().getFuncAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamelessFunction__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamelessFunction__Group__4__Impl
	rule__NamelessFunction__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__NamelessFunction__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamelessFunctionAccess().getFunctionvalueAssignment_4()); }
	(rule__NamelessFunction__FunctionvalueAssignment_4)
	{ after(grammarAccess.getNamelessFunctionAccess().getFunctionvalueAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamelessFunction__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamelessFunction__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NamelessFunction__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamelessFunctionAccess().getGreaterThanSignGreaterThanSignKeyword_5()); }
	'>>'
	{ after(grammarAccess.getNamelessFunctionAccess().getGreaterThanSignGreaterThanSignKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NamelessEnumeration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamelessEnumeration__Group__0__Impl
	rule__NamelessEnumeration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NamelessEnumeration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamelessEnumerationAccess().getLessThanSignLessThanSignKeyword_0()); }
	'<<'
	{ after(grammarAccess.getNamelessEnumerationAccess().getLessThanSignLessThanSignKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamelessEnumeration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamelessEnumeration__Group__1__Impl
	rule__NamelessEnumeration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NamelessEnumeration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamelessEnumerationAccess().getPlusSignEqualsSignGreaterThanSignKeyword_1()); }
	'+=>'
	{ after(grammarAccess.getNamelessEnumerationAccess().getPlusSignEqualsSignGreaterThanSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamelessEnumeration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamelessEnumeration__Group__2__Impl
	rule__NamelessEnumeration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NamelessEnumeration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamelessEnumerationAccess().getEnumerationAssignment_2()); }
	(rule__NamelessEnumeration__EnumerationAssignment_2)
	{ after(grammarAccess.getNamelessEnumerationAccess().getEnumerationAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamelessEnumeration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamelessEnumeration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NamelessEnumeration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamelessEnumerationAccess().getGreaterThanSignGreaterThanSignKeyword_3()); }
	'>>'
	{ after(grammarAccess.getNamelessEnumerationAccess().getGreaterThanSignGreaterThanSignKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_5__0__Impl
	rule__Expression__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getLAssignment_5_0()); }
	(rule__Expression__LAssignment_5_0)
	{ after(grammarAccess.getExpressionAccess().getLAssignment_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getGroup_5_1()); }
	(rule__Expression__Group_5_1__0)?
	{ after(grammarAccess.getExpressionAccess().getGroup_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_5_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_5_1__0__Impl
	rule__Expression__Group_5_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_5_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getAlternatives_5_1_0()); }
	(rule__Expression__Alternatives_5_1_0)
	{ after(grammarAccess.getExpressionAccess().getAlternatives_5_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_5_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_5_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_5_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getRAssignment_5_1_1()); }
	(rule__Expression__RAssignment_5_1_1)
	{ after(grammarAccess.getExpressionAccess().getRAssignment_5_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Disjunction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Disjunction__Group__0__Impl
	rule__Disjunction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Disjunction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDisjunctionAccess().getLAssignment_0()); }
	(rule__Disjunction__LAssignment_0)
	{ after(grammarAccess.getDisjunctionAccess().getLAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Disjunction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Disjunction__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Disjunction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDisjunctionAccess().getAlternatives_1()); }
	(rule__Disjunction__Alternatives_1)?
	{ after(grammarAccess.getDisjunctionAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Disjunction__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Disjunction__Group_1_0__0__Impl
	rule__Disjunction__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Disjunction__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDisjunctionAccess().getSymAssignment_1_0_0()); }
	(rule__Disjunction__SymAssignment_1_0_0)
	{ after(grammarAccess.getDisjunctionAccess().getSymAssignment_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Disjunction__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Disjunction__Group_1_0__1__Impl
	rule__Disjunction__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Disjunction__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDisjunctionAccess().getRAssignment_1_0_1()); }
	(rule__Disjunction__RAssignment_1_0_1)
	{ after(grammarAccess.getDisjunctionAccess().getRAssignment_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Disjunction__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Disjunction__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Disjunction__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDisjunctionAccess().getGroup_1_0_2()); }
	(rule__Disjunction__Group_1_0_2__0)*
	{ after(grammarAccess.getDisjunctionAccess().getGroup_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Disjunction__Group_1_0_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Disjunction__Group_1_0_2__0__Impl
	rule__Disjunction__Group_1_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Disjunction__Group_1_0_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDisjunctionAccess().getOrKeyword_1_0_2_0()); }
	'or'
	{ after(grammarAccess.getDisjunctionAccess().getOrKeyword_1_0_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Disjunction__Group_1_0_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Disjunction__Group_1_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Disjunction__Group_1_0_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDisjunctionAccess().getRAssignment_1_0_2_1()); }
	(rule__Disjunction__RAssignment_1_0_2_1)
	{ after(grammarAccess.getDisjunctionAccess().getRAssignment_1_0_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Disjunction__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Disjunction__Group_1_1__0__Impl
	rule__Disjunction__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Disjunction__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDisjunctionAccess().getOrKeyword_1_1_0()); }
	'or'
	{ after(grammarAccess.getDisjunctionAccess().getOrKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Disjunction__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Disjunction__Group_1_1__1__Impl
	rule__Disjunction__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Disjunction__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDisjunctionAccess().getSymAssignment_1_1_1()); }
	(rule__Disjunction__SymAssignment_1_1_1)
	{ after(grammarAccess.getDisjunctionAccess().getSymAssignment_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Disjunction__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Disjunction__Group_1_1__2__Impl
	rule__Disjunction__Group_1_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Disjunction__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDisjunctionAccess().getRAssignment_1_1_2()); }
	(rule__Disjunction__RAssignment_1_1_2)
	{ after(grammarAccess.getDisjunctionAccess().getRAssignment_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Disjunction__Group_1_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Disjunction__Group_1_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Disjunction__Group_1_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDisjunctionAccess().getGroup_1_1_3()); }
	(rule__Disjunction__Group_1_1_3__0)*
	{ after(grammarAccess.getDisjunctionAccess().getGroup_1_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Disjunction__Group_1_1_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Disjunction__Group_1_1_3__0__Impl
	rule__Disjunction__Group_1_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Disjunction__Group_1_1_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDisjunctionAccess().getOrKeyword_1_1_3_0()); }
	'or'
	{ after(grammarAccess.getDisjunctionAccess().getOrKeyword_1_1_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Disjunction__Group_1_1_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Disjunction__Group_1_1_3__1__Impl
	rule__Disjunction__Group_1_1_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Disjunction__Group_1_1_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDisjunctionAccess().getElseKeyword_1_1_3_1()); }
	'else'
	{ after(grammarAccess.getDisjunctionAccess().getElseKeyword_1_1_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Disjunction__Group_1_1_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Disjunction__Group_1_1_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Disjunction__Group_1_1_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDisjunctionAccess().getRAssignment_1_1_3_2()); }
	(rule__Disjunction__RAssignment_1_1_3_2)
	{ after(grammarAccess.getDisjunctionAccess().getRAssignment_1_1_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Disjunction__Group_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Disjunction__Group_1_2__0__Impl
	rule__Disjunction__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Disjunction__Group_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDisjunctionAccess().getSymAssignment_1_2_0()); }
	(rule__Disjunction__SymAssignment_1_2_0)
	{ after(grammarAccess.getDisjunctionAccess().getSymAssignment_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Disjunction__Group_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Disjunction__Group_1_2__1__Impl
	rule__Disjunction__Group_1_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Disjunction__Group_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDisjunctionAccess().getRAssignment_1_2_1()); }
	(rule__Disjunction__RAssignment_1_2_1)
	{ after(grammarAccess.getDisjunctionAccess().getRAssignment_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Disjunction__Group_1_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Disjunction__Group_1_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Disjunction__Group_1_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDisjunctionAccess().getGroup_1_2_2()); }
	(rule__Disjunction__Group_1_2_2__0)*
	{ after(grammarAccess.getDisjunctionAccess().getGroup_1_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Disjunction__Group_1_2_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Disjunction__Group_1_2_2__0__Impl
	rule__Disjunction__Group_1_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Disjunction__Group_1_2_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDisjunctionAccess().getXorKeyword_1_2_2_0()); }
	'xor'
	{ after(grammarAccess.getDisjunctionAccess().getXorKeyword_1_2_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Disjunction__Group_1_2_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Disjunction__Group_1_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Disjunction__Group_1_2_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDisjunctionAccess().getRAssignment_1_2_2_1()); }
	(rule__Disjunction__RAssignment_1_2_2_1)
	{ after(grammarAccess.getDisjunctionAccess().getRAssignment_1_2_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Conjunction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conjunction__Group__0__Impl
	rule__Conjunction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Conjunction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConjunctionAccess().getLAssignment_0()); }
	(rule__Conjunction__LAssignment_0)
	{ after(grammarAccess.getConjunctionAccess().getLAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conjunction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conjunction__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Conjunction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConjunctionAccess().getAlternatives_1()); }
	(rule__Conjunction__Alternatives_1)?
	{ after(grammarAccess.getConjunctionAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Conjunction__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conjunction__Group_1_0__0__Impl
	rule__Conjunction__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Conjunction__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConjunctionAccess().getSymAssignment_1_0_0()); }
	(rule__Conjunction__SymAssignment_1_0_0)
	{ after(grammarAccess.getConjunctionAccess().getSymAssignment_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conjunction__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conjunction__Group_1_0__1__Impl
	rule__Conjunction__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Conjunction__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConjunctionAccess().getRAssignment_1_0_1()); }
	(rule__Conjunction__RAssignment_1_0_1)
	{ after(grammarAccess.getConjunctionAccess().getRAssignment_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conjunction__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conjunction__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Conjunction__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConjunctionAccess().getGroup_1_0_2()); }
	(rule__Conjunction__Group_1_0_2__0)*
	{ after(grammarAccess.getConjunctionAccess().getGroup_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Conjunction__Group_1_0_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conjunction__Group_1_0_2__0__Impl
	rule__Conjunction__Group_1_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Conjunction__Group_1_0_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConjunctionAccess().getAndKeyword_1_0_2_0()); }
	'and'
	{ after(grammarAccess.getConjunctionAccess().getAndKeyword_1_0_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conjunction__Group_1_0_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conjunction__Group_1_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Conjunction__Group_1_0_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConjunctionAccess().getRAssignment_1_0_2_1()); }
	(rule__Conjunction__RAssignment_1_0_2_1)
	{ after(grammarAccess.getConjunctionAccess().getRAssignment_1_0_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Conjunction__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conjunction__Group_1_1__0__Impl
	rule__Conjunction__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Conjunction__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConjunctionAccess().getAndKeyword_1_1_0()); }
	'and'
	{ after(grammarAccess.getConjunctionAccess().getAndKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conjunction__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conjunction__Group_1_1__1__Impl
	rule__Conjunction__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Conjunction__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConjunctionAccess().getSymAssignment_1_1_1()); }
	(rule__Conjunction__SymAssignment_1_1_1)
	{ after(grammarAccess.getConjunctionAccess().getSymAssignment_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conjunction__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conjunction__Group_1_1__2__Impl
	rule__Conjunction__Group_1_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Conjunction__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConjunctionAccess().getRAssignment_1_1_2()); }
	(rule__Conjunction__RAssignment_1_1_2)
	{ after(grammarAccess.getConjunctionAccess().getRAssignment_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conjunction__Group_1_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conjunction__Group_1_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Conjunction__Group_1_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConjunctionAccess().getGroup_1_1_3()); }
	(rule__Conjunction__Group_1_1_3__0)*
	{ after(grammarAccess.getConjunctionAccess().getGroup_1_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Conjunction__Group_1_1_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conjunction__Group_1_1_3__0__Impl
	rule__Conjunction__Group_1_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Conjunction__Group_1_1_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConjunctionAccess().getAndKeyword_1_1_3_0()); }
	'and'
	{ after(grammarAccess.getConjunctionAccess().getAndKeyword_1_1_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conjunction__Group_1_1_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conjunction__Group_1_1_3__1__Impl
	rule__Conjunction__Group_1_1_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Conjunction__Group_1_1_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConjunctionAccess().getThenKeyword_1_1_3_1()); }
	'then'
	{ after(grammarAccess.getConjunctionAccess().getThenKeyword_1_1_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conjunction__Group_1_1_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conjunction__Group_1_1_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Conjunction__Group_1_1_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConjunctionAccess().getRAssignment_1_1_3_2()); }
	(rule__Conjunction__RAssignment_1_1_3_2)
	{ after(grammarAccess.getConjunctionAccess().getRAssignment_1_1_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Relation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relation__Group__0__Impl
	rule__Relation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationAccess().getLAssignment_0()); }
	(rule__Relation__LAssignment_0)
	{ after(grammarAccess.getRelationAccess().getLAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationAccess().getAlternatives_1()); }
	(rule__Relation__Alternatives_1)?
	{ after(grammarAccess.getRelationAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Relation__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relation__Group_1_0__0__Impl
	rule__Relation__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationAccess().getSymAssignment_1_0_0()); }
	(rule__Relation__SymAssignment_1_0_0)
	{ after(grammarAccess.getRelationAccess().getSymAssignment_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relation__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationAccess().getRAssignment_1_0_1()); }
	(rule__Relation__RAssignment_1_0_1)
	{ after(grammarAccess.getRelationAccess().getRAssignment_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Relation__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relation__Group_1_1__0__Impl
	rule__Relation__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationAccess().getInAssignment_1_1_0()); }
	(rule__Relation__InAssignment_1_1_0)
	{ after(grammarAccess.getRelationAccess().getInAssignment_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relation__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationAccess().getRangeAssignment_1_1_1()); }
	(rule__Relation__RangeAssignment_1_1_1)
	{ after(grammarAccess.getRelationAccess().getRangeAssignment_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AddSub__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddSub__Group__0__Impl
	rule__AddSub__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AddSub__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddSubAccess().getLAssignment_0()); }
	(rule__AddSub__LAssignment_0)
	{ after(grammarAccess.getAddSubAccess().getLAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddSub__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddSub__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddSub__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddSubAccess().getAlternatives_1()); }
	(rule__AddSub__Alternatives_1)?
	{ after(grammarAccess.getAddSubAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AddSub__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddSub__Group_1_0__0__Impl
	rule__AddSub__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AddSub__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddSubAccess().getSymAssignment_1_0_0()); }
	(rule__AddSub__SymAssignment_1_0_0)
	{ after(grammarAccess.getAddSubAccess().getSymAssignment_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddSub__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddSub__Group_1_0__1__Impl
	rule__AddSub__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AddSub__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddSubAccess().getRAssignment_1_0_1()); }
	(rule__AddSub__RAssignment_1_0_1)
	{ after(grammarAccess.getAddSubAccess().getRAssignment_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddSub__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddSub__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddSub__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddSubAccess().getGroup_1_0_2()); }
	(rule__AddSub__Group_1_0_2__0)*
	{ after(grammarAccess.getAddSubAccess().getGroup_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AddSub__Group_1_0_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddSub__Group_1_0_2__0__Impl
	rule__AddSub__Group_1_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AddSub__Group_1_0_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddSubAccess().getPlusSignKeyword_1_0_2_0()); }
	'+'
	{ after(grammarAccess.getAddSubAccess().getPlusSignKeyword_1_0_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddSub__Group_1_0_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddSub__Group_1_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddSub__Group_1_0_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddSubAccess().getRAssignment_1_0_2_1()); }
	(rule__AddSub__RAssignment_1_0_2_1)
	{ after(grammarAccess.getAddSubAccess().getRAssignment_1_0_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AddSub__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddSub__Group_1_1__0__Impl
	rule__AddSub__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AddSub__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddSubAccess().getSymAssignment_1_1_0()); }
	(rule__AddSub__SymAssignment_1_1_0)
	{ after(grammarAccess.getAddSubAccess().getSymAssignment_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddSub__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddSub__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddSub__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddSubAccess().getRAssignment_1_1_1()); }
	(rule__AddSub__RAssignment_1_1_1)
	{ after(grammarAccess.getAddSubAccess().getRAssignment_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultDiv__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultDiv__Group__0__Impl
	rule__MultDiv__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultDiv__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultDivAccess().getLAssignment_0()); }
	(rule__MultDiv__LAssignment_0)
	{ after(grammarAccess.getMultDivAccess().getLAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultDiv__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultDiv__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultDiv__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultDivAccess().getAlternatives_1()); }
	(rule__MultDiv__Alternatives_1)?
	{ after(grammarAccess.getMultDivAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultDiv__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultDiv__Group_1_0__0__Impl
	rule__MultDiv__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultDiv__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultDivAccess().getSymAssignment_1_0_0()); }
	(rule__MultDiv__SymAssignment_1_0_0)
	{ after(grammarAccess.getMultDivAccess().getSymAssignment_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultDiv__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultDiv__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultDiv__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultDivAccess().getRAssignment_1_0_1()); }
	(rule__MultDiv__RAssignment_1_0_1)
	{ after(grammarAccess.getMultDivAccess().getRAssignment_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultDiv__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultDiv__Group_1_1__0__Impl
	rule__MultDiv__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultDiv__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultDivAccess().getSymAssignment_1_1_0()); }
	(rule__MultDiv__SymAssignment_1_1_0)
	{ after(grammarAccess.getMultDivAccess().getSymAssignment_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultDiv__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultDiv__Group_1_1__1__Impl
	rule__MultDiv__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MultDiv__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultDivAccess().getRAssignment_1_1_1()); }
	(rule__MultDiv__RAssignment_1_1_1)
	{ after(grammarAccess.getMultDivAccess().getRAssignment_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultDiv__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultDiv__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultDiv__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultDivAccess().getGroup_1_1_2()); }
	(rule__MultDiv__Group_1_1_2__0)*
	{ after(grammarAccess.getMultDivAccess().getGroup_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultDiv__Group_1_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultDiv__Group_1_1_2__0__Impl
	rule__MultDiv__Group_1_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultDiv__Group_1_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultDivAccess().getAsteriskKeyword_1_1_2_0()); }
	'*'
	{ after(grammarAccess.getMultDivAccess().getAsteriskKeyword_1_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultDiv__Group_1_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultDiv__Group_1_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultDiv__Group_1_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultDivAccess().getRAssignment_1_1_2_1()); }
	(rule__MultDiv__RAssignment_1_1_2_1)
	{ after(grammarAccess.getMultDivAccess().getRAssignment_1_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Exp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exp__Group__0__Impl
	rule__Exp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpAccess().getLAssignment_0()); }
	(rule__Exp__LAssignment_0)
	{ after(grammarAccess.getExpAccess().getLAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpAccess().getGroup_1()); }
	(rule__Exp__Group_1__0)?
	{ after(grammarAccess.getExpAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Exp__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exp__Group_1__0__Impl
	rule__Exp__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpAccess().getSymAssignment_1_0()); }
	(rule__Exp__SymAssignment_1_0)
	{ after(grammarAccess.getExpAccess().getSymAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exp__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpAccess().getRAssignment_1_1()); }
	(rule__Exp__RAssignment_1_1)
	{ after(grammarAccess.getExpAccess().getRAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Subexpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Subexpression__Group__0__Impl
	rule__Subexpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Subexpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubexpressionAccess().getUnaryAssignment_0()); }
	(rule__Subexpression__UnaryAssignment_0)?
	{ after(grammarAccess.getSubexpressionAccess().getUnaryAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Subexpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Subexpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Subexpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubexpressionAccess().getTimed_expressionAssignment_1()); }
	(rule__Subexpression__Timed_expressionAssignment_1)
	{ after(grammarAccess.getSubexpressionAccess().getTimed_expressionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TimedExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimedExpression__Group__0__Impl
	rule__TimedExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimedExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimedExpressionAccess().getSubjectAssignment_0()); }
	(rule__TimedExpression__SubjectAssignment_0)
	{ after(grammarAccess.getTimedExpressionAccess().getSubjectAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimedExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimedExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimedExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimedExpressionAccess().getAlternatives_1()); }
	(rule__TimedExpression__Alternatives_1)?
	{ after(grammarAccess.getTimedExpressionAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TimedExpression__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimedExpression__Group_1_1__0__Impl
	rule__TimedExpression__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimedExpression__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimedExpressionAccess().getAtAssignment_1_1_0()); }
	(rule__TimedExpression__AtAssignment_1_1_0)
	{ after(grammarAccess.getTimedExpressionAccess().getAtAssignment_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimedExpression__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimedExpression__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimedExpression__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimedExpressionAccess().getTimeAssignment_1_1_1()); }
	(rule__TimedExpression__TimeAssignment_1_1_1)
	{ after(grammarAccess.getTimedExpressionAccess().getTimeAssignment_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TimedExpression__Group_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimedExpression__Group_1_2__0__Impl
	rule__TimedExpression__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimedExpression__Group_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimedExpressionAccess().getCaretAssignment_1_2_0()); }
	(rule__TimedExpression__CaretAssignment_1_2_0)
	{ after(grammarAccess.getTimedExpressionAccess().getCaretAssignment_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimedExpression__Group_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimedExpression__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimedExpression__Group_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimedExpressionAccess().getShiftAssignment_1_2_1()); }
	(rule__TimedExpression__ShiftAssignment_1_2_1)
	{ after(grammarAccess.getTimedExpressionAccess().getShiftAssignment_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParenthesizedSubexpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParenthesizedSubexpression__Group__0__Impl
	rule__ParenthesizedSubexpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesizedSubexpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParenthesizedSubexpressionAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getParenthesizedSubexpressionAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesizedSubexpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParenthesizedSubexpression__Group__1__Impl
	rule__ParenthesizedSubexpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesizedSubexpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParenthesizedSubexpressionAccess().getAlternatives_1()); }
	(rule__ParenthesizedSubexpression__Alternatives_1)
	{ after(grammarAccess.getParenthesizedSubexpressionAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesizedSubexpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParenthesizedSubexpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesizedSubexpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParenthesizedSubexpressionAccess().getRightParenthesisKeyword_2()); }
	')'
	{ after(grammarAccess.getParenthesizedSubexpressionAccess().getRightParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParenthesizedSubexpression__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParenthesizedSubexpression__Group_1_0__0__Impl
	rule__ParenthesizedSubexpression__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesizedSubexpression__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParenthesizedSubexpressionAccess().getExpressionAssignment_1_0_0()); }
	(rule__ParenthesizedSubexpression__ExpressionAssignment_1_0_0)
	{ after(grammarAccess.getParenthesizedSubexpressionAccess().getExpressionAssignment_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesizedSubexpression__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParenthesizedSubexpression__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesizedSubexpression__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParenthesizedSubexpressionAccess().getGroup_1_0_1()); }
	(rule__ParenthesizedSubexpression__Group_1_0_1__0)?
	{ after(grammarAccess.getParenthesizedSubexpressionAccess().getGroup_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParenthesizedSubexpression__Group_1_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParenthesizedSubexpression__Group_1_0_1__0__Impl
	rule__ParenthesizedSubexpression__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesizedSubexpression__Group_1_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParenthesizedSubexpressionAccess().getQuestionMarkQuestionMarkKeyword_1_0_1_0()); }
	'??'
	{ after(grammarAccess.getParenthesizedSubexpressionAccess().getQuestionMarkQuestionMarkKeyword_1_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesizedSubexpression__Group_1_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParenthesizedSubexpression__Group_1_0_1__1__Impl
	rule__ParenthesizedSubexpression__Group_1_0_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesizedSubexpression__Group_1_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParenthesizedSubexpressionAccess().getTAssignment_1_0_1_1()); }
	(rule__ParenthesizedSubexpression__TAssignment_1_0_1_1)
	{ after(grammarAccess.getParenthesizedSubexpressionAccess().getTAssignment_1_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesizedSubexpression__Group_1_0_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParenthesizedSubexpression__Group_1_0_1__2__Impl
	rule__ParenthesizedSubexpression__Group_1_0_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesizedSubexpression__Group_1_0_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParenthesizedSubexpressionAccess().getColonKeyword_1_0_1_2()); }
	':'
	{ after(grammarAccess.getParenthesizedSubexpressionAccess().getColonKeyword_1_0_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesizedSubexpression__Group_1_0_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParenthesizedSubexpression__Group_1_0_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesizedSubexpression__Group_1_0_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParenthesizedSubexpressionAccess().getFAssignment_1_0_1_3()); }
	(rule__ParenthesizedSubexpression__FAssignment_1_0_1_3)
	{ after(grammarAccess.getParenthesizedSubexpressionAccess().getFAssignment_1_0_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Range__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Range__Group__0__Impl
	rule__Range__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeAccess().getLower_boundAssignment_0()); }
	(rule__Range__Lower_boundAssignment_0)
	{ after(grammarAccess.getRangeAccess().getLower_boundAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Range__Group__1__Impl
	rule__Range__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeAccess().getSymAssignment_1()); }
	(rule__Range__SymAssignment_1)
	{ after(grammarAccess.getRangeAccess().getSymAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Range__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeAccess().getUpper_boundAssignment_2()); }
	(rule__Range__Upper_boundAssignment_2)
	{ after(grammarAccess.getRangeAccess().getUpper_boundAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalExpression__Group__0__Impl
	rule__ConditionalExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalExpressionAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getConditionalExpressionAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalExpression__Group__1__Impl
	rule__ConditionalExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalExpressionAccess().getIfKeyword_1()); }
	'if'
	{ after(grammarAccess.getConditionalExpressionAccess().getIfKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalExpression__Group__2__Impl
	rule__ConditionalExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalExpressionAccess().getPredAssignment_2()); }
	(rule__ConditionalExpression__PredAssignment_2)
	{ after(grammarAccess.getConditionalExpressionAccess().getPredAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalExpression__Group__3__Impl
	rule__ConditionalExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalExpressionAccess().getThenKeyword_3()); }
	'then'
	{ after(grammarAccess.getConditionalExpressionAccess().getThenKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalExpression__Group__4__Impl
	rule__ConditionalExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalExpressionAccess().getTAssignment_4()); }
	(rule__ConditionalExpression__TAssignment_4)
	{ after(grammarAccess.getConditionalExpressionAccess().getTAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalExpression__Group__5__Impl
	rule__ConditionalExpression__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalExpressionAccess().getElseKeyword_5()); }
	'else'
	{ after(grammarAccess.getConditionalExpressionAccess().getElseKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalExpression__Group__6__Impl
	rule__ConditionalExpression__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalExpressionAccess().getFAssignment_6()); }
	(rule__ConditionalExpression__FAssignment_6)
	{ after(grammarAccess.getConditionalExpressionAccess().getFAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalExpression__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalExpressionAccess().getRightParenthesisKeyword_7()); }
	')'
	{ after(grammarAccess.getConditionalExpressionAccess().getRightParenthesisKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnumerationValue__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumerationValue__Group__0__Impl
	rule__EnumerationValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationValue__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumerationValueAccess().getEnumeration_typeAssignment_0()); }
	(rule__EnumerationValue__Enumeration_typeAssignment_0)
	{ after(grammarAccess.getEnumerationValueAccess().getEnumeration_typeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationValue__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumerationValue__Group__1__Impl
	rule__EnumerationValue__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationValue__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumerationValueAccess().getTickAssignment_1()); }
	(rule__EnumerationValue__TickAssignment_1)
	{ after(grammarAccess.getEnumerationValueAccess().getTickAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationValue__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumerationValue__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationValue__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumerationValueAccess().getEnumeration_valueAssignment_2()); }
	(rule__EnumerationValue__Enumeration_valueAssignment_2)
	{ after(grammarAccess.getEnumerationValueAccess().getEnumeration_valueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NonNumericProperty__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NonNumericProperty__Group__0__Impl
	rule__NonNumericProperty__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NonNumericProperty__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNonNumericPropertyAccess().getLeftSquareBracketKeyword_0()); }
	'['
	{ after(grammarAccess.getNonNumericPropertyAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NonNumericProperty__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NonNumericProperty__Group__1__Impl
	rule__NonNumericProperty__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NonNumericProperty__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNonNumericPropertyAccess().getAlternatives_1()); }
	(rule__NonNumericProperty__Alternatives_1)
	{ after(grammarAccess.getNonNumericPropertyAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NonNumericProperty__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NonNumericProperty__Group__2__Impl
	rule__NonNumericProperty__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NonNumericProperty__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNonNumericPropertyAccess().getRightSquareBracketHyphenMinusGreaterThanSignKeyword_2()); }
	']->'
	{ after(grammarAccess.getNonNumericPropertyAccess().getRightSquareBracketHyphenMinusGreaterThanSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NonNumericProperty__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NonNumericProperty__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NonNumericProperty__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNonNumericPropertyAccess().getTyAssignment_3()); }
	(rule__NonNumericProperty__TyAssignment_3)
	{ after(grammarAccess.getNonNumericPropertyAccess().getTyAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__0__Impl
	rule__Variable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getNameAssignment_0()); }
	(rule__Variable__NameAssignment_0)
	{ after(grammarAccess.getVariableAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__1__Impl
	rule__Variable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getTildeKeyword_1()); }
	'~'
	{ after(grammarAccess.getVariableAccess().getTildeKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getTodAssignment_2()); }
	(rule__Variable__TodAssignment_2)
	{ after(grammarAccess.getVariableAccess().getTodAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ValueName__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueName__Group__0__Impl
	rule__ValueName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueName__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueNameAccess().getIdAssignment_0()); }
	(rule__ValueName__IdAssignment_0)
	{ after(grammarAccess.getValueNameAccess().getIdAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueName__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueName__Group__1__Impl
	rule__ValueName__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueName__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueNameAccess().getGroup_1()); }
	(rule__ValueName__Group_1__0)?
	{ after(grammarAccess.getValueNameAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueName__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueName__Group__2__Impl
	rule__ValueName__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueName__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueNameAccess().getGroup_2()); }
	(rule__ValueName__Group_2__0)?
	{ after(grammarAccess.getValueNameAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueName__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueName__Group__3__Impl
	rule__ValueName__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueName__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueNameAccess().getGroup_3()); }
	(rule__ValueName__Group_3__0)?
	{ after(grammarAccess.getValueNameAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueName__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueName__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueName__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueNameAccess().getAlternatives_4()); }
	(rule__ValueName__Alternatives_4)?
	{ after(grammarAccess.getValueNameAccess().getAlternatives_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ValueName__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueName__Group_1__0__Impl
	rule__ValueName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueName__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueNameAccess().getDollarSignKeyword_1_0()); }
	'$'
	{ after(grammarAccess.getValueNameAccess().getDollarSignKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueName__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueName__Group_1__1__Impl
	rule__ValueName__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueName__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueNameAccess().getLpAssignment_1_1()); }
	(rule__ValueName__LpAssignment_1_1)
	{ after(grammarAccess.getValueNameAccess().getLpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueName__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueName__Group_1__2__Impl
	rule__ValueName__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueName__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueNameAccess().getPrAssignment_1_2()); }
	(rule__ValueName__PrAssignment_1_2)?
	{ after(grammarAccess.getValueNameAccess().getPrAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueName__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueName__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueName__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueNameAccess().getRightParenthesisKeyword_1_3()); }
	')'
	{ after(grammarAccess.getValueNameAccess().getRightParenthesisKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ValueName__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueName__Group_2__0__Impl
	rule__ValueName__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueName__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueNameAccess().getLbAssignment_2_0()); }
	(rule__ValueName__LbAssignment_2_0)
	{ after(grammarAccess.getValueNameAccess().getLbAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueName__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueName__Group_2__1__Impl
	rule__ValueName__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueName__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueNameAccess().getArray_indexAssignment_2_1()); }
	(rule__ValueName__Array_indexAssignment_2_1)
	{ after(grammarAccess.getValueNameAccess().getArray_indexAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueName__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueName__Group_2__2__Impl
	rule__ValueName__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueName__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueNameAccess().getRightSquareBracketKeyword_2_2()); }
	']'
	{ after(grammarAccess.getValueNameAccess().getRightSquareBracketKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueName__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueName__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueName__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueNameAccess().getGroup_2_3()); }
	(rule__ValueName__Group_2_3__0)*
	{ after(grammarAccess.getValueNameAccess().getGroup_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ValueName__Group_2_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueName__Group_2_3__0__Impl
	rule__ValueName__Group_2_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueName__Group_2_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueNameAccess().getLeftSquareBracketKeyword_2_3_0()); }
	'['
	{ after(grammarAccess.getValueNameAccess().getLeftSquareBracketKeyword_2_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueName__Group_2_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueName__Group_2_3__1__Impl
	rule__ValueName__Group_2_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueName__Group_2_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueNameAccess().getArray_indexAssignment_2_3_1()); }
	(rule__ValueName__Array_indexAssignment_2_3_1)
	{ after(grammarAccess.getValueNameAccess().getArray_indexAssignment_2_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueName__Group_2_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueName__Group_2_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueName__Group_2_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueNameAccess().getRightSquareBracketKeyword_2_3_2()); }
	']'
	{ after(grammarAccess.getValueNameAccess().getRightSquareBracketKeyword_2_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ValueName__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueName__Group_3__0__Impl
	rule__ValueName__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueName__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueNameAccess().getDotAssignment_3_0()); }
	(rule__ValueName__DotAssignment_3_0)
	{ after(grammarAccess.getValueNameAccess().getDotAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueName__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueName__Group_3__1__Impl
	rule__ValueName__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueName__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueNameAccess().getPnAssignment_3_1()); }
	(rule__ValueName__PnAssignment_3_1)
	{ after(grammarAccess.getValueNameAccess().getPnAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueName__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueName__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueName__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueNameAccess().getGroup_3_2()); }
	(rule__ValueName__Group_3_2__0)*
	{ after(grammarAccess.getValueNameAccess().getGroup_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ValueName__Group_3_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueName__Group_3_2__0__Impl
	rule__ValueName__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueName__Group_3_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueNameAccess().getFullStopKeyword_3_2_0()); }
	'.'
	{ after(grammarAccess.getValueNameAccess().getFullStopKeyword_3_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueName__Group_3_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueName__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueName__Group_3_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueNameAccess().getPnAssignment_3_2_1()); }
	(rule__ValueName__PnAssignment_3_2_1)
	{ after(grammarAccess.getValueNameAccess().getPnAssignment_3_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ValueName__Group_4_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueName__Group_4_1__0__Impl
	rule__ValueName__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueName__Group_4_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueNameAccess().getApostropheKeyword_4_1_0()); }
	'\''
	{ after(grammarAccess.getValueNameAccess().getApostropheKeyword_4_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueName__Group_4_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueName__Group_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueName__Group_4_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueNameAccess().getFreshAssignment_4_1_1()); }
	(rule__ValueName__FreshAssignment_4_1_1)
	{ after(grammarAccess.getValueNameAccess().getFreshAssignment_4_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ValueName__Group_4_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueName__Group_4_2__0__Impl
	rule__ValueName__Group_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueName__Group_4_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueNameAccess().getApostropheKeyword_4_2_0()); }
	'\''
	{ after(grammarAccess.getValueNameAccess().getApostropheKeyword_4_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueName__Group_4_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueName__Group_4_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueName__Group_4_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueNameAccess().getCountAssignment_4_2_1()); }
	(rule__ValueName__CountAssignment_4_2_1)
	{ after(grammarAccess.getValueNameAccess().getCountAssignment_4_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ValueName__Group_4_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueName__Group_4_3__0__Impl
	rule__ValueName__Group_4_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueName__Group_4_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueNameAccess().getApostropheKeyword_4_3_0()); }
	'\''
	{ after(grammarAccess.getValueNameAccess().getApostropheKeyword_4_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueName__Group_4_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ValueName__Group_4_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueName__Group_4_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueNameAccess().getUpdatedAssignment_4_3_1()); }
	(rule__ValueName__UpdatedAssignment_4_3_1)
	{ after(grammarAccess.getValueNameAccess().getUpdatedAssignment_4_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PartialName__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PartialName__Group__0__Impl
	rule__PartialName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PartialName__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPartialNameAccess().getRecord_idAssignment_0()); }
	(rule__PartialName__Record_idAssignment_0)
	{ after(grammarAccess.getPartialNameAccess().getRecord_idAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PartialName__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PartialName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PartialName__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPartialNameAccess().getGroup_1()); }
	(rule__PartialName__Group_1__0)?
	{ after(grammarAccess.getPartialNameAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PartialName__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PartialName__Group_1__0__Impl
	rule__PartialName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PartialName__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPartialNameAccess().getLbAssignment_1_0()); }
	(rule__PartialName__LbAssignment_1_0)
	{ after(grammarAccess.getPartialNameAccess().getLbAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PartialName__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PartialName__Group_1__1__Impl
	rule__PartialName__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PartialName__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPartialNameAccess().getArray_indexAssignment_1_1()); }
	(rule__PartialName__Array_indexAssignment_1_1)
	{ after(grammarAccess.getPartialNameAccess().getArray_indexAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PartialName__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PartialName__Group_1__2__Impl
	rule__PartialName__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PartialName__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPartialNameAccess().getRightSquareBracketKeyword_1_2()); }
	']'
	{ after(grammarAccess.getPartialNameAccess().getRightSquareBracketKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PartialName__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PartialName__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PartialName__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPartialNameAccess().getGroup_1_3()); }
	(rule__PartialName__Group_1_3__0)*
	{ after(grammarAccess.getPartialNameAccess().getGroup_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PartialName__Group_1_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PartialName__Group_1_3__0__Impl
	rule__PartialName__Group_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PartialName__Group_1_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPartialNameAccess().getLeftSquareBracketKeyword_1_3_0()); }
	'['
	{ after(grammarAccess.getPartialNameAccess().getLeftSquareBracketKeyword_1_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PartialName__Group_1_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PartialName__Group_1_3__1__Impl
	rule__PartialName__Group_1_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PartialName__Group_1_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPartialNameAccess().getArray_indexAssignment_1_3_1()); }
	(rule__PartialName__Array_indexAssignment_1_3_1)
	{ after(grammarAccess.getPartialNameAccess().getArray_indexAssignment_1_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PartialName__Group_1_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PartialName__Group_1_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PartialName__Group_1_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPartialNameAccess().getRightSquareBracketKeyword_1_3_2()); }
	']'
	{ after(grammarAccess.getPartialNameAccess().getRightSquareBracketKeyword_1_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IndexExpressionOrRange__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IndexExpressionOrRange__Group__0__Impl
	rule__IndexExpressionOrRange__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexExpressionOrRange__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndexExpressionOrRangeAccess().getLeft_hand_sideAssignment_0()); }
	(rule__IndexExpressionOrRange__Left_hand_sideAssignment_0)
	{ after(grammarAccess.getIndexExpressionOrRangeAccess().getLeft_hand_sideAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexExpressionOrRange__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IndexExpressionOrRange__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexExpressionOrRange__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndexExpressionOrRangeAccess().getGroup_1()); }
	(rule__IndexExpressionOrRange__Group_1__0)?
	{ after(grammarAccess.getIndexExpressionOrRangeAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IndexExpressionOrRange__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IndexExpressionOrRange__Group_1__0__Impl
	rule__IndexExpressionOrRange__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexExpressionOrRange__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndexExpressionOrRangeAccess().getDdAssignment_1_0()); }
	(rule__IndexExpressionOrRange__DdAssignment_1_0)
	{ after(grammarAccess.getIndexExpressionOrRangeAccess().getDdAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexExpressionOrRange__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IndexExpressionOrRange__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexExpressionOrRange__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndexExpressionOrRangeAccess().getRight_hand_sideAssignment_1_1()); }
	(rule__IndexExpressionOrRange__Right_hand_sideAssignment_1_1)
	{ after(grammarAccess.getIndexExpressionOrRangeAccess().getRight_hand_sideAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PeriodShift__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PeriodShift__Group__0__Impl
	rule__PeriodShift__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PeriodShift__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPeriodShiftAccess().getUnary_minusAssignment_0()); }
	(rule__PeriodShift__Unary_minusAssignment_0)?
	{ after(grammarAccess.getPeriodShiftAccess().getUnary_minusAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PeriodShift__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PeriodShift__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PeriodShift__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPeriodShiftAccess().getAlternatives_1()); }
	(rule__PeriodShift__Alternatives_1)
	{ after(grammarAccess.getPeriodShiftAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PeriodShift__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PeriodShift__Group_1_1__0__Impl
	rule__PeriodShift__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PeriodShift__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPeriodShiftAccess().getLeftParenthesisKeyword_1_1_0()); }
	'('
	{ after(grammarAccess.getPeriodShiftAccess().getLeftParenthesisKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PeriodShift__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PeriodShift__Group_1_1__1__Impl
	rule__PeriodShift__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PeriodShift__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPeriodShiftAccess().getIndex_expressionAssignment_1_1_1()); }
	(rule__PeriodShift__Index_expressionAssignment_1_1_1)
	{ after(grammarAccess.getPeriodShiftAccess().getIndex_expressionAssignment_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PeriodShift__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PeriodShift__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PeriodShift__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPeriodShiftAccess().getRightParenthesisKeyword_1_1_2()); }
	')'
	{ after(grammarAccess.getPeriodShiftAccess().getRightParenthesisKeyword_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IndexExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IndexExpression__Group__0__Impl
	rule__IndexExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndexExpressionAccess().getLAssignment_0()); }
	(rule__IndexExpression__LAssignment_0)
	{ after(grammarAccess.getIndexExpressionAccess().getLAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IndexExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndexExpressionAccess().getAlternatives_1()); }
	(rule__IndexExpression__Alternatives_1)?
	{ after(grammarAccess.getIndexExpressionAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IndexExpression__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IndexExpression__Group_1_0__0__Impl
	rule__IndexExpression__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexExpression__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndexExpressionAccess().getSymAssignment_1_0_0()); }
	(rule__IndexExpression__SymAssignment_1_0_0)
	{ after(grammarAccess.getIndexExpressionAccess().getSymAssignment_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexExpression__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IndexExpression__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexExpression__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndexExpressionAccess().getRAssignment_1_0_1()); }
	(rule__IndexExpression__RAssignment_1_0_1)
	{ after(grammarAccess.getIndexExpressionAccess().getRAssignment_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IndexExpression__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IndexExpression__Group_1_1__0__Impl
	rule__IndexExpression__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexExpression__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndexExpressionAccess().getSymAssignment_1_1_0()); }
	(rule__IndexExpression__SymAssignment_1_1_0)
	{ after(grammarAccess.getIndexExpressionAccess().getSymAssignment_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexExpression__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IndexExpression__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexExpression__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndexExpressionAccess().getRAssignment_1_1_1()); }
	(rule__IndexExpression__RAssignment_1_1_1)
	{ after(grammarAccess.getIndexExpressionAccess().getRAssignment_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IndexExpression__Group_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IndexExpression__Group_1_2__0__Impl
	rule__IndexExpression__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexExpression__Group_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndexExpressionAccess().getSymAssignment_1_2_0()); }
	(rule__IndexExpression__SymAssignment_1_2_0)
	{ after(grammarAccess.getIndexExpressionAccess().getSymAssignment_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexExpression__Group_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IndexExpression__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexExpression__Group_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndexExpressionAccess().getRAssignment_1_2_1()); }
	(rule__IndexExpression__RAssignment_1_2_1)
	{ after(grammarAccess.getIndexExpressionAccess().getRAssignment_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IndexExpression__Group_1_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IndexExpression__Group_1_3__0__Impl
	rule__IndexExpression__Group_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexExpression__Group_1_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndexExpressionAccess().getSymAssignment_1_3_0()); }
	(rule__IndexExpression__SymAssignment_1_3_0)
	{ after(grammarAccess.getIndexExpressionAccess().getSymAssignment_1_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexExpression__Group_1_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IndexExpression__Group_1_3__1__Impl
	rule__IndexExpression__Group_1_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexExpression__Group_1_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndexExpressionAccess().getRAssignment_1_3_1()); }
	(rule__IndexExpression__RAssignment_1_3_1)
	{ after(grammarAccess.getIndexExpressionAccess().getRAssignment_1_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexExpression__Group_1_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IndexExpression__Group_1_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexExpression__Group_1_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndexExpressionAccess().getGroup_1_3_2()); }
	(rule__IndexExpression__Group_1_3_2__0)*
	{ after(grammarAccess.getIndexExpressionAccess().getGroup_1_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IndexExpression__Group_1_3_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IndexExpression__Group_1_3_2__0__Impl
	rule__IndexExpression__Group_1_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexExpression__Group_1_3_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndexExpressionAccess().getPlusSignKeyword_1_3_2_0()); }
	'+'
	{ after(grammarAccess.getIndexExpressionAccess().getPlusSignKeyword_1_3_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexExpression__Group_1_3_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IndexExpression__Group_1_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexExpression__Group_1_3_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndexExpressionAccess().getRAssignment_1_3_2_1()); }
	(rule__IndexExpression__RAssignment_1_3_2_1)
	{ after(grammarAccess.getIndexExpressionAccess().getRAssignment_1_3_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IndexExpression__Group_1_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IndexExpression__Group_1_4__0__Impl
	rule__IndexExpression__Group_1_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexExpression__Group_1_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndexExpressionAccess().getSymAssignment_1_4_0()); }
	(rule__IndexExpression__SymAssignment_1_4_0)
	{ after(grammarAccess.getIndexExpressionAccess().getSymAssignment_1_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexExpression__Group_1_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IndexExpression__Group_1_4__1__Impl
	rule__IndexExpression__Group_1_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexExpression__Group_1_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndexExpressionAccess().getRAssignment_1_4_1()); }
	(rule__IndexExpression__RAssignment_1_4_1)
	{ after(grammarAccess.getIndexExpressionAccess().getRAssignment_1_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexExpression__Group_1_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IndexExpression__Group_1_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexExpression__Group_1_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndexExpressionAccess().getGroup_1_4_2()); }
	(rule__IndexExpression__Group_1_4_2__0)*
	{ after(grammarAccess.getIndexExpressionAccess().getGroup_1_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IndexExpression__Group_1_4_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IndexExpression__Group_1_4_2__0__Impl
	rule__IndexExpression__Group_1_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexExpression__Group_1_4_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndexExpressionAccess().getTIMESParserRuleCall_1_4_2_0()); }
	ruleTIMES
	{ after(grammarAccess.getIndexExpressionAccess().getTIMESParserRuleCall_1_4_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexExpression__Group_1_4_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IndexExpression__Group_1_4_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexExpression__Group_1_4_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndexExpressionAccess().getRAssignment_1_4_2_1()); }
	(rule__IndexExpression__RAssignment_1_4_2_1)
	{ after(grammarAccess.getIndexExpressionAccess().getRAssignment_1_4_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CaseExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseExpression__Group__0__Impl
	rule__CaseExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseExpressionAccess().getCaseKeyword_0()); }
	'case'
	{ after(grammarAccess.getCaseExpressionAccess().getCaseKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getCaseExpressionAccess().getCcAssignment_1()); }
		(rule__CaseExpression__CcAssignment_1)
		{ after(grammarAccess.getCaseExpressionAccess().getCcAssignment_1()); }
	)
	(
		{ before(grammarAccess.getCaseExpressionAccess().getCcAssignment_1()); }
		(rule__CaseExpression__CcAssignment_1)*
		{ after(grammarAccess.getCaseExpressionAccess().getCcAssignment_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CaseChoice__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseChoice__Group__0__Impl
	rule__CaseChoice__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseChoice__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseChoiceAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getCaseChoiceAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseChoice__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseChoice__Group__1__Impl
	rule__CaseChoice__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseChoice__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseChoiceAccess().getBeAssignment_1()); }
	(rule__CaseChoice__BeAssignment_1)
	{ after(grammarAccess.getCaseChoiceAccess().getBeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseChoice__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseChoice__Group__2__Impl
	rule__CaseChoice__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseChoice__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseChoiceAccess().getHyphenMinusGreaterThanSignKeyword_2()); }
	'->'
	{ after(grammarAccess.getCaseChoiceAccess().getHyphenMinusGreaterThanSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseChoice__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseChoice__Group__3__Impl
	rule__CaseChoice__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseChoice__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseChoiceAccess().getExpAssignment_3()); }
	(rule__CaseChoice__ExpAssignment_3)
	{ after(grammarAccess.getCaseChoiceAccess().getExpAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseChoice__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseChoice__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseChoice__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseChoiceAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getCaseChoiceAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicVariables__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicVariables__Group__0__Impl
	rule__LogicVariables__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicVariables__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicVariablesAccess().getLvAssignment_0()); }
	(rule__LogicVariables__LvAssignment_0)
	{ after(grammarAccess.getLogicVariablesAccess().getLvAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicVariables__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicVariables__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicVariables__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicVariablesAccess().getGroup_1()); }
	(rule__LogicVariables__Group_1__0)*
	{ after(grammarAccess.getLogicVariablesAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogicVariables__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicVariables__Group_1__0__Impl
	rule__LogicVariables__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicVariables__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicVariablesAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getLogicVariablesAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicVariables__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogicVariables__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicVariables__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogicVariablesAccess().getLvAssignment_1_1()); }
	(rule__LogicVariables__LvAssignment_1_1)
	{ after(grammarAccess.getLogicVariablesAccess().getLvAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SumQuantification__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SumQuantification__Group__0__Impl
	rule__SumQuantification__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SumQuantification__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumQuantificationAccess().getSumKeyword_0()); }
	'sum'
	{ after(grammarAccess.getSumQuantificationAccess().getSumKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SumQuantification__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SumQuantification__Group__1__Impl
	rule__SumQuantification__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SumQuantification__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumQuantificationAccess().getVariablesAssignment_1()); }
	(rule__SumQuantification__VariablesAssignment_1)
	{ after(grammarAccess.getSumQuantificationAccess().getVariablesAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SumQuantification__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SumQuantification__Group__2__Impl
	rule__SumQuantification__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SumQuantification__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumQuantificationAccess().getAlternatives_2()); }
	(rule__SumQuantification__Alternatives_2)
	{ after(grammarAccess.getSumQuantificationAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SumQuantification__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SumQuantification__Group__3__Impl
	rule__SumQuantification__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SumQuantification__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumQuantificationAccess().getOfKeyword_3()); }
	'of'
	{ after(grammarAccess.getSumQuantificationAccess().getOfKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SumQuantification__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SumQuantification__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SumQuantification__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumQuantificationAccess().getNumeric_expressionAssignment_4()); }
	(rule__SumQuantification__Numeric_expressionAssignment_4)
	{ after(grammarAccess.getSumQuantificationAccess().getNumeric_expressionAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SumQuantification__Group_2_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SumQuantification__Group_2_0__0__Impl
	rule__SumQuantification__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SumQuantification__Group_2_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumQuantificationAccess().getInAssignment_2_0_0()); }
	(rule__SumQuantification__InAssignment_2_0_0)
	{ after(grammarAccess.getSumQuantificationAccess().getInAssignment_2_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SumQuantification__Group_2_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SumQuantification__Group_2_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SumQuantification__Group_2_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumQuantificationAccess().getRangeAssignment_2_0_1()); }
	(rule__SumQuantification__RangeAssignment_2_0_1)
	{ after(grammarAccess.getSumQuantificationAccess().getRangeAssignment_2_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SumQuantification__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SumQuantification__Group_2_1__0__Impl
	rule__SumQuantification__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SumQuantification__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumQuantificationAccess().getWhichAssignment_2_1_0()); }
	(rule__SumQuantification__WhichAssignment_2_1_0)
	{ after(grammarAccess.getSumQuantificationAccess().getWhichAssignment_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SumQuantification__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SumQuantification__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SumQuantification__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumQuantificationAccess().getConditionAssignment_2_1_1()); }
	(rule__SumQuantification__ConditionAssignment_2_1_1)
	{ after(grammarAccess.getSumQuantificationAccess().getConditionAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProductQuantification__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProductQuantification__Group__0__Impl
	rule__ProductQuantification__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProductQuantification__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProductQuantificationAccess().getProductKeyword_0()); }
	'product'
	{ after(grammarAccess.getProductQuantificationAccess().getProductKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProductQuantification__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProductQuantification__Group__1__Impl
	rule__ProductQuantification__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ProductQuantification__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProductQuantificationAccess().getVariablesAssignment_1()); }
	(rule__ProductQuantification__VariablesAssignment_1)
	{ after(grammarAccess.getProductQuantificationAccess().getVariablesAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProductQuantification__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProductQuantification__Group__2__Impl
	rule__ProductQuantification__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ProductQuantification__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProductQuantificationAccess().getAlternatives_2()); }
	(rule__ProductQuantification__Alternatives_2)
	{ after(grammarAccess.getProductQuantificationAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProductQuantification__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProductQuantification__Group__3__Impl
	rule__ProductQuantification__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ProductQuantification__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProductQuantificationAccess().getOfKeyword_3()); }
	'of'
	{ after(grammarAccess.getProductQuantificationAccess().getOfKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProductQuantification__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProductQuantification__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProductQuantification__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProductQuantificationAccess().getNumeric_expressionAssignment_4()); }
	(rule__ProductQuantification__Numeric_expressionAssignment_4)
	{ after(grammarAccess.getProductQuantificationAccess().getNumeric_expressionAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProductQuantification__Group_2_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProductQuantification__Group_2_0__0__Impl
	rule__ProductQuantification__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProductQuantification__Group_2_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProductQuantificationAccess().getInAssignment_2_0_0()); }
	(rule__ProductQuantification__InAssignment_2_0_0)
	{ after(grammarAccess.getProductQuantificationAccess().getInAssignment_2_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProductQuantification__Group_2_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProductQuantification__Group_2_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProductQuantification__Group_2_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProductQuantificationAccess().getRangeAssignment_2_0_1()); }
	(rule__ProductQuantification__RangeAssignment_2_0_1)
	{ after(grammarAccess.getProductQuantificationAccess().getRangeAssignment_2_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProductQuantification__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProductQuantification__Group_2_1__0__Impl
	rule__ProductQuantification__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProductQuantification__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProductQuantificationAccess().getWhichAssignment_2_1_0()); }
	(rule__ProductQuantification__WhichAssignment_2_1_0)
	{ after(grammarAccess.getProductQuantificationAccess().getWhichAssignment_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProductQuantification__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProductQuantification__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProductQuantification__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProductQuantificationAccess().getConditionAssignment_2_1_1()); }
	(rule__ProductQuantification__ConditionAssignment_2_1_1)
	{ after(grammarAccess.getProductQuantificationAccess().getConditionAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CountingQuantification__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CountingQuantification__Group__0__Impl
	rule__CountingQuantification__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CountingQuantification__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCountingQuantificationAccess().getNumberofKeyword_0()); }
	'numberof'
	{ after(grammarAccess.getCountingQuantificationAccess().getNumberofKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CountingQuantification__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CountingQuantification__Group__1__Impl
	rule__CountingQuantification__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CountingQuantification__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCountingQuantificationAccess().getVariablesAssignment_1()); }
	(rule__CountingQuantification__VariablesAssignment_1)
	{ after(grammarAccess.getCountingQuantificationAccess().getVariablesAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CountingQuantification__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CountingQuantification__Group__2__Impl
	rule__CountingQuantification__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CountingQuantification__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCountingQuantificationAccess().getAlternatives_2()); }
	(rule__CountingQuantification__Alternatives_2)
	{ after(grammarAccess.getCountingQuantificationAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CountingQuantification__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CountingQuantification__Group__3__Impl
	rule__CountingQuantification__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CountingQuantification__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCountingQuantificationAccess().getThatKeyword_3()); }
	'that'
	{ after(grammarAccess.getCountingQuantificationAccess().getThatKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CountingQuantification__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CountingQuantification__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CountingQuantification__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCountingQuantificationAccess().getCountedAssignment_4()); }
	(rule__CountingQuantification__CountedAssignment_4)
	{ after(grammarAccess.getCountingQuantificationAccess().getCountedAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CountingQuantification__Group_2_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CountingQuantification__Group_2_0__0__Impl
	rule__CountingQuantification__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CountingQuantification__Group_2_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCountingQuantificationAccess().getInAssignment_2_0_0()); }
	(rule__CountingQuantification__InAssignment_2_0_0)
	{ after(grammarAccess.getCountingQuantificationAccess().getInAssignment_2_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CountingQuantification__Group_2_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CountingQuantification__Group_2_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CountingQuantification__Group_2_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCountingQuantificationAccess().getRangeAssignment_2_0_1()); }
	(rule__CountingQuantification__RangeAssignment_2_0_1)
	{ after(grammarAccess.getCountingQuantificationAccess().getRangeAssignment_2_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CountingQuantification__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CountingQuantification__Group_2_1__0__Impl
	rule__CountingQuantification__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CountingQuantification__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCountingQuantificationAccess().getWhichAssignment_2_1_0()); }
	(rule__CountingQuantification__WhichAssignment_2_1_0)
	{ after(grammarAccess.getCountingQuantificationAccess().getWhichAssignment_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CountingQuantification__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CountingQuantification__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CountingQuantification__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCountingQuantificationAccess().getConditionAssignment_2_1_1()); }
	(rule__CountingQuantification__ConditionAssignment_2_1_1)
	{ after(grammarAccess.getCountingQuantificationAccess().getConditionAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UniversalQuantification__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UniversalQuantification__Group__0__Impl
	rule__UniversalQuantification__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UniversalQuantification__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUniversalQuantificationAccess().getAllKeyword_0()); }
	'all'
	{ after(grammarAccess.getUniversalQuantificationAccess().getAllKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UniversalQuantification__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UniversalQuantification__Group__1__Impl
	rule__UniversalQuantification__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UniversalQuantification__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUniversalQuantificationAccess().getVariablesAssignment_1()); }
	(rule__UniversalQuantification__VariablesAssignment_1)
	{ after(grammarAccess.getUniversalQuantificationAccess().getVariablesAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UniversalQuantification__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UniversalQuantification__Group__2__Impl
	rule__UniversalQuantification__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UniversalQuantification__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUniversalQuantificationAccess().getAlternatives_2()); }
	(rule__UniversalQuantification__Alternatives_2)
	{ after(grammarAccess.getUniversalQuantificationAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UniversalQuantification__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UniversalQuantification__Group__3__Impl
	rule__UniversalQuantification__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__UniversalQuantification__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUniversalQuantificationAccess().getAreKeyword_3()); }
	'are'
	{ after(grammarAccess.getUniversalQuantificationAccess().getAreKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UniversalQuantification__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UniversalQuantification__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UniversalQuantification__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUniversalQuantificationAccess().getPredicateAssignment_4()); }
	(rule__UniversalQuantification__PredicateAssignment_4)
	{ after(grammarAccess.getUniversalQuantificationAccess().getPredicateAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UniversalQuantification__Group_2_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UniversalQuantification__Group_2_0__0__Impl
	rule__UniversalQuantification__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UniversalQuantification__Group_2_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUniversalQuantificationAccess().getInAssignment_2_0_0()); }
	(rule__UniversalQuantification__InAssignment_2_0_0)
	{ after(grammarAccess.getUniversalQuantificationAccess().getInAssignment_2_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UniversalQuantification__Group_2_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UniversalQuantification__Group_2_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UniversalQuantification__Group_2_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUniversalQuantificationAccess().getRangeAssignment_2_0_1()); }
	(rule__UniversalQuantification__RangeAssignment_2_0_1)
	{ after(grammarAccess.getUniversalQuantificationAccess().getRangeAssignment_2_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UniversalQuantification__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UniversalQuantification__Group_2_1__0__Impl
	rule__UniversalQuantification__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UniversalQuantification__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUniversalQuantificationAccess().getWhichAssignment_2_1_0()); }
	(rule__UniversalQuantification__WhichAssignment_2_1_0)
	{ after(grammarAccess.getUniversalQuantificationAccess().getWhichAssignment_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UniversalQuantification__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UniversalQuantification__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UniversalQuantification__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUniversalQuantificationAccess().getConditionAssignment_2_1_1()); }
	(rule__UniversalQuantification__ConditionAssignment_2_1_1)
	{ after(grammarAccess.getUniversalQuantificationAccess().getConditionAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExistentialQuantification__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistentialQuantification__Group__0__Impl
	rule__ExistentialQuantification__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistentialQuantification__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistentialQuantificationAccess().getExistsKeyword_0()); }
	'exists'
	{ after(grammarAccess.getExistentialQuantificationAccess().getExistsKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistentialQuantification__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistentialQuantification__Group__1__Impl
	rule__ExistentialQuantification__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistentialQuantification__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistentialQuantificationAccess().getVariablesAssignment_1()); }
	(rule__ExistentialQuantification__VariablesAssignment_1)
	{ after(grammarAccess.getExistentialQuantificationAccess().getVariablesAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistentialQuantification__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistentialQuantification__Group__2__Impl
	rule__ExistentialQuantification__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistentialQuantification__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistentialQuantificationAccess().getAlternatives_2()); }
	(rule__ExistentialQuantification__Alternatives_2)
	{ after(grammarAccess.getExistentialQuantificationAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistentialQuantification__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistentialQuantification__Group__3__Impl
	rule__ExistentialQuantification__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistentialQuantification__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistentialQuantificationAccess().getThatKeyword_3()); }
	'that'
	{ after(grammarAccess.getExistentialQuantificationAccess().getThatKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistentialQuantification__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistentialQuantification__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistentialQuantification__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistentialQuantificationAccess().getPredicateAssignment_4()); }
	(rule__ExistentialQuantification__PredicateAssignment_4)
	{ after(grammarAccess.getExistentialQuantificationAccess().getPredicateAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExistentialQuantification__Group_2_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistentialQuantification__Group_2_0__0__Impl
	rule__ExistentialQuantification__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistentialQuantification__Group_2_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistentialQuantificationAccess().getInAssignment_2_0_0()); }
	(rule__ExistentialQuantification__InAssignment_2_0_0)
	{ after(grammarAccess.getExistentialQuantificationAccess().getInAssignment_2_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistentialQuantification__Group_2_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistentialQuantification__Group_2_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistentialQuantification__Group_2_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistentialQuantificationAccess().getRangeAssignment_2_0_1()); }
	(rule__ExistentialQuantification__RangeAssignment_2_0_1)
	{ after(grammarAccess.getExistentialQuantificationAccess().getRangeAssignment_2_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExistentialQuantification__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistentialQuantification__Group_2_1__0__Impl
	rule__ExistentialQuantification__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistentialQuantification__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistentialQuantificationAccess().getWhichAssignment_2_1_0()); }
	(rule__ExistentialQuantification__WhichAssignment_2_1_0)
	{ after(grammarAccess.getExistentialQuantificationAccess().getWhichAssignment_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistentialQuantification__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistentialQuantification__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistentialQuantification__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistentialQuantificationAccess().getConditionAssignment_2_1_1()); }
	(rule__ExistentialQuantification__ConditionAssignment_2_1_1)
	{ after(grammarAccess.getExistentialQuantificationAccess().getConditionAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RecordTerm__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RecordTerm__Group__0__Impl
	rule__RecordTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordTerm__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRecordTermAccess().getLeftSquareBracketKeyword_0()); }
	'['
	{ after(grammarAccess.getRecordTermAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordTerm__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RecordTerm__Group__1__Impl
	rule__RecordTerm__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordTerm__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRecordTermAccess().getRecord_typeAssignment_1()); }
	(rule__RecordTerm__Record_typeAssignment_1)
	{ after(grammarAccess.getRecordTermAccess().getRecord_typeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordTerm__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RecordTerm__Group__2__Impl
	rule__RecordTerm__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordTerm__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRecordTermAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getRecordTermAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordTerm__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RecordTerm__Group__3__Impl
	rule__RecordTerm__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordTerm__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getRecordTermAccess().getRecord_valueAssignment_3()); }
		(rule__RecordTerm__Record_valueAssignment_3)
		{ after(grammarAccess.getRecordTermAccess().getRecord_valueAssignment_3()); }
	)
	(
		{ before(grammarAccess.getRecordTermAccess().getRecord_valueAssignment_3()); }
		(rule__RecordTerm__Record_valueAssignment_3)*
		{ after(grammarAccess.getRecordTermAccess().getRecord_valueAssignment_3()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordTerm__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RecordTerm__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordTerm__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRecordTermAccess().getRightSquareBracketKeyword_4()); }
	']'
	{ after(grammarAccess.getRecordTermAccess().getRightSquareBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RecordValue__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RecordValue__Group__0__Impl
	rule__RecordValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordValue__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRecordValueAccess().getLabelAssignment_0()); }
	(rule__RecordValue__LabelAssignment_0)
	{ after(grammarAccess.getRecordValueAccess().getLabelAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordValue__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RecordValue__Group__1__Impl
	rule__RecordValue__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordValue__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRecordValueAccess().getEqualsSignGreaterThanSignKeyword_1()); }
	'=>'
	{ after(grammarAccess.getRecordValueAccess().getEqualsSignGreaterThanSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordValue__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RecordValue__Group__2__Impl
	rule__RecordValue__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordValue__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRecordValueAccess().getAvalAssignment_2()); }
	(rule__RecordValue__AvalAssignment_2)
	{ after(grammarAccess.getRecordValueAccess().getAvalAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordValue__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RecordValue__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordValue__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRecordValueAccess().getSemicolonKeyword_3()); }
	(';')?
	{ after(grammarAccess.getRecordValueAccess().getSemicolonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Invocation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Invocation__Group__0__Impl
	rule__Invocation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Invocation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInvocationAccess().getLabelAssignment_0()); }
	(rule__Invocation__LabelAssignment_0)
	{ after(grammarAccess.getInvocationAccess().getLabelAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Invocation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Invocation__Group__1__Impl
	rule__Invocation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Invocation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInvocationAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getInvocationAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Invocation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Invocation__Group__2__Impl
	rule__Invocation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Invocation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInvocationAccess().getAlternatives_2()); }
	(rule__Invocation__Alternatives_2)?
	{ after(grammarAccess.getInvocationAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Invocation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Invocation__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Invocation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInvocationAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getInvocationAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Invocation__Group_2_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Invocation__Group_2_0__0__Impl
	rule__Invocation__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Invocation__Group_2_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInvocationAccess().getParamsAssignment_2_0_0()); }
	(rule__Invocation__ParamsAssignment_2_0_0)
	{ after(grammarAccess.getInvocationAccess().getParamsAssignment_2_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Invocation__Group_2_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Invocation__Group_2_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Invocation__Group_2_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInvocationAccess().getGroup_2_0_1()); }
	(rule__Invocation__Group_2_0_1__0)*
	{ after(grammarAccess.getInvocationAccess().getGroup_2_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Invocation__Group_2_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Invocation__Group_2_0_1__0__Impl
	rule__Invocation__Group_2_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Invocation__Group_2_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInvocationAccess().getCommaKeyword_2_0_1_0()); }
	','
	{ after(grammarAccess.getInvocationAccess().getCommaKeyword_2_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Invocation__Group_2_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Invocation__Group_2_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Invocation__Group_2_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInvocationAccess().getParamsAssignment_2_0_1_1()); }
	(rule__Invocation__ParamsAssignment_2_0_1_1)
	{ after(grammarAccess.getInvocationAccess().getParamsAssignment_2_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ActualParameter__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActualParameter__Group__0__Impl
	rule__ActualParameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActualParameter__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActualParameterAccess().getFormalAssignment_0()); }
	(rule__ActualParameter__FormalAssignment_0)
	{ after(grammarAccess.getActualParameterAccess().getFormalAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActualParameter__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActualParameter__Group__1__Impl
	rule__ActualParameter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ActualParameter__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActualParameterAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getActualParameterAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActualParameter__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActualParameter__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActualParameter__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActualParameterAccess().getActualAssignment_2()); }
	(rule__ActualParameter__ActualAssignment_2)
	{ after(grammarAccess.getActualParameterAccess().getActualAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableList__Group__0__Impl
	rule__VariableList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableListAccess().getFirstAssignment_0()); }
	(rule__VariableList__FirstAssignment_0)
	{ after(grammarAccess.getVariableListAccess().getFirstAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableListAccess().getGroup_1()); }
	(rule__VariableList__Group_1__0)?
	{ after(grammarAccess.getVariableListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableList__Group_1__0__Impl
	rule__VariableList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableListAccess().getCommaAssignment_1_0()); }
	(rule__VariableList__CommaAssignment_1_0)
	{ after(grammarAccess.getVariableListAccess().getCommaAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableList__Group_1__1__Impl
	rule__VariableList__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableListAccess().getParameterAssignment_1_1()); }
	(rule__VariableList__ParameterAssignment_1_1)
	{ after(grammarAccess.getVariableListAccess().getParameterAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableList__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableList__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableList__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableListAccess().getGroup_1_2()); }
	(rule__VariableList__Group_1_2__0)*
	{ after(grammarAccess.getVariableListAccess().getGroup_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableList__Group_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableList__Group_1_2__0__Impl
	rule__VariableList__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableList__Group_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableListAccess().getCommaKeyword_1_2_0()); }
	','
	{ after(grammarAccess.getVariableListAccess().getCommaKeyword_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableList__Group_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableList__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableList__Group_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableListAccess().getParameterAssignment_1_2_1()); }
	(rule__VariableList__ParameterAssignment_1_2_1)
	{ after(grammarAccess.getVariableListAccess().getParameterAssignment_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalAssertionFunction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalAssertionFunction__Group__0__Impl
	rule__ConditionalAssertionFunction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalAssertionFunction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalAssertionFunctionAccess().getLeftSquareBracketKeyword_0()); }
	'['
	{ after(grammarAccess.getConditionalAssertionFunctionAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalAssertionFunction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalAssertionFunction__Group__1__Impl
	rule__ConditionalAssertionFunction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalAssertionFunction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalAssertionFunctionAccess().getCvpAssignment_1()); }
	(rule__ConditionalAssertionFunction__CvpAssignment_1)
	{ after(grammarAccess.getConditionalAssertionFunctionAccess().getCvpAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalAssertionFunction__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalAssertionFunction__Group__2__Impl
	rule__ConditionalAssertionFunction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalAssertionFunction__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getConditionalAssertionFunctionAccess().getGroup_2()); }
		(rule__ConditionalAssertionFunction__Group_2__0)
		{ after(grammarAccess.getConditionalAssertionFunctionAccess().getGroup_2()); }
	)
	(
		{ before(grammarAccess.getConditionalAssertionFunctionAccess().getGroup_2()); }
		(rule__ConditionalAssertionFunction__Group_2__0)*
		{ after(grammarAccess.getConditionalAssertionFunctionAccess().getGroup_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalAssertionFunction__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalAssertionFunction__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalAssertionFunction__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalAssertionFunctionAccess().getRightSquareBracketKeyword_3()); }
	']'
	{ after(grammarAccess.getConditionalAssertionFunctionAccess().getRightSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalAssertionFunction__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalAssertionFunction__Group_2__0__Impl
	rule__ConditionalAssertionFunction__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalAssertionFunction__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalAssertionFunctionAccess().getCommaKeyword_2_0()); }
	','
	{ after(grammarAccess.getConditionalAssertionFunctionAccess().getCommaKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalAssertionFunction__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalAssertionFunction__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalAssertionFunction__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalAssertionFunctionAccess().getCvpAssignment_2_1()); }
	(rule__ConditionalAssertionFunction__CvpAssignment_2_1)
	{ after(grammarAccess.getConditionalAssertionFunctionAccess().getCvpAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionValuePair__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionValuePair__Group__0__Impl
	rule__ConditionValuePair__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionValuePair__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionValuePairAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getConditionValuePairAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionValuePair__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionValuePair__Group__1__Impl
	rule__ConditionValuePair__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionValuePair__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionValuePairAccess().getConditionAssignment_1()); }
	(rule__ConditionValuePair__ConditionAssignment_1)
	{ after(grammarAccess.getConditionValuePairAccess().getConditionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionValuePair__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionValuePair__Group__2__Impl
	rule__ConditionValuePair__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionValuePair__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionValuePairAccess().getRightParenthesisHyphenMinusGreaterThanSignKeyword_2()); }
	')->'
	{ after(grammarAccess.getConditionValuePairAccess().getRightParenthesisHyphenMinusGreaterThanSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionValuePair__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionValuePair__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionValuePair__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionValuePairAccess().getExpressionAssignment_3()); }
	(rule__ConditionValuePair__ExpressionAssignment_3)
	{ after(grammarAccess.getConditionValuePairAccess().getExpressionAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AssertionEnumeration__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssertionEnumeration__Group_1__0__Impl
	rule__AssertionEnumeration__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssertionEnumeration__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssertionEnumerationAccess().getPairAssignment_1_0()); }
	(rule__AssertionEnumeration__PairAssignment_1_0)
	{ after(grammarAccess.getAssertionEnumerationAccess().getPairAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssertionEnumeration__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssertionEnumeration__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssertionEnumeration__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssertionEnumerationAccess().getGroup_1_1()); }
	(rule__AssertionEnumeration__Group_1_1__0)*
	{ after(grammarAccess.getAssertionEnumerationAccess().getGroup_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AssertionEnumeration__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssertionEnumeration__Group_1_1__0__Impl
	rule__AssertionEnumeration__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssertionEnumeration__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssertionEnumerationAccess().getCommaKeyword_1_1_0()); }
	','
	{ after(grammarAccess.getAssertionEnumerationAccess().getCommaKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssertionEnumeration__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssertionEnumeration__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssertionEnumeration__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssertionEnumerationAccess().getPairAssignment_1_1_1()); }
	(rule__AssertionEnumeration__PairAssignment_1_1_1)
	{ after(grammarAccess.getAssertionEnumerationAccess().getPairAssignment_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnumerationPair__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumerationPair__Group__0__Impl
	rule__EnumerationPair__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationPair__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumerationPairAccess().getEnumeration_literalAssignment_0()); }
	(rule__EnumerationPair__Enumeration_literalAssignment_0)
	{ after(grammarAccess.getEnumerationPairAccess().getEnumeration_literalAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationPair__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumerationPair__Group__1__Impl
	rule__EnumerationPair__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationPair__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumerationPairAccess().getHyphenMinusGreaterThanSignKeyword_1()); }
	'->'
	{ after(grammarAccess.getEnumerationPairAccess().getHyphenMinusGreaterThanSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationPair__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumerationPair__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationPair__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumerationPairAccess().getPredicateAssignment_2()); }
	(rule__EnumerationPair__PredicateAssignment_2)
	{ after(grammarAccess.getEnumerationPairAccess().getPredicateAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDeclaration__Group__0__Impl
	rule__TypeDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDeclarationAccess().getTypeKeyword_0()); }
	'type'
	{ after(grammarAccess.getTypeDeclarationAccess().getTypeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDeclaration__Group__1__Impl
	rule__TypeDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDeclarationAccess().getNameAssignment_1()); }
	(rule__TypeDeclaration__NameAssignment_1)
	{ after(grammarAccess.getTypeDeclarationAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDeclaration__Group__2__Impl
	rule__TypeDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDeclarationAccess().getIsKeyword_2()); }
	'is'
	{ after(grammarAccess.getTypeDeclarationAccess().getIsKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDeclaration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDeclarationAccess().getTypeAssignment_3()); }
	(rule__TypeDeclaration__TypeAssignment_3)
	{ after(grammarAccess.getTypeDeclarationAccess().getTypeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnumerationType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumerationType__Group__0__Impl
	rule__EnumerationType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumerationTypeAccess().getEnumerationKeyword_0()); }
	'enumeration'
	{ after(grammarAccess.getEnumerationTypeAccess().getEnumerationKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumerationType__Group__1__Impl
	rule__EnumerationType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumerationTypeAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getEnumerationTypeAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumerationType__Group__2__Impl
	rule__EnumerationType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getEnumerationTypeAccess().getDefining_enumeration_literalAssignment_2()); }
		(rule__EnumerationType__Defining_enumeration_literalAssignment_2)
		{ after(grammarAccess.getEnumerationTypeAccess().getDefining_enumeration_literalAssignment_2()); }
	)
	(
		{ before(grammarAccess.getEnumerationTypeAccess().getDefining_enumeration_literalAssignment_2()); }
		(rule__EnumerationType__Defining_enumeration_literalAssignment_2)*
		{ after(grammarAccess.getEnumerationTypeAccess().getDefining_enumeration_literalAssignment_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationType__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumerationType__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationType__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumerationTypeAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getEnumerationTypeAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QuantityType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QuantityType__Group__0__Impl
	rule__QuantityType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QuantityType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuantityTypeAccess().getQuantityKeyword_0()); }
	'quantity'
	{ after(grammarAccess.getQuantityTypeAccess().getQuantityKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuantityType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QuantityType__Group__1__Impl
	rule__QuantityType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QuantityType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuantityTypeAccess().getAlternatives_1()); }
	(rule__QuantityType__Alternatives_1)
	{ after(grammarAccess.getQuantityTypeAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuantityType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QuantityType__Group__2__Impl
	rule__QuantityType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__QuantityType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuantityTypeAccess().getGroup_2()); }
	(rule__QuantityType__Group_2__0)?
	{ after(grammarAccess.getQuantityTypeAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuantityType__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QuantityType__Group__3__Impl
	rule__QuantityType__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__QuantityType__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuantityTypeAccess().getGroup_3()); }
	(rule__QuantityType__Group_3__0)?
	{ after(grammarAccess.getQuantityTypeAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuantityType__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QuantityType__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QuantityType__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuantityTypeAccess().getGroup_4()); }
	(rule__QuantityType__Group_4__0)?
	{ after(grammarAccess.getQuantityTypeAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QuantityType__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QuantityType__Group_2__0__Impl
	rule__QuantityType__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QuantityType__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuantityTypeAccess().getLeftSquareBracketKeyword_2_0()); }
	'['
	{ after(grammarAccess.getQuantityTypeAccess().getLeftSquareBracketKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuantityType__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QuantityType__Group_2__1__Impl
	rule__QuantityType__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QuantityType__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuantityTypeAccess().getLbAssignment_2_1()); }
	(rule__QuantityType__LbAssignment_2_1)
	{ after(grammarAccess.getQuantityTypeAccess().getLbAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuantityType__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QuantityType__Group_2__2__Impl
	rule__QuantityType__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__QuantityType__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuantityTypeAccess().getDOTDOTTerminalRuleCall_2_2()); }
	RULE_DOTDOT
	{ after(grammarAccess.getQuantityTypeAccess().getDOTDOTTerminalRuleCall_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuantityType__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QuantityType__Group_2__3__Impl
	rule__QuantityType__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__QuantityType__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuantityTypeAccess().getUbAssignment_2_3()); }
	(rule__QuantityType__UbAssignment_2_3)
	{ after(grammarAccess.getQuantityTypeAccess().getUbAssignment_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuantityType__Group_2__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QuantityType__Group_2__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QuantityType__Group_2__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuantityTypeAccess().getRightSquareBracketKeyword_2_4()); }
	']'
	{ after(grammarAccess.getQuantityTypeAccess().getRightSquareBracketKeyword_2_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QuantityType__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QuantityType__Group_3__0__Impl
	rule__QuantityType__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QuantityType__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuantityTypeAccess().getStepKeyword_3_0()); }
	'step'
	{ after(grammarAccess.getQuantityTypeAccess().getStepKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuantityType__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QuantityType__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QuantityType__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuantityTypeAccess().getStepAssignment_3_1()); }
	(rule__QuantityType__StepAssignment_3_1)
	{ after(grammarAccess.getQuantityTypeAccess().getStepAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QuantityType__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QuantityType__Group_4__0__Impl
	rule__QuantityType__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QuantityType__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuantityTypeAccess().getRepresentationKeyword_4_0()); }
	'representation'
	{ after(grammarAccess.getQuantityTypeAccess().getRepresentationKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuantityType__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QuantityType__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QuantityType__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuantityTypeAccess().getRepresentationAssignment_4_1()); }
	(rule__QuantityType__RepresentationAssignment_4_1)
	{ after(grammarAccess.getQuantityTypeAccess().getRepresentationAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayType__Group__0__Impl
	rule__ArrayType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayTypeAccess().getArrayKeyword_0()); }
	'array'
	{ after(grammarAccess.getArrayTypeAccess().getArrayKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayType__Group__1__Impl
	rule__ArrayType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayTypeAccess().getLeftSquareBracketKeyword_1()); }
	'['
	{ after(grammarAccess.getArrayTypeAccess().getLeftSquareBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayType__Group__2__Impl
	rule__ArrayType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayTypeAccess().getArray_rangesAssignment_2()); }
	(rule__ArrayType__Array_rangesAssignment_2)
	{ after(grammarAccess.getArrayTypeAccess().getArray_rangesAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayType__Group__3__Impl
	rule__ArrayType__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayTypeAccess().getRightSquareBracketKeyword_3()); }
	']'
	{ after(grammarAccess.getArrayTypeAccess().getRightSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayType__Group__4__Impl
	rule__ArrayType__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayTypeAccess().getOfKeyword_4()); }
	'of'
	{ after(grammarAccess.getArrayTypeAccess().getOfKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayType__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayTypeAccess().getTypAssignment_5()); }
	(rule__ArrayType__TypAssignment_5)
	{ after(grammarAccess.getArrayTypeAccess().getTypAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayRangeList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayRangeList__Group__0__Impl
	rule__ArrayRangeList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayRangeList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayRangeListAccess().getRangeAssignment_0()); }
	(rule__ArrayRangeList__RangeAssignment_0)
	{ after(grammarAccess.getArrayRangeListAccess().getRangeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayRangeList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayRangeList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayRangeList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayRangeListAccess().getGroup_1()); }
	(rule__ArrayRangeList__Group_1__0)?
	{ after(grammarAccess.getArrayRangeListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayRangeList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayRangeList__Group_1__0__Impl
	rule__ArrayRangeList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayRangeList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayRangeListAccess().getCommaAssignment_1_0()); }
	(rule__ArrayRangeList__CommaAssignment_1_0)
	{ after(grammarAccess.getArrayRangeListAccess().getCommaAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayRangeList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayRangeList__Group_1__1__Impl
	rule__ArrayRangeList__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayRangeList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayRangeListAccess().getRangeAssignment_1_1()); }
	(rule__ArrayRangeList__RangeAssignment_1_1)
	{ after(grammarAccess.getArrayRangeListAccess().getRangeAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayRangeList__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayRangeList__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayRangeList__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayRangeListAccess().getGroup_1_2()); }
	(rule__ArrayRangeList__Group_1_2__0)*
	{ after(grammarAccess.getArrayRangeListAccess().getGroup_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayRangeList__Group_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayRangeList__Group_1_2__0__Impl
	rule__ArrayRangeList__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayRangeList__Group_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayRangeListAccess().getCommaKeyword_1_2_0()); }
	','
	{ after(grammarAccess.getArrayRangeListAccess().getCommaKeyword_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayRangeList__Group_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayRangeList__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayRangeList__Group_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayRangeListAccess().getRangeAssignment_1_2_1()); }
	(rule__ArrayRangeList__RangeAssignment_1_2_1)
	{ after(grammarAccess.getArrayRangeListAccess().getRangeAssignment_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayRange__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayRange__Group__0__Impl
	rule__ArrayRange__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayRange__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayRangeAccess().getLbAssignment_0()); }
	(rule__ArrayRange__LbAssignment_0)
	{ after(grammarAccess.getArrayRangeAccess().getLbAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayRange__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayRange__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayRange__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayRangeAccess().getGroup_1()); }
	(rule__ArrayRange__Group_1__0)?
	{ after(grammarAccess.getArrayRangeAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayRange__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayRange__Group_1__0__Impl
	rule__ArrayRange__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayRange__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayRangeAccess().getDOTDOTTerminalRuleCall_1_0()); }
	RULE_DOTDOT
	{ after(grammarAccess.getArrayRangeAccess().getDOTDOTTerminalRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayRange__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayRange__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayRange__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayRangeAccess().getUbAssignment_1_1()); }
	(rule__ArrayRange__UbAssignment_1_1)
	{ after(grammarAccess.getArrayRangeAccess().getUbAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RecordType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RecordType__Group__0__Impl
	rule__RecordType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRecordTypeAccess().getAlternatives_0()); }
	(rule__RecordType__Alternatives_0)
	{ after(grammarAccess.getRecordTypeAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RecordType__Group__1__Impl
	rule__RecordType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRecordTypeAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getRecordTypeAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RecordType__Group__2__Impl
	rule__RecordType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getRecordTypeAccess().getFieldsAssignment_2()); }
		(rule__RecordType__FieldsAssignment_2)
		{ after(grammarAccess.getRecordTypeAccess().getFieldsAssignment_2()); }
	)
	(
		{ before(grammarAccess.getRecordTypeAccess().getFieldsAssignment_2()); }
		(rule__RecordType__FieldsAssignment_2)*
		{ after(grammarAccess.getRecordTypeAccess().getFieldsAssignment_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordType__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RecordType__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordType__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRecordTypeAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getRecordTypeAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RecordField__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RecordField__Group__0__Impl
	rule__RecordField__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordField__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRecordFieldAccess().getLabelAssignment_0()); }
	(rule__RecordField__LabelAssignment_0)
	{ after(grammarAccess.getRecordFieldAccess().getLabelAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordField__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RecordField__Group__1__Impl
	rule__RecordField__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordField__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRecordFieldAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getRecordFieldAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordField__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RecordField__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordField__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRecordFieldAccess().getTypAssignment_2()); }
	(rule__RecordField__TypAssignment_2)
	{ after(grammarAccess.getRecordFieldAccess().getTypAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyReference__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertyReference__Group_0__0__Impl
	rule__PropertyReference__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyReference__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyReferenceAccess().getNumberSignKeyword_0_0()); }
	'#'
	{ after(grammarAccess.getPropertyReferenceAccess().getNumberSignKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyReference__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertyReference__Group_0__1__Impl
	rule__PropertyReference__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyReference__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyReferenceAccess().getPnameAssignment_0_1()); }
	(rule__PropertyReference__PnameAssignment_0_1)
	{ after(grammarAccess.getPropertyReferenceAccess().getPnameAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyReference__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertyReference__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyReference__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyReferenceAccess().getFieldAssignment_0_2()); }
	(rule__PropertyReference__FieldAssignment_0_2)*
	{ after(grammarAccess.getPropertyReferenceAccess().getFieldAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyReference__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertyReference__Group_1__0__Impl
	rule__PropertyReference__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyReference__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyReferenceAccess().getSelfAssignment_1_0()); }
	(rule__PropertyReference__SelfAssignment_1_0)
	{ after(grammarAccess.getPropertyReferenceAccess().getSelfAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyReference__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertyReference__Group_1__1__Impl
	rule__PropertyReference__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyReference__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyReferenceAccess().getNumberSignKeyword_1_1()); }
	'#'
	{ after(grammarAccess.getPropertyReferenceAccess().getNumberSignKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyReference__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertyReference__Group_1__2__Impl
	rule__PropertyReference__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyReference__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyReferenceAccess().getSpnameAssignment_1_2()); }
	(rule__PropertyReference__SpnameAssignment_1_2)
	{ after(grammarAccess.getPropertyReferenceAccess().getSpnameAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyReference__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertyReference__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyReference__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyReferenceAccess().getFieldAssignment_1_3()); }
	(rule__PropertyReference__FieldAssignment_1_3)*
	{ after(grammarAccess.getPropertyReferenceAccess().getFieldAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyReference__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertyReference__Group_2__0__Impl
	rule__PropertyReference__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyReference__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyReferenceAccess().getComponentAssignment_2_0()); }
	(rule__PropertyReference__ComponentAssignment_2_0)
	{ after(grammarAccess.getPropertyReferenceAccess().getComponentAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyReference__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertyReference__Group_2__1__Impl
	rule__PropertyReference__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyReference__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyReferenceAccess().getNumberSignKeyword_2_1()); }
	'#'
	{ after(grammarAccess.getPropertyReferenceAccess().getNumberSignKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyReference__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertyReference__Group_2__2__Impl
	rule__PropertyReference__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyReference__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyReferenceAccess().getCpnameAssignment_2_2()); }
	(rule__PropertyReference__CpnameAssignment_2_2)
	{ after(grammarAccess.getPropertyReferenceAccess().getCpnameAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyReference__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertyReference__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyReference__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyReferenceAccess().getFieldAssignment_2_3()); }
	(rule__PropertyReference__FieldAssignment_2_3)*
	{ after(grammarAccess.getPropertyReferenceAccess().getFieldAssignment_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyField__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertyField__Group_0__0__Impl
	rule__PropertyField__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyField__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyFieldAccess().getLeftSquareBracketKeyword_0_0()); }
	'['
	{ after(grammarAccess.getPropertyFieldAccess().getLeftSquareBracketKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyField__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertyField__Group_0__1__Impl
	rule__PropertyField__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyField__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyFieldAccess().getAlternatives_0_1()); }
	(rule__PropertyField__Alternatives_0_1)
	{ after(grammarAccess.getPropertyFieldAccess().getAlternatives_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyField__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertyField__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyField__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyFieldAccess().getRightSquareBracketKeyword_0_2()); }
	']'
	{ after(grammarAccess.getPropertyFieldAccess().getRightSquareBracketKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyField__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertyField__Group_1__0__Impl
	rule__PropertyField__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyField__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyFieldAccess().getFullStopKeyword_1_0()); }
	'.'
	{ after(grammarAccess.getPropertyFieldAccess().getFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyField__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PropertyField__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyField__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyFieldAccess().getAlternatives_1_1()); }
	(rule__PropertyField__Alternatives_1_1)
	{ after(grammarAccess.getPropertyFieldAccess().getAlternatives_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnitName__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitName__Group__0__Impl
	rule__UnitName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitName__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitNameAccess().getGroup_0()); }
	(rule__UnitName__Group_0__0)?
	{ after(grammarAccess.getUnitNameAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitName__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitName__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitNameAccess().getNameAssignment_1()); }
	(rule__UnitName__NameAssignment_1)
	{ after(grammarAccess.getUnitNameAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnitName__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitName__Group_0__0__Impl
	rule__UnitName__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitName__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitNameAccess().getLessThanSignKeyword_0_0()); }
	'<'
	{ after(grammarAccess.getUnitNameAccess().getLessThanSignKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitName__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitName__Group_0__1__Impl
	rule__UnitName__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitName__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getUnitNameAccess().getLongnameAssignment_0_1()); }
		(rule__UnitName__LongnameAssignment_0_1)
		{ after(grammarAccess.getUnitNameAccess().getLongnameAssignment_0_1()); }
	)
	(
		{ before(grammarAccess.getUnitNameAccess().getLongnameAssignment_0_1()); }
		(rule__UnitName__LongnameAssignment_0_1)*
		{ after(grammarAccess.getUnitNameAccess().getLongnameAssignment_0_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitName__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitName__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitName__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitNameAccess().getGreaterThanSignKeyword_0_2()); }
	'>'
	{ after(grammarAccess.getUnitNameAccess().getGreaterThanSignKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnitFormula__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitFormula__Group_0__0__Impl
	rule__UnitFormula__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitFormula__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getUnitFormulaAccess().getTopAssignment_0_0()); }
		(rule__UnitFormula__TopAssignment_0_0)
		{ after(grammarAccess.getUnitFormulaAccess().getTopAssignment_0_0()); }
	)
	(
		{ before(grammarAccess.getUnitFormulaAccess().getTopAssignment_0_0()); }
		(rule__UnitFormula__TopAssignment_0_0)*
		{ after(grammarAccess.getUnitFormulaAccess().getTopAssignment_0_0()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitFormula__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitFormula__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitFormula__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitFormulaAccess().getGroup_0_1()); }
	(rule__UnitFormula__Group_0_1__0)?
	{ after(grammarAccess.getUnitFormulaAccess().getGroup_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnitFormula__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitFormula__Group_0_1__0__Impl
	rule__UnitFormula__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitFormula__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitFormulaAccess().getSlashAssignment_0_1_0()); }
	(rule__UnitFormula__SlashAssignment_0_1_0)
	{ after(grammarAccess.getUnitFormulaAccess().getSlashAssignment_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitFormula__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitFormula__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitFormula__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getUnitFormulaAccess().getBottomAssignment_0_1_1()); }
		(rule__UnitFormula__BottomAssignment_0_1_1)
		{ after(grammarAccess.getUnitFormulaAccess().getBottomAssignment_0_1_1()); }
	)
	(
		{ before(grammarAccess.getUnitFormulaAccess().getBottomAssignment_0_1_1()); }
		(rule__UnitFormula__BottomAssignment_0_1_1)*
		{ after(grammarAccess.getUnitFormulaAccess().getBottomAssignment_0_1_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnitFormula__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitFormula__Group_1__0__Impl
	rule__UnitFormula__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitFormula__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitFormulaAccess().getSlashAssignment_1_0()); }
	(rule__UnitFormula__SlashAssignment_1_0)
	{ after(grammarAccess.getUnitFormulaAccess().getSlashAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitFormula__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitFormula__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitFormula__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getUnitFormulaAccess().getBottomAssignment_1_1()); }
		(rule__UnitFormula__BottomAssignment_1_1)
		{ after(grammarAccess.getUnitFormulaAccess().getBottomAssignment_1_1()); }
	)
	(
		{ before(grammarAccess.getUnitFormulaAccess().getBottomAssignment_1_1()); }
		(rule__UnitFormula__BottomAssignment_1_1)*
		{ after(grammarAccess.getUnitFormulaAccess().getBottomAssignment_1_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RootDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RootDeclaration__Group__0__Impl
	rule__RootDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RootDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRootDeclarationAccess().getAlternatives_0()); }
	(rule__RootDeclaration__Alternatives_0)
	{ after(grammarAccess.getRootDeclarationAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RootDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RootDeclaration__Group__1__Impl
	rule__RootDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RootDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRootDeclarationAccess().getLeftSquareBracketKeyword_1()); }
	'['
	{ after(grammarAccess.getRootDeclarationAccess().getLeftSquareBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RootDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RootDeclaration__Group__2__Impl
	rule__RootDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RootDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getRootDeclarationAccess().getKindWordsAssignment_2()); }
		(rule__RootDeclaration__KindWordsAssignment_2)
		{ after(grammarAccess.getRootDeclarationAccess().getKindWordsAssignment_2()); }
	)
	(
		{ before(grammarAccess.getRootDeclarationAccess().getKindWordsAssignment_2()); }
		(rule__RootDeclaration__KindWordsAssignment_2)*
		{ after(grammarAccess.getRootDeclarationAccess().getKindWordsAssignment_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RootDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RootDeclaration__Group__3__Impl
	rule__RootDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RootDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRootDeclarationAccess().getRightSquareBracketKeyword_3()); }
	']'
	{ after(grammarAccess.getRootDeclarationAccess().getRightSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RootDeclaration__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RootDeclaration__Group__4__Impl
	rule__RootDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RootDeclaration__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRootDeclarationAccess().getUnitNameAssignment_4()); }
	(rule__RootDeclaration__UnitNameAssignment_4)
	{ after(grammarAccess.getRootDeclarationAccess().getUnitNameAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RootDeclaration__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RootDeclaration__Group__5__Impl
	rule__RootDeclaration__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__RootDeclaration__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRootDeclarationAccess().getFactorsAssignment_5()); }
	(rule__RootDeclaration__FactorsAssignment_5)*
	{ after(grammarAccess.getRootDeclarationAccess().getFactorsAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RootDeclaration__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RootDeclaration__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RootDeclaration__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRootDeclarationAccess().getSemicolonKeyword_6()); }
	';'
	{ after(grammarAccess.getRootDeclarationAccess().getSemicolonKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnitExtension__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitExtension__Group__0__Impl
	rule__UnitExtension__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitExtension__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitExtensionAccess().getExtensionKeyword_0()); }
	'extension'
	{ after(grammarAccess.getUnitExtensionAccess().getExtensionKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitExtension__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitExtension__Group__1__Impl
	rule__UnitExtension__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitExtension__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitExtensionAccess().getRootAssignment_1()); }
	(rule__UnitExtension__RootAssignment_1)
	{ after(grammarAccess.getUnitExtensionAccess().getRootAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitExtension__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitExtension__Group__2__Impl
	rule__UnitExtension__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitExtension__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getUnitExtensionAccess().getFactorsAssignment_2()); }
		(rule__UnitExtension__FactorsAssignment_2)
		{ after(grammarAccess.getUnitExtensionAccess().getFactorsAssignment_2()); }
	)
	(
		{ before(grammarAccess.getUnitExtensionAccess().getFactorsAssignment_2()); }
		(rule__UnitExtension__FactorsAssignment_2)*
		{ after(grammarAccess.getUnitExtensionAccess().getFactorsAssignment_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitExtension__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitExtension__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitExtension__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitExtensionAccess().getSemicolonKeyword_3()); }
	';'
	{ after(grammarAccess.getUnitExtensionAccess().getSemicolonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnitFactor__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitFactor__Group__0__Impl
	rule__UnitFactor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitFactor__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitFactorAccess().getCommaKeyword_0()); }
	','
	{ after(grammarAccess.getUnitFactorAccess().getCommaKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitFactor__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitFactor__Group__1__Impl
	rule__UnitFactor__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitFactor__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitFactorAccess().getUnitAssignment_1()); }
	(rule__UnitFactor__UnitAssignment_1)
	{ after(grammarAccess.getUnitFactorAccess().getUnitAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitFactor__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitFactor__Group__2__Impl
	rule__UnitFactor__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitFactor__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitFactorAccess().getOpAssignment_2()); }
	(rule__UnitFactor__OpAssignment_2)
	{ after(grammarAccess.getUnitFactorAccess().getOpAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitFactor__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitFactor__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitFactor__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitFactorAccess().getFactorAssignment_3()); }
	(rule__UnitFactor__FactorAssignment_3)
	{ after(grammarAccess.getUnitFactorAccess().getFactorAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Quantity__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Quantity__Group__0__Impl
	rule__Quantity__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Quantity__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuantityAccess().getNumberAssignment_0()); }
	(rule__Quantity__NumberAssignment_0)
	{ after(grammarAccess.getQuantityAccess().getNumberAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Quantity__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Quantity__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Quantity__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuantityAccess().getAlternatives_1()); }
	(rule__Quantity__Alternatives_1)?
	{ after(grammarAccess.getQuantityAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QCLREF__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QCLREF__Group__0__Impl
	rule__QCLREF__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QCLREF__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQCLREFAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
	{ after(grammarAccess.getQCLREFAccess().getIDTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QCLREF__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QCLREF__Group__1__Impl
	rule__QCLREF__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QCLREF__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQCLREFAccess().getColonColonKeyword_1()); }
	'::'
	{ after(grammarAccess.getQCLREFAccess().getColonColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QCLREF__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QCLREF__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QCLREF__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQCLREFAccess().getIDTerminalRuleCall_2()); }
	RULE_ID
	{ after(grammarAccess.getQCLREFAccess().getIDTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QCREF__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QCREF__Group__0__Impl
	rule__QCREF__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QCREF__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQCREFAccess().getGroup_0()); }
	(rule__QCREF__Group_0__0)*
	{ after(grammarAccess.getQCREFAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QCREF__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QCREF__Group__1__Impl
	rule__QCREF__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QCREF__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQCREFAccess().getIDTerminalRuleCall_1()); }
	RULE_ID
	{ after(grammarAccess.getQCREFAccess().getIDTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QCREF__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QCREF__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QCREF__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQCREFAccess().getGroup_2()); }
	(rule__QCREF__Group_2__0)?
	{ after(grammarAccess.getQCREFAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QCREF__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QCREF__Group_0__0__Impl
	rule__QCREF__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QCREF__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQCREFAccess().getIDTerminalRuleCall_0_0()); }
	RULE_ID
	{ after(grammarAccess.getQCREFAccess().getIDTerminalRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QCREF__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QCREF__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QCREF__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQCREFAccess().getColonColonKeyword_0_1()); }
	'::'
	{ after(grammarAccess.getQCREFAccess().getColonColonKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QCREF__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QCREF__Group_2__0__Impl
	rule__QCREF__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QCREF__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQCREFAccess().getFullStopKeyword_2_0()); }
	'.'
	{ after(grammarAccess.getQCREFAccess().getFullStopKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QCREF__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QCREF__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QCREF__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQCREFAccess().getIDTerminalRuleCall_2_1()); }
	RULE_ID
	{ after(grammarAccess.getQCREFAccess().getIDTerminalRuleCall_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BLESSGrammarRoots__Unit_libraryAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBLESSGrammarRootsAccess().getUnit_libraryUnitLibraryParserRuleCall_0_1_0()); }
		ruleUnitLibrary
		{ after(grammarAccess.getBLESSGrammarRootsAccess().getUnit_libraryUnitLibraryParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BLESSGrammarRoots__Type_libraryAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBLESSGrammarRootsAccess().getType_libraryTypeLibraryParserRuleCall_1_1_0()); }
		ruleTypeLibrary
		{ after(grammarAccess.getBLESSGrammarRootsAccess().getType_libraryTypeLibraryParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BLESSGrammarRoots__Assertion_libraryAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBLESSGrammarRootsAccess().getAssertion_libraryAssertionLibraryParserRuleCall_2_1_0()); }
		ruleAssertionLibrary
		{ after(grammarAccess.getBLESSGrammarRootsAccess().getAssertion_libraryAssertionLibraryParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BLESSGrammarRoots__Action_subclauseAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBLESSGrammarRootsAccess().getAction_subclauseActionSubclauseParserRuleCall_3_1_0()); }
		ruleActionSubclause
		{ after(grammarAccess.getBLESSGrammarRootsAccess().getAction_subclauseActionSubclauseParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BLESSGrammarRoots__Exception_libraryAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBLESSGrammarRootsAccess().getException_libraryExceptionLibraryParserRuleCall_4_1_0()); }
		ruleExceptionLibrary
		{ after(grammarAccess.getBLESSGrammarRootsAccess().getException_libraryExceptionLibraryParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BLESSGrammarRoots__Bless_subclauseAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBLESSGrammarRootsAccess().getBless_subclauseBLESSSubclauseParserRuleCall_5_1_0()); }
		ruleBLESSSubclause
		{ after(grammarAccess.getBLESSGrammarRootsAccess().getBless_subclauseBLESSSubclauseParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BLESSSubclause__No_proofAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBLESSSubclauseAccess().getNo_proofDO_NOT_PROVEKeyword_1_0()); }
		(
			{ before(grammarAccess.getBLESSSubclauseAccess().getNo_proofDO_NOT_PROVEKeyword_1_0()); }
			'DO_NOT_PROVE'
			{ after(grammarAccess.getBLESSSubclauseAccess().getNo_proofDO_NOT_PROVEKeyword_1_0()); }
		)
		{ after(grammarAccess.getBLESSSubclauseAccess().getNo_proofDO_NOT_PROVEKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BLESSSubclause__Assert_clauseAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBLESSSubclauseAccess().getAssert_clauseAssertClauseParserRuleCall_2_0()); }
		ruleAssertClause
		{ after(grammarAccess.getBLESSSubclauseAccess().getAssert_clauseAssertClauseParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BLESSSubclause__InvariantAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBLESSSubclauseAccess().getInvariantInvariantClauseParserRuleCall_3_0()); }
		ruleInvariantClause
		{ after(grammarAccess.getBLESSSubclauseAccess().getInvariantInvariantClauseParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BLESSSubclause__VariablesAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBLESSSubclauseAccess().getVariablesVariablesSectionParserRuleCall_4_0()); }
		ruleVariablesSection
		{ after(grammarAccess.getBLESSSubclauseAccess().getVariablesVariablesSectionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BLESSSubclause__StatesSectionAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBLESSSubclauseAccess().getStatesSectionStatesSectionParserRuleCall_5_0()); }
		ruleStatesSection
		{ after(grammarAccess.getBLESSSubclauseAccess().getStatesSectionStatesSectionParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BLESSSubclause__TransitionsAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBLESSSubclauseAccess().getTransitionsTransitionsParserRuleCall_6_0()); }
		ruleTransitions
		{ after(grammarAccess.getBLESSSubclauseAccess().getTransitionsTransitionsParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitLibrary__UnitDeclarationsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnitLibraryAccess().getUnitDeclarationsUnitDeclarationParserRuleCall_0()); }
		ruleUnitDeclaration
		{ after(grammarAccess.getUnitLibraryAccess().getUnitDeclarationsUnitDeclarationParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssertionLibrary__GhostsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssertionLibraryAccess().getGhostsGhostVariablesParserRuleCall_1_0()); }
		ruleGhostVariables
		{ after(grammarAccess.getAssertionLibraryAccess().getGhostsGhostVariablesParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssertionLibrary__Assertion_listAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssertionLibraryAccess().getAssertion_listNamedAssertionParserRuleCall_2_0()); }
		ruleNamedAssertion
		{ after(grammarAccess.getAssertionLibraryAccess().getAssertion_listNamedAssertionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExceptionLibrary__ExceptiondefinitionsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExceptionLibraryAccess().getExceptiondefinitionsExceptionParserRuleCall_1_0()); }
		ruleException
		{ after(grammarAccess.getExceptionLibraryAccess().getExceptiondefinitionsExceptionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionSubclause__No_proofAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionSubclauseAccess().getNo_proofDO_NOT_PROVEKeyword_1_0()); }
		(
			{ before(grammarAccess.getActionSubclauseAccess().getNo_proofDO_NOT_PROVEKeyword_1_0()); }
			'DO_NOT_PROVE'
			{ after(grammarAccess.getActionSubclauseAccess().getNo_proofDO_NOT_PROVEKeyword_1_0()); }
		)
		{ after(grammarAccess.getActionSubclauseAccess().getNo_proofDO_NOT_PROVEKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionSubclause__Throws_clauseAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionSubclauseAccess().getThrows_clauseThrowsClauseParserRuleCall_2_0()); }
		ruleThrowsClause
		{ after(grammarAccess.getActionSubclauseAccess().getThrows_clauseThrowsClauseParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionSubclause__Assert_clauseAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionSubclauseAccess().getAssert_clauseAssertClauseParserRuleCall_3_0()); }
		ruleAssertClause
		{ after(grammarAccess.getActionSubclauseAccess().getAssert_clauseAssertClauseParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionSubclause__PreconditionAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionSubclauseAccess().getPreconditionAssertionParserRuleCall_4_1_0()); }
		ruleAssertion
		{ after(grammarAccess.getActionSubclauseAccess().getPreconditionAssertionParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionSubclause__PostconditionAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionSubclauseAccess().getPostconditionAssertionParserRuleCall_5_1_0()); }
		ruleAssertion
		{ after(grammarAccess.getActionSubclauseAccess().getPostconditionAssertionParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionSubclause__InvariantAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionSubclauseAccess().getInvariantAssertionParserRuleCall_6_1_0()); }
		ruleAssertion
		{ after(grammarAccess.getActionSubclauseAccess().getInvariantAssertionParserRuleCall_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionSubclause__ElqAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionSubclauseAccess().getElqExistentialLatticeQuantificationParserRuleCall_7_0()); }
		ruleExistentialLatticeQuantification
		{ after(grammarAccess.getActionSubclauseAccess().getElqExistentialLatticeQuantificationParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InvariantClause__InvAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInvariantClauseAccess().getInvAssertionParserRuleCall_1_0()); }
		ruleAssertion
		{ after(grammarAccess.getInvariantClauseAccess().getInvAssertionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariablesSection__Behavior_variablesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariablesSectionAccess().getBehavior_variablesVariableDeclarationParserRuleCall_1_0()); }
		ruleVariableDeclaration
		{ after(grammarAccess.getVariablesSectionAccess().getBehavior_variablesVariableDeclarationParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatesSection__StAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatesSectionAccess().getStStatesKeyword_0_0()); }
		(
			{ before(grammarAccess.getStatesSectionAccess().getStStatesKeyword_0_0()); }
			'states'
			{ after(grammarAccess.getStatesSectionAccess().getStStatesKeyword_0_0()); }
		)
		{ after(grammarAccess.getStatesSectionAccess().getStStatesKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatesSection__StatesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatesSectionAccess().getStatesBehaviorStateParserRuleCall_1_0()); }
		ruleBehaviorState
		{ after(grammarAccess.getStatesSectionAccess().getStatesBehaviorStateParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorState__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBehaviorStateAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getBehaviorStateAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorState__InitialAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBehaviorStateAccess().getInitialInitialKeyword_2_0()); }
		(
			{ before(grammarAccess.getBehaviorStateAccess().getInitialInitialKeyword_2_0()); }
			'initial'
			{ after(grammarAccess.getBehaviorStateAccess().getInitialInitialKeyword_2_0()); }
		)
		{ after(grammarAccess.getBehaviorStateAccess().getInitialInitialKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorState__CompleteAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBehaviorStateAccess().getCompleteCompleteKeyword_3_0()); }
		(
			{ before(grammarAccess.getBehaviorStateAccess().getCompleteCompleteKeyword_3_0()); }
			'complete'
			{ after(grammarAccess.getBehaviorStateAccess().getCompleteCompleteKeyword_3_0()); }
		)
		{ after(grammarAccess.getBehaviorStateAccess().getCompleteCompleteKeyword_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorState__FinalAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBehaviorStateAccess().getFinalFinalKeyword_4_0()); }
		(
			{ before(grammarAccess.getBehaviorStateAccess().getFinalFinalKeyword_4_0()); }
			'final'
			{ after(grammarAccess.getBehaviorStateAccess().getFinalFinalKeyword_4_0()); }
		)
		{ after(grammarAccess.getBehaviorStateAccess().getFinalFinalKeyword_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorState__ModeAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBehaviorStateAccess().getModeModeKeyword_5_0()); }
		(
			{ before(grammarAccess.getBehaviorStateAccess().getModeModeKeyword_5_0()); }
			'mode'
			{ after(grammarAccess.getBehaviorStateAccess().getModeModeKeyword_5_0()); }
		)
		{ after(grammarAccess.getBehaviorStateAccess().getModeModeKeyword_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorState__State_assertionAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBehaviorStateAccess().getState_assertionAssertionParserRuleCall_7_0()); }
		ruleAssertion
		{ after(grammarAccess.getBehaviorStateAccess().getState_assertionAssertionParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transitions__BtAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransitionsAccess().getBtBehaviorTransitionParserRuleCall_1_0()); }
		ruleBehaviorTransition
		{ after(grammarAccess.getTransitionsAccess().getBtBehaviorTransitionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorTransition__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBehaviorTransitionAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getBehaviorTransitionAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorTransition__PriorityAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBehaviorTransitionAccess().getPriorityPriorityParserRuleCall_1_0()); }
		rulePriority
		{ after(grammarAccess.getBehaviorTransitionAccess().getPriorityPriorityParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorTransition__ColonAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBehaviorTransitionAccess().getColonColonKeyword_2_0()); }
		(
			{ before(grammarAccess.getBehaviorTransitionAccess().getColonColonKeyword_2_0()); }
			':'
			{ after(grammarAccess.getBehaviorTransitionAccess().getColonColonKeyword_2_0()); }
		)
		{ after(grammarAccess.getBehaviorTransitionAccess().getColonColonKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorTransition__SourcesAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBehaviorTransitionAccess().getSourcesBehaviorStateCrossReference_3_0_0()); }
		(
			{ before(grammarAccess.getBehaviorTransitionAccess().getSourcesBehaviorStateIDTerminalRuleCall_3_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getBehaviorTransitionAccess().getSourcesBehaviorStateIDTerminalRuleCall_3_0_0_1()); }
		)
		{ after(grammarAccess.getBehaviorTransitionAccess().getSourcesBehaviorStateCrossReference_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorTransition__SourcesAssignment_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBehaviorTransitionAccess().getSourcesBehaviorStateCrossReference_3_1_1_0()); }
		(
			{ before(grammarAccess.getBehaviorTransitionAccess().getSourcesBehaviorStateIDTerminalRuleCall_3_1_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getBehaviorTransitionAccess().getSourcesBehaviorStateIDTerminalRuleCall_3_1_1_0_1()); }
		)
		{ after(grammarAccess.getBehaviorTransitionAccess().getSourcesBehaviorStateCrossReference_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorTransition__DispatchAssignment_5_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBehaviorTransitionAccess().getDispatchDispatchConditionParserRuleCall_5_0_0()); }
		ruleDispatchCondition
		{ after(grammarAccess.getBehaviorTransitionAccess().getDispatchDispatchConditionParserRuleCall_5_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorTransition__ExecuteAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBehaviorTransitionAccess().getExecuteExecuteConditionParserRuleCall_5_1_0()); }
		ruleExecuteCondition
		{ after(grammarAccess.getBehaviorTransitionAccess().getExecuteExecuteConditionParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorTransition__ModeAssignment_5_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBehaviorTransitionAccess().getModeModeConditionParserRuleCall_5_2_0()); }
		ruleModeCondition
		{ after(grammarAccess.getBehaviorTransitionAccess().getModeModeConditionParserRuleCall_5_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorTransition__InternalAssignment_5_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBehaviorTransitionAccess().getInternalInternalConditionParserRuleCall_5_3_0()); }
		ruleInternalCondition
		{ after(grammarAccess.getBehaviorTransitionAccess().getInternalInternalConditionParserRuleCall_5_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorTransition__DestinationAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBehaviorTransitionAccess().getDestinationBehaviorStateCrossReference_7_0()); }
		(
			{ before(grammarAccess.getBehaviorTransitionAccess().getDestinationBehaviorStateIDTerminalRuleCall_7_0_1()); }
			RULE_ID
			{ after(grammarAccess.getBehaviorTransitionAccess().getDestinationBehaviorStateIDTerminalRuleCall_7_0_1()); }
		)
		{ after(grammarAccess.getBehaviorTransitionAccess().getDestinationBehaviorStateCrossReference_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorTransition__ActionsAssignment_8_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBehaviorTransitionAccess().getActionsBehaviorActionsParserRuleCall_8_1_0()); }
		ruleBehaviorActions
		{ after(grammarAccess.getBehaviorTransitionAccess().getActionsBehaviorActionsParserRuleCall_8_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorTransition__AssAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBehaviorTransitionAccess().getAssAssertionParserRuleCall_9_0()); }
		ruleAssertion
		{ after(grammarAccess.getBehaviorTransitionAccess().getAssAssertionParserRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Priority__PriorityAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPriorityAccess().getPriorityNUMBERTerminalRuleCall_1_0()); }
		RULE_NUMBER
		{ after(grammarAccess.getPriorityAccess().getPriorityNUMBERTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DispatchCondition__DispatchAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDispatchConditionAccess().getDispatchDispatchKeyword_1_0()); }
		(
			{ before(grammarAccess.getDispatchConditionAccess().getDispatchDispatchKeyword_1_0()); }
			'dispatch'
			{ after(grammarAccess.getDispatchConditionAccess().getDispatchDispatchKeyword_1_0()); }
		)
		{ after(grammarAccess.getDispatchConditionAccess().getDispatchDispatchKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DispatchCondition__DeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDispatchConditionAccess().getDeDispatchExpressionParserRuleCall_2_0()); }
		ruleDispatchExpression
		{ after(grammarAccess.getDispatchConditionAccess().getDeDispatchExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DispatchCondition__FrozenAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDispatchConditionAccess().getFrozenFreezePortParserRuleCall_3_0()); }
		ruleFreezePort
		{ after(grammarAccess.getDispatchConditionAccess().getFrozenFreezePortParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DispatchExpression__DcAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDispatchExpressionAccess().getDcDispatchConjunctionParserRuleCall_0_0_0()); }
		ruleDispatchConjunction
		{ after(grammarAccess.getDispatchExpressionAccess().getDcDispatchConjunctionParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DispatchExpression__OrAssignment_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDispatchExpressionAccess().getOrOrKeyword_0_1_0_0()); }
		(
			{ before(grammarAccess.getDispatchExpressionAccess().getOrOrKeyword_0_1_0_0()); }
			'or'
			{ after(grammarAccess.getDispatchExpressionAccess().getOrOrKeyword_0_1_0_0()); }
		)
		{ after(grammarAccess.getDispatchExpressionAccess().getOrOrKeyword_0_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DispatchExpression__DcAssignment_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDispatchExpressionAccess().getDcDispatchConjunctionParserRuleCall_0_1_1_0()); }
		ruleDispatchConjunction
		{ after(grammarAccess.getDispatchExpressionAccess().getDcDispatchConjunctionParserRuleCall_0_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DispatchExpression__DcAssignment_0_1_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDispatchExpressionAccess().getDcDispatchConjunctionParserRuleCall_0_1_2_1_0()); }
		ruleDispatchConjunction
		{ after(grammarAccess.getDispatchExpressionAccess().getDcDispatchConjunctionParserRuleCall_0_1_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DispatchExpression__SubprogramaccessdispatchAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDispatchExpressionAccess().getSubprogramaccessdispatchSubprogramAccessDispatchParserRuleCall_1_0()); }
		ruleSubprogramAccessDispatch
		{ after(grammarAccess.getDispatchExpressionAccess().getSubprogramaccessdispatchSubprogramAccessDispatchParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubprogramAccessDispatch__AccessAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubprogramAccessDispatchAccess().getAccessSubprogramAccessCrossReference_1_0()); }
		(
			{ before(grammarAccess.getSubprogramAccessDispatchAccess().getAccessSubprogramAccessIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getSubprogramAccessDispatchAccess().getAccessSubprogramAccessIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getSubprogramAccessDispatchAccess().getAccessSubprogramAccessCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DispatchConjunction__TriggerAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDispatchConjunctionAccess().getTriggerDispatchTriggerParserRuleCall_0_0()); }
		ruleDispatchTrigger
		{ after(grammarAccess.getDispatchConjunctionAccess().getTriggerDispatchTriggerParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DispatchConjunction__AndAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDispatchConjunctionAccess().getAndAndKeyword_1_0_0()); }
		(
			{ before(grammarAccess.getDispatchConjunctionAccess().getAndAndKeyword_1_0_0()); }
			'and'
			{ after(grammarAccess.getDispatchConjunctionAccess().getAndAndKeyword_1_0_0()); }
		)
		{ after(grammarAccess.getDispatchConjunctionAccess().getAndAndKeyword_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DispatchConjunction__TriggerAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDispatchConjunctionAccess().getTriggerDispatchTriggerParserRuleCall_1_1_0()); }
		ruleDispatchTrigger
		{ after(grammarAccess.getDispatchConjunctionAccess().getTriggerDispatchTriggerParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DispatchConjunction__TriggerAssignment_1_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDispatchConjunctionAccess().getTriggerDispatchTriggerParserRuleCall_1_2_1_0()); }
		ruleDispatchTrigger
		{ after(grammarAccess.getDispatchConjunctionAccess().getTriggerDispatchTriggerParserRuleCall_1_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DispatchTrigger__PortAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDispatchTriggerAccess().getPortPortNameParserRuleCall_0_0()); }
		rulePortName
		{ after(grammarAccess.getDispatchTriggerAccess().getPortPortNameParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DispatchTrigger__TimeoutAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDispatchTriggerAccess().getTimeoutTimeoutKeyword_1_0_0()); }
		(
			{ before(grammarAccess.getDispatchTriggerAccess().getTimeoutTimeoutKeyword_1_0_0()); }
			'timeout'
			{ after(grammarAccess.getDispatchTriggerAccess().getTimeoutTimeoutKeyword_1_0_0()); }
		)
		{ after(grammarAccess.getDispatchTriggerAccess().getTimeoutTimeoutKeyword_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DispatchTrigger__LpAssignment_1_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDispatchTriggerAccess().getLpLeftParenthesisKeyword_1_1_0_0_0()); }
		(
			{ before(grammarAccess.getDispatchTriggerAccess().getLpLeftParenthesisKeyword_1_1_0_0_0()); }
			'('
			{ after(grammarAccess.getDispatchTriggerAccess().getLpLeftParenthesisKeyword_1_1_0_0_0()); }
		)
		{ after(grammarAccess.getDispatchTriggerAccess().getLpLeftParenthesisKeyword_1_1_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DispatchTrigger__PortsAssignment_1_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDispatchTriggerAccess().getPortsNamedElementCrossReference_1_1_0_1_0()); }
		(
			{ before(grammarAccess.getDispatchTriggerAccess().getPortsNamedElementIDTerminalRuleCall_1_1_0_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getDispatchTriggerAccess().getPortsNamedElementIDTerminalRuleCall_1_1_0_1_0_1()); }
		)
		{ after(grammarAccess.getDispatchTriggerAccess().getPortsNamedElementCrossReference_1_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DispatchTrigger__PortsAssignment_1_1_0_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDispatchTriggerAccess().getPortsNamedElementCrossReference_1_1_0_2_1_0()); }
		(
			{ before(grammarAccess.getDispatchTriggerAccess().getPortsNamedElementIDTerminalRuleCall_1_1_0_2_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getDispatchTriggerAccess().getPortsNamedElementIDTerminalRuleCall_1_1_0_2_1_0_1()); }
		)
		{ after(grammarAccess.getDispatchTriggerAccess().getPortsNamedElementCrossReference_1_1_0_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DispatchTrigger__TimeAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDispatchTriggerAccess().getTimeBehaviorTimeParserRuleCall_1_1_1_0()); }
		ruleBehaviorTime
		{ after(grammarAccess.getDispatchTriggerAccess().getTimeBehaviorTimeParserRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PortName__PortAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPortNameAccess().getPortNamedElementCrossReference_0_0()); }
		(
			{ before(grammarAccess.getPortNameAccess().getPortNamedElementIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getPortNameAccess().getPortNamedElementIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getPortNameAccess().getPortNamedElementCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PortName__IndexAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPortNameAccess().getIndexNUMBERTerminalRuleCall_1_1_0()); }
		RULE_NUMBER
		{ after(grammarAccess.getPortNameAccess().getIndexNUMBERTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecuteCondition__EorAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExecuteConditionAccess().getEorBooleanExpressionParserRuleCall_0_0()); }
		ruleBooleanExpression
		{ after(grammarAccess.getExecuteConditionAccess().getEorBooleanExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecuteCondition__OtherwiseAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExecuteConditionAccess().getOtherwiseOtherwiseParserRuleCall_1_0()); }
		ruleOtherwise
		{ after(grammarAccess.getExecuteConditionAccess().getOtherwiseOtherwiseParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Otherwise__OAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOtherwiseAccess().getOOtherwiseKeyword_0()); }
		(
			{ before(grammarAccess.getOtherwiseAccess().getOOtherwiseKeyword_0()); }
			'otherwise'
			{ after(grammarAccess.getOtherwiseAccess().getOOtherwiseKeyword_0()); }
		)
		{ after(grammarAccess.getOtherwiseAccess().getOOtherwiseKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModeCondition__TleAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModeConditionAccess().getTleTriggerLogicalExpressionParserRuleCall_1_0()); }
		ruleTriggerLogicalExpression
		{ after(grammarAccess.getModeConditionAccess().getTleTriggerLogicalExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TriggerLogicalExpression__FirstAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTriggerLogicalExpressionAccess().getFirstEventTriggerParserRuleCall_0_0()); }
		ruleEventTrigger
		{ after(grammarAccess.getTriggerLogicalExpressionAccess().getFirstEventTriggerParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TriggerLogicalExpression__OpAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTriggerLogicalExpressionAccess().getOpLogicalOperatorParserRuleCall_1_0_0()); }
		ruleLogicalOperator
		{ after(grammarAccess.getTriggerLogicalExpressionAccess().getOpLogicalOperatorParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TriggerLogicalExpression__TriggerAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTriggerLogicalExpressionAccess().getTriggerEventTriggerParserRuleCall_1_1_0()); }
		ruleEventTrigger
		{ after(grammarAccess.getTriggerLogicalExpressionAccess().getTriggerEventTriggerParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TriggerLogicalExpression__OpsAssignment_1_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTriggerLogicalExpressionAccess().getOpsLogicalOperatorParserRuleCall_1_2_0_0()); }
		ruleLogicalOperator
		{ after(grammarAccess.getTriggerLogicalExpressionAccess().getOpsLogicalOperatorParserRuleCall_1_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TriggerLogicalExpression__TriggerAssignment_1_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTriggerLogicalExpressionAccess().getTriggerEventTriggerParserRuleCall_1_2_1_0()); }
		ruleEventTrigger
		{ after(grammarAccess.getTriggerLogicalExpressionAccess().getTriggerEventTriggerParserRuleCall_1_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventTrigger__SubAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEventTriggerAccess().getSubIDTerminalRuleCall_0_0_0()); }
		RULE_ID
		{ after(grammarAccess.getEventTriggerAccess().getSubIDTerminalRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventTrigger__SubAssignment_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEventTriggerAccess().getSubIDTerminalRuleCall_0_1_1_0()); }
		RULE_ID
		{ after(grammarAccess.getEventTriggerAccess().getSubIDTerminalRuleCall_0_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventTrigger__SubAssignment_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEventTriggerAccess().getSubIDTerminalRuleCall_0_3_0()); }
		RULE_ID
		{ after(grammarAccess.getEventTriggerAccess().getSubIDTerminalRuleCall_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventTrigger__IndexAssignment_0_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEventTriggerAccess().getIndexNUMBERTerminalRuleCall_0_4_1_0()); }
		RULE_NUMBER
		{ after(grammarAccess.getEventTriggerAccess().getIndexNUMBERTerminalRuleCall_0_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventTrigger__TleAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEventTriggerAccess().getTleTriggerLogicalExpressionParserRuleCall_1_1_0()); }
		ruleTriggerLogicalExpression
		{ after(grammarAccess.getEventTriggerAccess().getTleTriggerLogicalExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOperator__OpAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalOperatorAccess().getOpAndKeyword_0_0()); }
		(
			{ before(grammarAccess.getLogicalOperatorAccess().getOpAndKeyword_0_0()); }
			'and'
			{ after(grammarAccess.getLogicalOperatorAccess().getOpAndKeyword_0_0()); }
		)
		{ after(grammarAccess.getLogicalOperatorAccess().getOpAndKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOperator__OpAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalOperatorAccess().getOpOrKeyword_1_0()); }
		(
			{ before(grammarAccess.getLogicalOperatorAccess().getOpOrKeyword_1_0()); }
			'or'
			{ after(grammarAccess.getLogicalOperatorAccess().getOpOrKeyword_1_0()); }
		)
		{ after(grammarAccess.getLogicalOperatorAccess().getOpOrKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOperator__OpAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalOperatorAccess().getOpXorKeyword_2_0()); }
		(
			{ before(grammarAccess.getLogicalOperatorAccess().getOpXorKeyword_2_0()); }
			'xor'
			{ after(grammarAccess.getLogicalOperatorAccess().getOpXorKeyword_2_0()); }
		)
		{ after(grammarAccess.getLogicalOperatorAccess().getOpXorKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOperator__OpAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalOperatorAccess().getOpThenKeyword_3_1_0()); }
		(
			{ before(grammarAccess.getLogicalOperatorAccess().getOpThenKeyword_3_1_0()); }
			'then'
			{ after(grammarAccess.getLogicalOperatorAccess().getOpThenKeyword_3_1_0()); }
		)
		{ after(grammarAccess.getLogicalOperatorAccess().getOpThenKeyword_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOperator__OpAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicalOperatorAccess().getOpElseKeyword_4_1_0()); }
		(
			{ before(grammarAccess.getLogicalOperatorAccess().getOpElseKeyword_4_1_0()); }
			'else'
			{ after(grammarAccess.getLogicalOperatorAccess().getOpElseKeyword_4_1_0()); }
		)
		{ after(grammarAccess.getLogicalOperatorAccess().getOpElseKeyword_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InternalCondition__FirstAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInternalConditionAccess().getFirstPortCrossReference_2_0()); }
		(
			{ before(grammarAccess.getInternalConditionAccess().getFirstPortIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getInternalConditionAccess().getFirstPortIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getInternalConditionAccess().getFirstPortCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InternalCondition__PortsAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInternalConditionAccess().getPortsPortCrossReference_3_1_0()); }
		(
			{ before(grammarAccess.getInternalConditionAccess().getPortsPortIDTerminalRuleCall_3_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getInternalConditionAccess().getPortsPortIDTerminalRuleCall_3_1_0_1()); }
		)
		{ after(grammarAccess.getInternalConditionAccess().getPortsPortCrossReference_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssertClause__AssertionsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssertClauseAccess().getAssertionsNamedAssertionParserRuleCall_1_0()); }
		ruleNamedAssertion
		{ after(grammarAccess.getAssertClauseAccess().getAssertionsNamedAssertionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistentialLatticeQuantification__Quantified_variablesAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExistentialLatticeQuantificationAccess().getQuantified_variablesQuantifiedVariablesParserRuleCall_0_0()); }
		ruleQuantifiedVariables
		{ after(grammarAccess.getExistentialLatticeQuantificationAccess().getQuantified_variablesQuantifiedVariablesParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistentialLatticeQuantification__ActionsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExistentialLatticeQuantificationAccess().getActionsBehaviorActionsParserRuleCall_2_0()); }
		ruleBehaviorActions
		{ after(grammarAccess.getExistentialLatticeQuantificationAccess().getActionsBehaviorActionsParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistentialLatticeQuantification__TimeoutAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExistentialLatticeQuantificationAccess().getTimeoutActionTimeoutParserRuleCall_4_0()); }
		ruleActionTimeout
		{ after(grammarAccess.getExistentialLatticeQuantificationAccess().getTimeoutActionTimeoutParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistentialLatticeQuantification__Catch_clauseAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExistentialLatticeQuantificationAccess().getCatch_clauseCatchClauseParserRuleCall_5_0()); }
		ruleCatchClause
		{ after(grammarAccess.getExistentialLatticeQuantificationAccess().getCatch_clauseCatchClauseParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuantifiedVariables__VariablesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQuantifiedVariablesAccess().getVariablesVariableDeclarationParserRuleCall_1_0()); }
		ruleVariableDeclaration
		{ after(grammarAccess.getQuantifiedVariablesAccess().getVariablesVariableDeclarationParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UniversalLatticeQuantification__VariablesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUniversalLatticeQuantificationAccess().getVariablesForallVariableParserRuleCall_1_0()); }
		ruleForallVariable
		{ after(grammarAccess.getUniversalLatticeQuantificationAccess().getVariablesForallVariableParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UniversalLatticeQuantification__Lower_boundAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUniversalLatticeQuantificationAccess().getLower_boundExpressionParserRuleCall_3_0()); }
		ruleExpression
		{ after(grammarAccess.getUniversalLatticeQuantificationAccess().getLower_boundExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UniversalLatticeQuantification__Upper_boundAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUniversalLatticeQuantificationAccess().getUpper_boundExpressionParserRuleCall_5_0()); }
		ruleExpression
		{ after(grammarAccess.getUniversalLatticeQuantificationAccess().getUpper_boundExpressionParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UniversalLatticeQuantification__ElqAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUniversalLatticeQuantificationAccess().getElqExistentialLatticeQuantificationParserRuleCall_6_0()); }
		ruleExistentialLatticeQuantification
		{ after(grammarAccess.getUniversalLatticeQuantificationAccess().getElqExistentialLatticeQuantificationParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForallVariable__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForallVariableAccess().getNameIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getForallVariableAccess().getNameIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__VariableAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getVariableVariableParserRuleCall_0_0()); }
		ruleVariable
		{ after(grammarAccess.getVariableDeclarationAccess().getVariableVariableParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__NonvolatileAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getNonvolatileNonvolatileKeyword_1_0_0()); }
		(
			{ before(grammarAccess.getVariableDeclarationAccess().getNonvolatileNonvolatileKeyword_1_0_0()); }
			'nonvolatile'
			{ after(grammarAccess.getVariableDeclarationAccess().getNonvolatileNonvolatileKeyword_1_0_0()); }
		)
		{ after(grammarAccess.getVariableDeclarationAccess().getNonvolatileNonvolatileKeyword_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__SharedAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getSharedSharedKeyword_1_1_0()); }
		(
			{ before(grammarAccess.getVariableDeclarationAccess().getSharedSharedKeyword_1_1_0()); }
			'shared'
			{ after(grammarAccess.getVariableDeclarationAccess().getSharedSharedKeyword_1_1_0()); }
		)
		{ after(grammarAccess.getVariableDeclarationAccess().getSharedSharedKeyword_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__ConstantAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getConstantConstantKeyword_1_2_0()); }
		(
			{ before(grammarAccess.getVariableDeclarationAccess().getConstantConstantKeyword_1_2_0()); }
			'constant'
			{ after(grammarAccess.getVariableDeclarationAccess().getConstantConstantKeyword_1_2_0()); }
		)
		{ after(grammarAccess.getVariableDeclarationAccess().getConstantConstantKeyword_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__SpreadAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getSpreadSpreadKeyword_1_3_0()); }
		(
			{ before(grammarAccess.getVariableDeclarationAccess().getSpreadSpreadKeyword_1_3_0()); }
			'spread'
			{ after(grammarAccess.getVariableDeclarationAccess().getSpreadSpreadKeyword_1_3_0()); }
		)
		{ after(grammarAccess.getVariableDeclarationAccess().getSpreadSpreadKeyword_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__FinalAssignment_1_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getFinalFinalKeyword_1_4_0()); }
		(
			{ before(grammarAccess.getVariableDeclarationAccess().getFinalFinalKeyword_1_4_0()); }
			'final'
			{ after(grammarAccess.getVariableDeclarationAccess().getFinalFinalKeyword_1_4_0()); }
		)
		{ after(grammarAccess.getVariableDeclarationAccess().getFinalFinalKeyword_1_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__AssignAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getAssignColonEqualsSignKeyword_2_0_0()); }
		(
			{ before(grammarAccess.getVariableDeclarationAccess().getAssignColonEqualsSignKeyword_2_0_0()); }
			':='
			{ after(grammarAccess.getVariableDeclarationAccess().getAssignColonEqualsSignKeyword_2_0_0()); }
		)
		{ after(grammarAccess.getVariableDeclarationAccess().getAssignColonEqualsSignKeyword_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__ExpressionAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getExpressionExpressionParserRuleCall_2_1_0()); }
		ruleExpression
		{ after(grammarAccess.getVariableDeclarationAccess().getExpressionExpressionParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__AssertionAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getAssertionAssertionParserRuleCall_3_0()); }
		ruleAssertion
		{ after(grammarAccess.getVariableDeclarationAccess().getAssertionAssertionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionParameters__ParametersAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionParametersAccess().getParametersFormalExpressionPairParserRuleCall_0_0()); }
		ruleFormalExpressionPair
		{ after(grammarAccess.getFunctionParametersAccess().getParametersFormalExpressionPairParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionParameters__CommaAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionParametersAccess().getCommaCommaKeyword_1_0_0()); }
		(
			{ before(grammarAccess.getFunctionParametersAccess().getCommaCommaKeyword_1_0_0()); }
			','
			{ after(grammarAccess.getFunctionParametersAccess().getCommaCommaKeyword_1_0_0()); }
		)
		{ after(grammarAccess.getFunctionParametersAccess().getCommaCommaKeyword_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionParameters__ParametersAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionParametersAccess().getParametersFormalExpressionPairParserRuleCall_1_1_0()); }
		ruleFormalExpressionPair
		{ after(grammarAccess.getFunctionParametersAccess().getParametersFormalExpressionPairParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionParameters__ParametersAssignment_1_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionParametersAccess().getParametersFormalExpressionPairParserRuleCall_1_2_1_0()); }
		ruleFormalExpressionPair
		{ after(grammarAccess.getFunctionParametersAccess().getParametersFormalExpressionPairParserRuleCall_1_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalExpressionPair__FormalAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFormalExpressionPairAccess().getFormalIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getFormalExpressionPairAccess().getFormalIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalExpressionPair__ActualAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFormalExpressionPairAccess().getActualExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getFormalExpressionPairAccess().getActualExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorActions__ActionAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBehaviorActionsAccess().getActionAssertedActionParserRuleCall_0_0()); }
		ruleAssertedAction
		{ after(grammarAccess.getBehaviorActionsAccess().getActionAssertedActionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorActions__SemiAssignment_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBehaviorActionsAccess().getSemiSemicolonKeyword_1_0_0_0()); }
		(
			{ before(grammarAccess.getBehaviorActionsAccess().getSemiSemicolonKeyword_1_0_0_0()); }
			';'
			{ after(grammarAccess.getBehaviorActionsAccess().getSemiSemicolonKeyword_1_0_0_0()); }
		)
		{ after(grammarAccess.getBehaviorActionsAccess().getSemiSemicolonKeyword_1_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorActions__ActionAssignment_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBehaviorActionsAccess().getActionAssertedActionParserRuleCall_1_0_1_0()); }
		ruleAssertedAction
		{ after(grammarAccess.getBehaviorActionsAccess().getActionAssertedActionParserRuleCall_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorActions__ActionAssignment_1_0_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBehaviorActionsAccess().getActionAssertedActionParserRuleCall_1_0_2_1_0()); }
		ruleAssertedAction
		{ after(grammarAccess.getBehaviorActionsAccess().getActionAssertedActionParserRuleCall_1_0_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorActions__AmpAssignment_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBehaviorActionsAccess().getAmpAmpersandKeyword_1_1_0_0()); }
		(
			{ before(grammarAccess.getBehaviorActionsAccess().getAmpAmpersandKeyword_1_1_0_0()); }
			'&'
			{ after(grammarAccess.getBehaviorActionsAccess().getAmpAmpersandKeyword_1_1_0_0()); }
		)
		{ after(grammarAccess.getBehaviorActionsAccess().getAmpAmpersandKeyword_1_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorActions__ActionAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBehaviorActionsAccess().getActionAssertedActionParserRuleCall_1_1_1_0()); }
		ruleAssertedAction
		{ after(grammarAccess.getBehaviorActionsAccess().getActionAssertedActionParserRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorActions__ActionAssignment_1_1_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBehaviorActionsAccess().getActionAssertedActionParserRuleCall_1_1_2_1_0()); }
		ruleAssertedAction
		{ after(grammarAccess.getBehaviorActionsAccess().getActionAssertedActionParserRuleCall_1_1_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssertedAction__PreconditionAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssertedActionAccess().getPreconditionAssertionParserRuleCall_0_0()); }
		ruleAssertion
		{ after(grammarAccess.getAssertedActionAccess().getPreconditionAssertionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssertedAction__ActionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssertedActionAccess().getActionActionParserRuleCall_1_0()); }
		ruleAction
		{ after(grammarAccess.getAssertedActionAccess().getActionActionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssertedAction__PostconditionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssertedActionAccess().getPostconditionAssertionParserRuleCall_2_0()); }
		ruleAssertion
		{ after(grammarAccess.getAssertedActionAccess().getPostconditionAssertionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__BasicAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getBasicBasicActionParserRuleCall_0_0()); }
		ruleBasicAction
		{ after(grammarAccess.getActionAccess().getBasicBasicActionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__If_fiAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getIf_fiAlternativeParserRuleCall_1_0()); }
		ruleAlternative
		{ after(grammarAccess.getActionAccess().getIf_fiAlternativeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__WlAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getWlWhileLoopParserRuleCall_2_0()); }
		ruleWhileLoop
		{ after(grammarAccess.getActionAccess().getWlWhileLoopParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__FlAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getFlForLoopParserRuleCall_3_0()); }
		ruleForLoop
		{ after(grammarAccess.getActionAccess().getFlForLoopParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__DuAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getDuDoUntilLoopParserRuleCall_4_0()); }
		ruleDoUntilLoop
		{ after(grammarAccess.getActionAccess().getDuDoUntilLoopParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__ElqAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getElqExistentialLatticeQuantificationParserRuleCall_5_0()); }
		ruleExistentialLatticeQuantification
		{ after(grammarAccess.getActionAccess().getElqExistentialLatticeQuantificationParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__UlqAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getUlqUniversalLatticeQuantificationParserRuleCall_6_0()); }
		ruleUniversalLatticeQuantification
		{ after(grammarAccess.getActionAccess().getUlqUniversalLatticeQuantificationParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__LaAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getLaLockingActionParserRuleCall_7_0()); }
		ruleLockingAction
		{ after(grammarAccess.getActionAccess().getLaLockingActionParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicAction__SkipAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBasicActionAccess().getSkipSkipKeyword_0_0()); }
		(
			{ before(grammarAccess.getBasicActionAccess().getSkipSkipKeyword_0_0()); }
			'skip'
			{ after(grammarAccess.getBasicActionAccess().getSkipSkipKeyword_0_0()); }
		)
		{ after(grammarAccess.getBasicActionAccess().getSkipSkipKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicAction__AssignAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBasicActionAccess().getAssignAssignmentParserRuleCall_1_0()); }
		ruleAssignment
		{ after(grammarAccess.getBasicActionAccess().getAssignAssignmentParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicAction__ModeAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBasicActionAccess().getModeModeCrossReference_2_1_0()); }
		(
			{ before(grammarAccess.getBasicActionAccess().getModeModeIDTerminalRuleCall_2_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getBasicActionAccess().getModeModeIDTerminalRuleCall_2_1_0_1()); }
		)
		{ after(grammarAccess.getBasicActionAccess().getModeModeCrossReference_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicAction__WhenAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBasicActionAccess().getWhenWhenThrowParserRuleCall_3_0()); }
		ruleWhenThrow
		{ after(grammarAccess.getBasicActionAccess().getWhenWhenThrowParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicAction__CombAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBasicActionAccess().getCombCombinableOperationParserRuleCall_4_0()); }
		ruleCombinableOperation
		{ after(grammarAccess.getBasicActionAccess().getCombCombinableOperationParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicAction__CommunicationAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBasicActionAccess().getCommunicationCommunicationActionParserRuleCall_5_0()); }
		ruleCommunicationAction
		{ after(grammarAccess.getBasicActionAccess().getCommunicationCommunicationActionParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicAction__ComputationAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBasicActionAccess().getComputationComputationParserRuleCall_6_0()); }
		ruleComputation
		{ after(grammarAccess.getBasicActionAccess().getComputationComputationParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicAction__Multi_assignAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBasicActionAccess().getMulti_assignSimultaneousAssignmentParserRuleCall_7_0()); }
		ruleSimultaneousAssignment
		{ after(grammarAccess.getBasicActionAccess().getMulti_assignSimultaneousAssignmentParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicAction__ExcAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBasicActionAccess().getExcIssueExceptionParserRuleCall_8_0()); }
		ruleIssueException
		{ after(grammarAccess.getBasicActionAccess().getExcIssueExceptionParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinableOperation__F_addAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCombinableOperationAccess().getF_addFetchaddKeyword_0_0_0()); }
		(
			{ before(grammarAccess.getCombinableOperationAccess().getF_addFetchaddKeyword_0_0_0()); }
			'fetchadd'
			{ after(grammarAccess.getCombinableOperationAccess().getF_addFetchaddKeyword_0_0_0()); }
		)
		{ after(grammarAccess.getCombinableOperationAccess().getF_addFetchaddKeyword_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinableOperation__TargetAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCombinableOperationAccess().getTargetVariableCrossReference_0_2_0()); }
		(
			{ before(grammarAccess.getCombinableOperationAccess().getTargetVariableIDTerminalRuleCall_0_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getCombinableOperationAccess().getTargetVariableIDTerminalRuleCall_0_2_0_1()); }
		)
		{ after(grammarAccess.getCombinableOperationAccess().getTargetVariableCrossReference_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinableOperation__ArithmeticAssignment_0_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCombinableOperationAccess().getArithmeticExpressionParserRuleCall_0_4_0()); }
		ruleExpression
		{ after(grammarAccess.getCombinableOperationAccess().getArithmeticExpressionParserRuleCall_0_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinableOperation__ResultAssignment_0_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCombinableOperationAccess().getResultVariableCrossReference_0_6_0()); }
		(
			{ before(grammarAccess.getCombinableOperationAccess().getResultVariableIDTerminalRuleCall_0_6_0_1()); }
			RULE_ID
			{ after(grammarAccess.getCombinableOperationAccess().getResultVariableIDTerminalRuleCall_0_6_0_1()); }
		)
		{ after(grammarAccess.getCombinableOperationAccess().getResultVariableCrossReference_0_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinableOperation__F_orAssignment_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCombinableOperationAccess().getF_orFetchorKeyword_1_0_0_0()); }
		(
			{ before(grammarAccess.getCombinableOperationAccess().getF_orFetchorKeyword_1_0_0_0()); }
			'fetchor'
			{ after(grammarAccess.getCombinableOperationAccess().getF_orFetchorKeyword_1_0_0_0()); }
		)
		{ after(grammarAccess.getCombinableOperationAccess().getF_orFetchorKeyword_1_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinableOperation__F_andAssignment_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCombinableOperationAccess().getF_andFetchandKeyword_1_0_1_0()); }
		(
			{ before(grammarAccess.getCombinableOperationAccess().getF_andFetchandKeyword_1_0_1_0()); }
			'fetchand'
			{ after(grammarAccess.getCombinableOperationAccess().getF_andFetchandKeyword_1_0_1_0()); }
		)
		{ after(grammarAccess.getCombinableOperationAccess().getF_andFetchandKeyword_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinableOperation__F_xorAssignment_1_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCombinableOperationAccess().getF_xorFetchxorKeyword_1_0_2_0()); }
		(
			{ before(grammarAccess.getCombinableOperationAccess().getF_xorFetchxorKeyword_1_0_2_0()); }
			'fetchxor'
			{ after(grammarAccess.getCombinableOperationAccess().getF_xorFetchxorKeyword_1_0_2_0()); }
		)
		{ after(grammarAccess.getCombinableOperationAccess().getF_xorFetchxorKeyword_1_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinableOperation__TargetAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCombinableOperationAccess().getTargetVariableCrossReference_1_2_0()); }
		(
			{ before(grammarAccess.getCombinableOperationAccess().getTargetVariableIDTerminalRuleCall_1_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getCombinableOperationAccess().getTargetVariableIDTerminalRuleCall_1_2_0_1()); }
		)
		{ after(grammarAccess.getCombinableOperationAccess().getTargetVariableCrossReference_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinableOperation__BoolAssignment_1_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCombinableOperationAccess().getBoolExpressionParserRuleCall_1_4_0()); }
		ruleExpression
		{ after(grammarAccess.getCombinableOperationAccess().getBoolExpressionParserRuleCall_1_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinableOperation__ResultAssignment_1_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCombinableOperationAccess().getResultVariableCrossReference_1_5_1_0()); }
		(
			{ before(grammarAccess.getCombinableOperationAccess().getResultVariableIDTerminalRuleCall_1_5_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getCombinableOperationAccess().getResultVariableIDTerminalRuleCall_1_5_1_0_1()); }
		)
		{ after(grammarAccess.getCombinableOperationAccess().getResultVariableCrossReference_1_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinableOperation__SwAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCombinableOperationAccess().getSwSwapKeyword_2_0_0()); }
		(
			{ before(grammarAccess.getCombinableOperationAccess().getSwSwapKeyword_2_0_0()); }
			'swap'
			{ after(grammarAccess.getCombinableOperationAccess().getSwSwapKeyword_2_0_0()); }
		)
		{ after(grammarAccess.getCombinableOperationAccess().getSwSwapKeyword_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinableOperation__TargetAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCombinableOperationAccess().getTargetVariableCrossReference_2_2_0()); }
		(
			{ before(grammarAccess.getCombinableOperationAccess().getTargetVariableIDTerminalRuleCall_2_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getCombinableOperationAccess().getTargetVariableIDTerminalRuleCall_2_2_0_1()); }
		)
		{ after(grammarAccess.getCombinableOperationAccess().getTargetVariableCrossReference_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinableOperation__ReferenceAssignment_2_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCombinableOperationAccess().getReferenceVariableCrossReference_2_4_0()); }
		(
			{ before(grammarAccess.getCombinableOperationAccess().getReferenceVariableIDTerminalRuleCall_2_4_0_1()); }
			RULE_ID
			{ after(grammarAccess.getCombinableOperationAccess().getReferenceVariableIDTerminalRuleCall_2_4_0_1()); }
		)
		{ after(grammarAccess.getCombinableOperationAccess().getReferenceVariableCrossReference_2_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CombinableOperation__ResultAssignment_2_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCombinableOperationAccess().getResultVariableCrossReference_2_6_0()); }
		(
			{ before(grammarAccess.getCombinableOperationAccess().getResultVariableIDTerminalRuleCall_2_6_0_1()); }
			RULE_ID
			{ after(grammarAccess.getCombinableOperationAccess().getResultVariableIDTerminalRuleCall_2_6_0_1()); }
		)
		{ after(grammarAccess.getCombinableOperationAccess().getResultVariableCrossReference_2_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommunicationAction__PcAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommunicationActionAccess().getPcSubprogramCallParserRuleCall_0_0()); }
		ruleSubprogramCall
		{ after(grammarAccess.getCommunicationActionAccess().getPcSubprogramCallParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommunicationAction__PoAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommunicationActionAccess().getPoPortOutputParserRuleCall_1_0()); }
		rulePortOutput
		{ after(grammarAccess.getCommunicationActionAccess().getPoPortOutputParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommunicationAction__PiAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommunicationActionAccess().getPiPortInputParserRuleCall_2_0()); }
		rulePortInput
		{ after(grammarAccess.getCommunicationActionAccess().getPiPortInputParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommunicationAction__FpAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommunicationActionAccess().getFpFreezePortParserRuleCall_3_0()); }
		ruleFreezePort
		{ after(grammarAccess.getCommunicationActionAccess().getFpFreezePortParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommunicationAction__PauseAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommunicationActionAccess().getPausePauseParserRuleCall_4_0()); }
		rulePause
		{ after(grammarAccess.getCommunicationActionAccess().getPausePauseParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubprogramCall__ProcedureAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubprogramCallAccess().getProcedureCalledSubprogramCrossReference_0_0()); }
		(
			{ before(grammarAccess.getSubprogramCallAccess().getProcedureCalledSubprogramIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getSubprogramCallAccess().getProcedureCalledSubprogramIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getSubprogramCallAccess().getProcedureCalledSubprogramCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubprogramCall__ParametersAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubprogramCallAccess().getParametersFormalActualListParserRuleCall_2_0()); }
		ruleFormalActualList
		{ after(grammarAccess.getSubprogramCallAccess().getParametersFormalActualListParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalActualList__VariablesAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFormalActualListAccess().getVariablesFormalActualParserRuleCall_0_0()); }
		ruleFormalActual
		{ after(grammarAccess.getFormalActualListAccess().getVariablesFormalActualParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalActualList__CommaAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFormalActualListAccess().getCommaCommaKeyword_1_0_0()); }
		(
			{ before(grammarAccess.getFormalActualListAccess().getCommaCommaKeyword_1_0_0()); }
			','
			{ after(grammarAccess.getFormalActualListAccess().getCommaCommaKeyword_1_0_0()); }
		)
		{ after(grammarAccess.getFormalActualListAccess().getCommaCommaKeyword_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalActualList__VariablesAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFormalActualListAccess().getVariablesFormalActualParserRuleCall_1_1_0()); }
		ruleFormalActual
		{ after(grammarAccess.getFormalActualListAccess().getVariablesFormalActualParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalActualList__VariablesAssignment_1_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFormalActualListAccess().getVariablesFormalActualParserRuleCall_1_2_1_0()); }
		ruleFormalActual
		{ after(grammarAccess.getFormalActualListAccess().getVariablesFormalActualParserRuleCall_1_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalActual__FormalAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFormalActualAccess().getFormalParameterCrossReference_0_0_0()); }
		(
			{ before(grammarAccess.getFormalActualAccess().getFormalParameterIDTerminalRuleCall_0_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getFormalActualAccess().getFormalParameterIDTerminalRuleCall_0_0_0_1()); }
		)
		{ after(grammarAccess.getFormalActualAccess().getFormalParameterCrossReference_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalActual__ActualAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFormalActualAccess().getActualSubProgramParameterParserRuleCall_1_0()); }
		ruleSubProgramParameter
		{ after(grammarAccess.getFormalActualAccess().getActualSubProgramParameterParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubProgramParameter__ValueAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubProgramParameterAccess().getValueValueNameParserRuleCall_0_0()); }
		ruleValueName
		{ after(grammarAccess.getSubProgramParameterAccess().getValueValueNameParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubProgramParameter__ConstantAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubProgramParameterAccess().getConstantConstantParserRuleCall_1_0()); }
		ruleConstant
		{ after(grammarAccess.getSubProgramParameterAccess().getConstantConstantParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubProgramParameter__ExpressionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubProgramParameterAccess().getExpressionParenthesizedSubexpressionParserRuleCall_2_0()); }
		ruleParenthesizedSubexpression
		{ after(grammarAccess.getSubProgramParameterAccess().getExpressionParenthesizedSubexpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PortOutput__PortAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPortOutputAccess().getPortPortCrossReference_0_0()); }
		(
			{ before(grammarAccess.getPortOutputAccess().getPortPortIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getPortOutputAccess().getPortPortIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getPortOutputAccess().getPortPortCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PortOutput__EorAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPortOutputAccess().getEorExpressionParserRuleCall_2_1_0()); }
		ruleExpression
		{ after(grammarAccess.getPortOutputAccess().getEorExpressionParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PortInput__PortAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPortInputAccess().getPortPortCrossReference_0_0()); }
		(
			{ before(grammarAccess.getPortInputAccess().getPortPortIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getPortInputAccess().getPortPortIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getPortInputAccess().getPortPortCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PortInput__TargetAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPortInputAccess().getTargetValueNameParserRuleCall_3_0()); }
		ruleValueName
		{ after(grammarAccess.getPortInputAccess().getTargetValueNameParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__LhsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentAccess().getLhsNameTickParserRuleCall_0_0()); }
		ruleNameTick
		{ after(grammarAccess.getAssignmentAccess().getLhsNameTickParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__AsgnAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentAccess().getAsgnColonEqualsSignKeyword_1_0()); }
		(
			{ before(grammarAccess.getAssignmentAccess().getAsgnColonEqualsSignKeyword_1_0()); }
			':='
			{ after(grammarAccess.getAssignmentAccess().getAsgnColonEqualsSignKeyword_1_0()); }
		)
		{ after(grammarAccess.getAssignmentAccess().getAsgnColonEqualsSignKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__RhsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentAccess().getRhsExpressionOrAnyParserRuleCall_2_0()); }
		ruleExpressionOrAny
		{ after(grammarAccess.getAssignmentAccess().getRhsExpressionOrAnyParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NameTick__ValueAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNameTickAccess().getValueValueNameParserRuleCall_0_0()); }
		ruleValueName
		{ after(grammarAccess.getNameTickAccess().getValueValueNameParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NameTick__TickAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNameTickAccess().getTickApostropheKeyword_1_0()); }
		(
			{ before(grammarAccess.getNameTickAccess().getTickApostropheKeyword_1_0()); }
			'\''
			{ after(grammarAccess.getNameTickAccess().getTickApostropheKeyword_1_0()); }
		)
		{ after(grammarAccess.getNameTickAccess().getTickApostropheKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionOrAny__ExpAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionOrAnyAccess().getExpExpressionParserRuleCall_0_0()); }
		ruleExpression
		{ after(grammarAccess.getExpressionOrAnyAccess().getExpExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionOrAny__AnyAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionOrAnyAccess().getAnyAnyParserRuleCall_1_0()); }
		ruleAny
		{ after(grammarAccess.getExpressionOrAnyAccess().getAnyAnyParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimultaneousAssignment__LhsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimultaneousAssignmentAccess().getLhsNameTickParserRuleCall_1_0()); }
		ruleNameTick
		{ after(grammarAccess.getSimultaneousAssignmentAccess().getLhsNameTickParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimultaneousAssignment__LhsAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimultaneousAssignmentAccess().getLhsNameTickParserRuleCall_2_1_0()); }
		ruleNameTick
		{ after(grammarAccess.getSimultaneousAssignmentAccess().getLhsNameTickParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimultaneousAssignment__AsgnAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimultaneousAssignmentAccess().getAsgnColonEqualsSignKeyword_3_0()); }
		(
			{ before(grammarAccess.getSimultaneousAssignmentAccess().getAsgnColonEqualsSignKeyword_3_0()); }
			':='
			{ after(grammarAccess.getSimultaneousAssignmentAccess().getAsgnColonEqualsSignKeyword_3_0()); }
		)
		{ after(grammarAccess.getSimultaneousAssignmentAccess().getAsgnColonEqualsSignKeyword_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimultaneousAssignment__RhsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimultaneousAssignmentAccess().getRhsExpressionOrAnyParserRuleCall_4_0()); }
		ruleExpressionOrAny
		{ after(grammarAccess.getSimultaneousAssignmentAccess().getRhsExpressionOrAnyParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimultaneousAssignment__RhsAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimultaneousAssignmentAccess().getRhsExpressionOrAnyParserRuleCall_5_1_0()); }
		ruleExpressionOrAny
		{ after(grammarAccess.getSimultaneousAssignmentAccess().getRhsExpressionOrAnyParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Alternative__GuardAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAlternativeAccess().getGuardBooleanExpressionParserRuleCall_2_0()); }
		ruleBooleanExpression
		{ after(grammarAccess.getAlternativeAccess().getGuardBooleanExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Alternative__BlessaltAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAlternativeAccess().getBlessaltBLESSAlternativeParserRuleCall_3_0_0()); }
		ruleBLESSAlternative
		{ after(grammarAccess.getAlternativeAccess().getBlessaltBLESSAlternativeParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Alternative__BaaltAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAlternativeAccess().getBaaltBAAlternativeParserRuleCall_3_1_0()); }
		ruleBAAlternative
		{ after(grammarAccess.getAlternativeAccess().getBaaltBAAlternativeParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BLESSAlternative__ActionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBLESSAlternativeAccess().getActionAssertedActionParserRuleCall_1_0()); }
		ruleAssertedAction
		{ after(grammarAccess.getBLESSAlternativeAccess().getActionAssertedActionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BLESSAlternative__AlternativeAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBLESSAlternativeAccess().getAlternativeGuardedActionParserRuleCall_2_1_0()); }
		ruleGuardedAction
		{ after(grammarAccess.getBLESSAlternativeAccess().getAlternativeGuardedActionParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GuardedAction__GuardAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGuardedActionAccess().getGuardBooleanExpressionParserRuleCall_1_0()); }
		ruleBooleanExpression
		{ after(grammarAccess.getGuardedActionAccess().getGuardBooleanExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GuardedAction__ActionAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGuardedActionAccess().getActionAssertedActionParserRuleCall_3_0()); }
		ruleAssertedAction
		{ after(grammarAccess.getGuardedActionAccess().getActionAssertedActionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__TestAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhileLoopAccess().getTestBooleanExpressionParserRuleCall_2_0()); }
		ruleBooleanExpression
		{ after(grammarAccess.getWhileLoopAccess().getTestBooleanExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__InvariantAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhileLoopAccess().getInvariantInvariantKeyword_4_0_0()); }
		(
			{ before(grammarAccess.getWhileLoopAccess().getInvariantInvariantKeyword_4_0_0()); }
			'invariant'
			{ after(grammarAccess.getWhileLoopAccess().getInvariantInvariantKeyword_4_0_0()); }
		)
		{ after(grammarAccess.getWhileLoopAccess().getInvariantInvariantKeyword_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__InvAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhileLoopAccess().getInvNamelessAssertionParserRuleCall_4_1_0()); }
		ruleNamelessAssertion
		{ after(grammarAccess.getWhileLoopAccess().getInvNamelessAssertionParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__BoundAssignment_5_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhileLoopAccess().getBoundBoundKeyword_5_0_0()); }
		(
			{ before(grammarAccess.getWhileLoopAccess().getBoundBoundKeyword_5_0_0()); }
			'bound'
			{ after(grammarAccess.getWhileLoopAccess().getBoundBoundKeyword_5_0_0()); }
		)
		{ after(grammarAccess.getWhileLoopAccess().getBoundBoundKeyword_5_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Bound_functionAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhileLoopAccess().getBound_functionExpressionParserRuleCall_5_1_0()); }
		ruleExpression
		{ after(grammarAccess.getWhileLoopAccess().getBound_functionExpressionParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__ElqAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhileLoopAccess().getElqExistentialLatticeQuantificationParserRuleCall_6_0()); }
		ruleExistentialLatticeQuantification
		{ after(grammarAccess.getWhileLoopAccess().getElqExistentialLatticeQuantificationParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__CountAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForLoopAccess().getCountForallVariableParserRuleCall_1_0()); }
		ruleForallVariable
		{ after(grammarAccess.getForLoopAccess().getCountForallVariableParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Lower_boundAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForLoopAccess().getLower_boundExpressionParserRuleCall_3_0()); }
		ruleExpression
		{ after(grammarAccess.getForLoopAccess().getLower_boundExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Upper_boundAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForLoopAccess().getUpper_boundExpressionParserRuleCall_5_0()); }
		ruleExpression
		{ after(grammarAccess.getForLoopAccess().getUpper_boundExpressionParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__InvariantAssignment_6_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForLoopAccess().getInvariantInvariantKeyword_6_0_0()); }
		(
			{ before(grammarAccess.getForLoopAccess().getInvariantInvariantKeyword_6_0_0()); }
			'invariant'
			{ after(grammarAccess.getForLoopAccess().getInvariantInvariantKeyword_6_0_0()); }
		)
		{ after(grammarAccess.getForLoopAccess().getInvariantInvariantKeyword_6_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__InvAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForLoopAccess().getInvNamelessAssertionParserRuleCall_6_1_0()); }
		ruleNamelessAssertion
		{ after(grammarAccess.getForLoopAccess().getInvNamelessAssertionParserRuleCall_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__ActionAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForLoopAccess().getActionBehaviorActionsParserRuleCall_8_0()); }
		ruleBehaviorActions
		{ after(grammarAccess.getForLoopAccess().getActionBehaviorActionsParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DoUntilLoop__InvariantAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDoUntilLoopAccess().getInvariantInvariantKeyword_1_0_0()); }
		(
			{ before(grammarAccess.getDoUntilLoopAccess().getInvariantInvariantKeyword_1_0_0()); }
			'invariant'
			{ after(grammarAccess.getDoUntilLoopAccess().getInvariantInvariantKeyword_1_0_0()); }
		)
		{ after(grammarAccess.getDoUntilLoopAccess().getInvariantInvariantKeyword_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DoUntilLoop__InvAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDoUntilLoopAccess().getInvNamelessAssertionParserRuleCall_1_1_0()); }
		ruleNamelessAssertion
		{ after(grammarAccess.getDoUntilLoopAccess().getInvNamelessAssertionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DoUntilLoop__BoundAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDoUntilLoopAccess().getBoundBoundKeyword_2_0_0()); }
		(
			{ before(grammarAccess.getDoUntilLoopAccess().getBoundBoundKeyword_2_0_0()); }
			'bound'
			{ after(grammarAccess.getDoUntilLoopAccess().getBoundBoundKeyword_2_0_0()); }
		)
		{ after(grammarAccess.getDoUntilLoopAccess().getBoundBoundKeyword_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DoUntilLoop__BndAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDoUntilLoopAccess().getBndExpressionParserRuleCall_2_1_0()); }
		ruleExpression
		{ after(grammarAccess.getDoUntilLoopAccess().getBndExpressionParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DoUntilLoop__ActionsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDoUntilLoopAccess().getActionsBehaviorActionsParserRuleCall_3_0()); }
		ruleBehaviorActions
		{ after(grammarAccess.getDoUntilLoopAccess().getActionsBehaviorActionsParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DoUntilLoop__GuardAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDoUntilLoopAccess().getGuardBooleanExpressionParserRuleCall_6_0()); }
		ruleBooleanExpression
		{ after(grammarAccess.getDoUntilLoopAccess().getGuardBooleanExpressionParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ThrowsClause__ExceptionsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getThrowsClauseAccess().getExceptionsExceptionCrossReference_1_0()); }
		(
			{ before(grammarAccess.getThrowsClauseAccess().getExceptionsExceptionIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getThrowsClauseAccess().getExceptionsExceptionIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getThrowsClauseAccess().getExceptionsExceptionCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CatchClause__CatchesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCatchClauseAccess().getCatchesCatchClauseTermParserRuleCall_1_0()); }
		ruleCatchClauseTerm
		{ after(grammarAccess.getCatchClauseAccess().getCatchesCatchClauseTermParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CatchClauseTerm__ExceptionsAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCatchClauseTermAccess().getExceptionsExceptionCrossReference_1_0_0()); }
		(
			{ before(grammarAccess.getCatchClauseTermAccess().getExceptionsExceptionIDTerminalRuleCall_1_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getCatchClauseTermAccess().getExceptionsExceptionIDTerminalRuleCall_1_0_0_1()); }
		)
		{ after(grammarAccess.getCatchClauseTermAccess().getExceptionsExceptionCrossReference_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CatchClauseTerm__AllAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCatchClauseTermAccess().getAllAllKeyword_1_1_0()); }
		(
			{ before(grammarAccess.getCatchClauseTermAccess().getAllAllKeyword_1_1_0()); }
			'all'
			{ after(grammarAccess.getCatchClauseTermAccess().getAllAllKeyword_1_1_0()); }
		)
		{ after(grammarAccess.getCatchClauseTermAccess().getAllAllKeyword_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CatchClauseTerm__ActionAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCatchClauseTermAccess().getActionBasicActionParserRuleCall_3_0()); }
		ruleBasicAction
		{ after(grammarAccess.getCatchClauseTermAccess().getActionBasicActionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenThrow__ExpAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhenThrowAccess().getExpExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getWhenThrowAccess().getExpExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenThrow__ExceptionAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhenThrowAccess().getExceptionExceptionCrossReference_5_0()); }
		(
			{ before(grammarAccess.getWhenThrowAccess().getExceptionExceptionIDTerminalRuleCall_5_0_1()); }
			RULE_ID
			{ after(grammarAccess.getWhenThrowAccess().getExceptionExceptionIDTerminalRuleCall_5_0_1()); }
		)
		{ after(grammarAccess.getWhenThrowAccess().getExceptionExceptionCrossReference_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhenThrow__MessageAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhenThrowAccess().getMessageSTRINGTerminalRuleCall_6_0()); }
		RULE_STRING
		{ after(grammarAccess.getWhenThrowAccess().getMessageSTRINGTerminalRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Computation__LbAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComputationAccess().getLbBehaviorTimeParserRuleCall_2_0()); }
		ruleBehaviorTime
		{ after(grammarAccess.getComputationAccess().getLbBehaviorTimeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Computation__UbAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComputationAccess().getUbBehaviorTimeParserRuleCall_3_1_0()); }
		ruleBehaviorTime
		{ after(grammarAccess.getComputationAccess().getUbBehaviorTimeParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Computation__ComponentAssignment_5_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComputationAccess().getComponentComponentClassifierCrossReference_5_2_0()); }
		(
			{ before(grammarAccess.getComputationAccess().getComponentComponentClassifierQCREFParserRuleCall_5_2_0_1()); }
			ruleQCREF
			{ after(grammarAccess.getComputationAccess().getComponentComponentClassifierQCREFParserRuleCall_5_2_0_1()); }
		)
		{ after(grammarAccess.getComputationAccess().getComponentComponentClassifierCrossReference_5_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BAAlternative__ActionsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBAAlternativeAccess().getActionsBehaviorActionsParserRuleCall_1_0()); }
		ruleBehaviorActions
		{ after(grammarAccess.getBAAlternativeAccess().getActionsBehaviorActionsParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BAAlternative__ElseifaltAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBAAlternativeAccess().getElseifaltElseifAlternativeParserRuleCall_2_0()); }
		ruleElseifAlternative
		{ after(grammarAccess.getBAAlternativeAccess().getElseifaltElseifAlternativeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BAAlternative__ElsealtAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBAAlternativeAccess().getElsealtElseAlternativeParserRuleCall_3_0()); }
		ruleElseAlternative
		{ after(grammarAccess.getBAAlternativeAccess().getElsealtElseAlternativeParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseifAlternative__TestAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElseifAlternativeAccess().getTestBooleanExpressionParserRuleCall_2_0()); }
		ruleBooleanExpression
		{ after(grammarAccess.getElseifAlternativeAccess().getTestBooleanExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseifAlternative__ActionsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElseifAlternativeAccess().getActionsBehaviorActionsParserRuleCall_4_0()); }
		ruleBehaviorActions
		{ after(grammarAccess.getElseifAlternativeAccess().getActionsBehaviorActionsParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseAlternative__ActionsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElseAlternativeAccess().getActionsBehaviorActionsParserRuleCall_1_0()); }
		ruleBehaviorActions
		{ after(grammarAccess.getElseAlternativeAccess().getActionsBehaviorActionsParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IssueException__ExceptionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIssueExceptionAccess().getExceptionExceptionCrossReference_2_0()); }
		(
			{ before(grammarAccess.getIssueExceptionAccess().getExceptionExceptionIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getIssueExceptionAccess().getExceptionExceptionIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getIssueExceptionAccess().getExceptionExceptionCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IssueException__MessageAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIssueExceptionAccess().getMessageSTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getIssueExceptionAccess().getMessageSTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LockingAction__EntercriticalAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLockingActionAccess().getEntercriticalAsteriskExclamationMarkLessThanSignKeyword_0_0()); }
		(
			{ before(grammarAccess.getLockingActionAccess().getEntercriticalAsteriskExclamationMarkLessThanSignKeyword_0_0()); }
			'*!<'
			{ after(grammarAccess.getLockingActionAccess().getEntercriticalAsteriskExclamationMarkLessThanSignKeyword_0_0()); }
		)
		{ after(grammarAccess.getLockingActionAccess().getEntercriticalAsteriskExclamationMarkLessThanSignKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LockingAction__LeavecriticalAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLockingActionAccess().getLeavecriticalAsteriskExclamationMarkGreaterThanSignKeyword_1_0()); }
		(
			{ before(grammarAccess.getLockingActionAccess().getLeavecriticalAsteriskExclamationMarkGreaterThanSignKeyword_1_0()); }
			'*!>'
			{ after(grammarAccess.getLockingActionAccess().getLeavecriticalAsteriskExclamationMarkGreaterThanSignKeyword_1_0()); }
		)
		{ after(grammarAccess.getLockingActionAccess().getLeavecriticalAsteriskExclamationMarkGreaterThanSignKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LockingAction__Required_data_accessAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLockingActionAccess().getRequired_data_accessDataAccessCrossReference_2_0_0()); }
		(
			{ before(grammarAccess.getLockingActionAccess().getRequired_data_accessDataAccessIDTerminalRuleCall_2_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getLockingActionAccess().getRequired_data_accessDataAccessIDTerminalRuleCall_2_0_0_1()); }
		)
		{ after(grammarAccess.getLockingActionAccess().getRequired_data_accessDataAccessCrossReference_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LockingAction__LockAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLockingActionAccess().getLockExclamationMarkLessThanSignKeyword_2_1_0()); }
		(
			{ before(grammarAccess.getLockingActionAccess().getLockExclamationMarkLessThanSignKeyword_2_1_0()); }
			'!<'
			{ after(grammarAccess.getLockingActionAccess().getLockExclamationMarkLessThanSignKeyword_2_1_0()); }
		)
		{ after(grammarAccess.getLockingActionAccess().getLockExclamationMarkLessThanSignKeyword_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LockingAction__Required_data_accessAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLockingActionAccess().getRequired_data_accessDataAccessCrossReference_3_0_0()); }
		(
			{ before(grammarAccess.getLockingActionAccess().getRequired_data_accessDataAccessIDTerminalRuleCall_3_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getLockingActionAccess().getRequired_data_accessDataAccessIDTerminalRuleCall_3_0_0_1()); }
		)
		{ after(grammarAccess.getLockingActionAccess().getRequired_data_accessDataAccessCrossReference_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LockingAction__UnlockAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLockingActionAccess().getUnlockExclamationMarkGreaterThanSignKeyword_3_1_0()); }
		(
			{ before(grammarAccess.getLockingActionAccess().getUnlockExclamationMarkGreaterThanSignKeyword_3_1_0()); }
			'!>'
			{ after(grammarAccess.getLockingActionAccess().getUnlockExclamationMarkGreaterThanSignKeyword_3_1_0()); }
		)
		{ after(grammarAccess.getLockingActionAccess().getUnlockExclamationMarkGreaterThanSignKeyword_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FreezePort__FrozenAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFreezePortAccess().getFrozenPortCrossReference_2_0()); }
		(
			{ before(grammarAccess.getFreezePortAccess().getFrozenPortIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getFreezePortAccess().getFrozenPortIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getFreezePortAccess().getFrozenPortCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FreezePort__FrozenAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFreezePortAccess().getFrozenPortCrossReference_3_1_0()); }
		(
			{ before(grammarAccess.getFreezePortAccess().getFrozenPortIDTerminalRuleCall_3_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getFreezePortAccess().getFrozenPortIDTerminalRuleCall_3_1_0_1()); }
		)
		{ after(grammarAccess.getFreezePortAccess().getFrozenPortCrossReference_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pause__PauseAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPauseAccess().getPausePauseKeyword_0()); }
		(
			{ before(grammarAccess.getPauseAccess().getPausePauseKeyword_0()); }
			'pause'
			{ after(grammarAccess.getPauseAccess().getPausePauseKeyword_0()); }
		)
		{ after(grammarAccess.getPauseAccess().getPausePauseKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionTimeout__DurationAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionTimeoutAccess().getDurationBehaviorTimeParserRuleCall_1_0()); }
		ruleBehaviorTime
		{ after(grammarAccess.getActionTimeoutAccess().getDurationBehaviorTimeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorTime__QuantityAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBehaviorTimeAccess().getQuantityQuantityParserRuleCall_0_0()); }
		ruleQuantity
		{ after(grammarAccess.getBehaviorTimeAccess().getQuantityQuantityParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorTime__ValueAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBehaviorTimeAccess().getValueValueNameParserRuleCall_1_0_0()); }
		ruleValueName
		{ after(grammarAccess.getBehaviorTimeAccess().getValueValueNameParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorTime__UnitAssignment_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBehaviorTimeAccess().getUnitUnitNameCrossReference_1_1_0_0()); }
		(
			{ before(grammarAccess.getBehaviorTimeAccess().getUnitUnitNameIDTerminalRuleCall_1_1_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getBehaviorTimeAccess().getUnitUnitNameIDTerminalRuleCall_1_1_0_0_1()); }
		)
		{ after(grammarAccess.getBehaviorTimeAccess().getUnitUnitNameCrossReference_1_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorTime__ScalarAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBehaviorTimeAccess().getScalarScalarKeyword_1_1_1_0()); }
		(
			{ before(grammarAccess.getBehaviorTimeAccess().getScalarScalarKeyword_1_1_1_0()); }
			'scalar'
			{ after(grammarAccess.getBehaviorTimeAccess().getScalarScalarKeyword_1_1_1_0()); }
		)
		{ after(grammarAccess.getBehaviorTimeAccess().getScalarScalarKeyword_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorTime__WholeAssignment_1_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBehaviorTimeAccess().getWholeWholeKeyword_1_1_2_0()); }
		(
			{ before(grammarAccess.getBehaviorTimeAccess().getWholeWholeKeyword_1_1_2_0()); }
			'whole'
			{ after(grammarAccess.getBehaviorTimeAccess().getWholeWholeKeyword_1_1_2_0()); }
		)
		{ after(grammarAccess.getBehaviorTimeAccess().getWholeWholeKeyword_1_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exception__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExceptionAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getExceptionAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exception__DescriptionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExceptionAccess().getDescriptionSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getExceptionAccess().getDescriptionSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exception__CodeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExceptionAccess().getCodeNUMBERTerminalRuleCall_2_0()); }
		RULE_NUMBER
		{ after(grammarAccess.getExceptionAccess().getCodeNUMBERTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GhostVariables__GvAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGhostVariablesAccess().getGvGhostVariableParserRuleCall_2_0()); }
		ruleGhostVariable
		{ after(grammarAccess.getGhostVariablesAccess().getGvGhostVariableParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GhostVariable__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGhostVariableAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getGhostVariableAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GhostVariable__TodAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGhostVariableAccess().getTodTypeOrReferenceParserRuleCall_3_0()); }
		ruleTypeOrReference
		{ after(grammarAccess.getGhostVariableAccess().getTodTypeOrReferenceParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GhostVariable__AssnAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGhostVariableAccess().getAssnAssertionParserRuleCall_4_1_0()); }
		ruleAssertion
		{ after(grammarAccess.getGhostVariableAccess().getAssnAssertionParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assertion__NamedassertionAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssertionAccess().getNamedassertionNamedAssertionParserRuleCall_0_0()); }
		ruleNamedAssertion
		{ after(grammarAccess.getAssertionAccess().getNamedassertionNamedAssertionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assertion__NamelessassertionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssertionAccess().getNamelessassertionNamelessAssertionParserRuleCall_1_0()); }
		ruleNamelessAssertion
		{ after(grammarAccess.getAssertionAccess().getNamelessassertionNamelessAssertionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assertion__NamelessfunctionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssertionAccess().getNamelessfunctionNamelessFunctionParserRuleCall_2_0()); }
		ruleNamelessFunction
		{ after(grammarAccess.getAssertionAccess().getNamelessfunctionNamelessFunctionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assertion__NamelessenumerationAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssertionAccess().getNamelessenumerationNamelessEnumerationParserRuleCall_3_0()); }
		ruleNamelessEnumeration
		{ after(grammarAccess.getAssertionAccess().getNamelessenumerationNamelessEnumerationParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedAssertion__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNamedAssertionAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getNamedAssertionAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedAssertion__FormalsAssignment_3_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNamedAssertionAccess().getFormalsVariableListParserRuleCall_3_0_0_0()); }
		ruleVariableList
		{ after(grammarAccess.getNamedAssertionAccess().getFormalsVariableListParserRuleCall_3_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedAssertion__PredAssignment_3_0_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNamedAssertionAccess().getPredColonKeyword_3_0_1_0_0_0()); }
		(
			{ before(grammarAccess.getNamedAssertionAccess().getPredColonKeyword_3_0_1_0_0_0()); }
			':'
			{ after(grammarAccess.getNamedAssertionAccess().getPredColonKeyword_3_0_1_0_0_0()); }
		)
		{ after(grammarAccess.getNamedAssertionAccess().getPredColonKeyword_3_0_1_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedAssertion__PredicateAssignment_3_0_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNamedAssertionAccess().getPredicatePredicateParserRuleCall_3_0_1_0_1_0()); }
		rulePredicate
		{ after(grammarAccess.getNamedAssertionAccess().getPredicatePredicateParserRuleCall_3_0_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedAssertion__TodAssignment_3_0_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNamedAssertionAccess().getTodTypeOrReferenceParserRuleCall_3_0_1_1_1_0()); }
		ruleTypeOrReference
		{ after(grammarAccess.getNamedAssertionAccess().getTodTypeOrReferenceParserRuleCall_3_0_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedAssertion__FuncAssignment_3_0_1_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNamedAssertionAccess().getFuncColonEqualsSignKeyword_3_0_1_1_2_0()); }
		(
			{ before(grammarAccess.getNamedAssertionAccess().getFuncColonEqualsSignKeyword_3_0_1_1_2_0()); }
			':='
			{ after(grammarAccess.getNamedAssertionAccess().getFuncColonEqualsSignKeyword_3_0_1_1_2_0()); }
		)
		{ after(grammarAccess.getNamedAssertionAccess().getFuncColonEqualsSignKeyword_3_0_1_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedAssertion__FunctionvalueAssignment_3_0_1_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNamedAssertionAccess().getFunctionvalueAssertionFunctionValueParserRuleCall_3_0_1_1_3_0()); }
		ruleAssertionFunctionValue
		{ after(grammarAccess.getNamedAssertionAccess().getFunctionvalueAssertionFunctionValueParserRuleCall_3_0_1_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedAssertion__AssertionvariableAssignment_3_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNamedAssertionAccess().getAssertionvariableIDTerminalRuleCall_3_1_0_0()); }
		RULE_ID
		{ after(grammarAccess.getNamedAssertionAccess().getAssertionvariableIDTerminalRuleCall_3_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedAssertion__EnumerationTypeAssignment_3_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNamedAssertionAccess().getEnumerationTypeTypeDeclarationCrossReference_3_1_2_0()); }
		(
			{ before(grammarAccess.getNamedAssertionAccess().getEnumerationTypeTypeDeclarationIDTerminalRuleCall_3_1_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getNamedAssertionAccess().getEnumerationTypeTypeDeclarationIDTerminalRuleCall_3_1_2_0_1()); }
		)
		{ after(grammarAccess.getNamedAssertionAccess().getEnumerationTypeTypeDeclarationCrossReference_3_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedAssertion__EnumerAssignment_3_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNamedAssertionAccess().getEnumerPlusSignEqualsSignGreaterThanSignKeyword_3_1_3_0()); }
		(
			{ before(grammarAccess.getNamedAssertionAccess().getEnumerPlusSignEqualsSignGreaterThanSignKeyword_3_1_3_0()); }
			'+=>'
			{ after(grammarAccess.getNamedAssertionAccess().getEnumerPlusSignEqualsSignGreaterThanSignKeyword_3_1_3_0()); }
		)
		{ after(grammarAccess.getNamedAssertionAccess().getEnumerPlusSignEqualsSignGreaterThanSignKeyword_3_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedAssertion__EnumerationAssignment_3_1_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNamedAssertionAccess().getEnumerationAssertionEnumerationParserRuleCall_3_1_4_0()); }
		ruleAssertionEnumeration
		{ after(grammarAccess.getNamedAssertionAccess().getEnumerationAssertionEnumerationParserRuleCall_3_1_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamelessAssertion__PredicateAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNamelessAssertionAccess().getPredicatePredicateParserRuleCall_1_0()); }
		rulePredicate
		{ after(grammarAccess.getNamelessAssertionAccess().getPredicatePredicateParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamelessFunction__TodAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNamelessFunctionAccess().getTodTypeOrReferenceParserRuleCall_2_0()); }
		ruleTypeOrReference
		{ after(grammarAccess.getNamelessFunctionAccess().getTodTypeOrReferenceParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamelessFunction__FuncAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNamelessFunctionAccess().getFuncColonEqualsSignKeyword_3_0()); }
		(
			{ before(grammarAccess.getNamelessFunctionAccess().getFuncColonEqualsSignKeyword_3_0()); }
			':='
			{ after(grammarAccess.getNamelessFunctionAccess().getFuncColonEqualsSignKeyword_3_0()); }
		)
		{ after(grammarAccess.getNamelessFunctionAccess().getFuncColonEqualsSignKeyword_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamelessFunction__FunctionvalueAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNamelessFunctionAccess().getFunctionvalueAssertionFunctionValueParserRuleCall_4_0()); }
		ruleAssertionFunctionValue
		{ after(grammarAccess.getNamelessFunctionAccess().getFunctionvalueAssertionFunctionValueParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamelessEnumeration__EnumerationAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNamelessEnumerationAccess().getEnumerationInvocationParserRuleCall_2_0()); }
		ruleInvocation
		{ after(grammarAccess.getNamelessEnumerationAccess().getEnumerationInvocationParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__AllAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getAllUniversalQuantificationParserRuleCall_0_0()); }
		ruleUniversalQuantification
		{ after(grammarAccess.getExpressionAccess().getAllUniversalQuantificationParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__ExistsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getExistsExistentialQuantificationParserRuleCall_1_0()); }
		ruleExistentialQuantification
		{ after(grammarAccess.getExpressionAccess().getExistsExistentialQuantificationParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__SumAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getSumSumQuantificationParserRuleCall_2_0()); }
		ruleSumQuantification
		{ after(grammarAccess.getExpressionAccess().getSumSumQuantificationParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__ProductAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getProductProductQuantificationParserRuleCall_3_0()); }
		ruleProductQuantification
		{ after(grammarAccess.getExpressionAccess().getProductProductQuantificationParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__NumberofAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getNumberofCountingQuantificationParserRuleCall_4_0()); }
		ruleCountingQuantification
		{ after(grammarAccess.getExpressionAccess().getNumberofCountingQuantificationParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__LAssignment_5_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getLDisjunctionParserRuleCall_5_0_0()); }
		ruleDisjunction
		{ after(grammarAccess.getExpressionAccess().getLDisjunctionParserRuleCall_5_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__SymAssignment_5_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getSymIffKeyword_5_1_0_0_0()); }
		(
			{ before(grammarAccess.getExpressionAccess().getSymIffKeyword_5_1_0_0_0()); }
			'iff'
			{ after(grammarAccess.getExpressionAccess().getSymIffKeyword_5_1_0_0_0()); }
		)
		{ after(grammarAccess.getExpressionAccess().getSymIffKeyword_5_1_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__SymAssignment_5_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getSymImpliesKeyword_5_1_0_1_0()); }
		(
			{ before(grammarAccess.getExpressionAccess().getSymImpliesKeyword_5_1_0_1_0()); }
			'implies'
			{ after(grammarAccess.getExpressionAccess().getSymImpliesKeyword_5_1_0_1_0()); }
		)
		{ after(grammarAccess.getExpressionAccess().getSymImpliesKeyword_5_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__RAssignment_5_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getRDisjunctionParserRuleCall_5_1_1_0()); }
		ruleDisjunction
		{ after(grammarAccess.getExpressionAccess().getRDisjunctionParserRuleCall_5_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Disjunction__LAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDisjunctionAccess().getLConjunctionParserRuleCall_0_0()); }
		ruleConjunction
		{ after(grammarAccess.getDisjunctionAccess().getLConjunctionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Disjunction__SymAssignment_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDisjunctionAccess().getSymOrKeyword_1_0_0_0()); }
		(
			{ before(grammarAccess.getDisjunctionAccess().getSymOrKeyword_1_0_0_0()); }
			'or'
			{ after(grammarAccess.getDisjunctionAccess().getSymOrKeyword_1_0_0_0()); }
		)
		{ after(grammarAccess.getDisjunctionAccess().getSymOrKeyword_1_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Disjunction__RAssignment_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDisjunctionAccess().getRConjunctionParserRuleCall_1_0_1_0()); }
		ruleConjunction
		{ after(grammarAccess.getDisjunctionAccess().getRConjunctionParserRuleCall_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Disjunction__RAssignment_1_0_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDisjunctionAccess().getRConjunctionParserRuleCall_1_0_2_1_0()); }
		ruleConjunction
		{ after(grammarAccess.getDisjunctionAccess().getRConjunctionParserRuleCall_1_0_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Disjunction__SymAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDisjunctionAccess().getSymElseKeyword_1_1_1_0()); }
		(
			{ before(grammarAccess.getDisjunctionAccess().getSymElseKeyword_1_1_1_0()); }
			'else'
			{ after(grammarAccess.getDisjunctionAccess().getSymElseKeyword_1_1_1_0()); }
		)
		{ after(grammarAccess.getDisjunctionAccess().getSymElseKeyword_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Disjunction__RAssignment_1_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDisjunctionAccess().getRConjunctionParserRuleCall_1_1_2_0()); }
		ruleConjunction
		{ after(grammarAccess.getDisjunctionAccess().getRConjunctionParserRuleCall_1_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Disjunction__RAssignment_1_1_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDisjunctionAccess().getRConjunctionParserRuleCall_1_1_3_2_0()); }
		ruleConjunction
		{ after(grammarAccess.getDisjunctionAccess().getRConjunctionParserRuleCall_1_1_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Disjunction__SymAssignment_1_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDisjunctionAccess().getSymXorKeyword_1_2_0_0()); }
		(
			{ before(grammarAccess.getDisjunctionAccess().getSymXorKeyword_1_2_0_0()); }
			'xor'
			{ after(grammarAccess.getDisjunctionAccess().getSymXorKeyword_1_2_0_0()); }
		)
		{ after(grammarAccess.getDisjunctionAccess().getSymXorKeyword_1_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Disjunction__RAssignment_1_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDisjunctionAccess().getRConjunctionParserRuleCall_1_2_1_0()); }
		ruleConjunction
		{ after(grammarAccess.getDisjunctionAccess().getRConjunctionParserRuleCall_1_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Disjunction__RAssignment_1_2_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDisjunctionAccess().getRConjunctionParserRuleCall_1_2_2_1_0()); }
		ruleConjunction
		{ after(grammarAccess.getDisjunctionAccess().getRConjunctionParserRuleCall_1_2_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conjunction__LAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConjunctionAccess().getLRelationParserRuleCall_0_0()); }
		ruleRelation
		{ after(grammarAccess.getConjunctionAccess().getLRelationParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conjunction__SymAssignment_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConjunctionAccess().getSymAndKeyword_1_0_0_0()); }
		(
			{ before(grammarAccess.getConjunctionAccess().getSymAndKeyword_1_0_0_0()); }
			'and'
			{ after(grammarAccess.getConjunctionAccess().getSymAndKeyword_1_0_0_0()); }
		)
		{ after(grammarAccess.getConjunctionAccess().getSymAndKeyword_1_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conjunction__RAssignment_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConjunctionAccess().getRRelationParserRuleCall_1_0_1_0()); }
		ruleRelation
		{ after(grammarAccess.getConjunctionAccess().getRRelationParserRuleCall_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conjunction__RAssignment_1_0_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConjunctionAccess().getRRelationParserRuleCall_1_0_2_1_0()); }
		ruleRelation
		{ after(grammarAccess.getConjunctionAccess().getRRelationParserRuleCall_1_0_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conjunction__SymAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConjunctionAccess().getSymThenKeyword_1_1_1_0()); }
		(
			{ before(grammarAccess.getConjunctionAccess().getSymThenKeyword_1_1_1_0()); }
			'then'
			{ after(grammarAccess.getConjunctionAccess().getSymThenKeyword_1_1_1_0()); }
		)
		{ after(grammarAccess.getConjunctionAccess().getSymThenKeyword_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conjunction__RAssignment_1_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConjunctionAccess().getRRelationParserRuleCall_1_1_2_0()); }
		ruleRelation
		{ after(grammarAccess.getConjunctionAccess().getRRelationParserRuleCall_1_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conjunction__RAssignment_1_1_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConjunctionAccess().getRRelationParserRuleCall_1_1_3_2_0()); }
		ruleRelation
		{ after(grammarAccess.getConjunctionAccess().getRRelationParserRuleCall_1_1_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__LAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationAccess().getLAddSubParserRuleCall_0_0()); }
		ruleAddSub
		{ after(grammarAccess.getRelationAccess().getLAddSubParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__SymAssignment_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationAccess().getSymAlternatives_1_0_0_0()); }
		(rule__Relation__SymAlternatives_1_0_0_0)
		{ after(grammarAccess.getRelationAccess().getSymAlternatives_1_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__RAssignment_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationAccess().getRAddSubParserRuleCall_1_0_1_0()); }
		ruleAddSub
		{ after(grammarAccess.getRelationAccess().getRAddSubParserRuleCall_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__InAssignment_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationAccess().getInInKeyword_1_1_0_0()); }
		(
			{ before(grammarAccess.getRelationAccess().getInInKeyword_1_1_0_0()); }
			'in'
			{ after(grammarAccess.getRelationAccess().getInInKeyword_1_1_0_0()); }
		)
		{ after(grammarAccess.getRelationAccess().getInInKeyword_1_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__RangeAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationAccess().getRangeRangeParserRuleCall_1_1_1_0()); }
		ruleRange
		{ after(grammarAccess.getRelationAccess().getRangeRangeParserRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddSub__LAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddSubAccess().getLMultDivParserRuleCall_0_0()); }
		ruleMultDiv
		{ after(grammarAccess.getAddSubAccess().getLMultDivParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddSub__SymAssignment_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddSubAccess().getSymPlusSignKeyword_1_0_0_0()); }
		(
			{ before(grammarAccess.getAddSubAccess().getSymPlusSignKeyword_1_0_0_0()); }
			'+'
			{ after(grammarAccess.getAddSubAccess().getSymPlusSignKeyword_1_0_0_0()); }
		)
		{ after(grammarAccess.getAddSubAccess().getSymPlusSignKeyword_1_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddSub__RAssignment_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddSubAccess().getRMultDivParserRuleCall_1_0_1_0()); }
		ruleMultDiv
		{ after(grammarAccess.getAddSubAccess().getRMultDivParserRuleCall_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddSub__RAssignment_1_0_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddSubAccess().getRMultDivParserRuleCall_1_0_2_1_0()); }
		ruleMultDiv
		{ after(grammarAccess.getAddSubAccess().getRMultDivParserRuleCall_1_0_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddSub__SymAssignment_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddSubAccess().getSymHyphenMinusKeyword_1_1_0_0()); }
		(
			{ before(grammarAccess.getAddSubAccess().getSymHyphenMinusKeyword_1_1_0_0()); }
			'-'
			{ after(grammarAccess.getAddSubAccess().getSymHyphenMinusKeyword_1_1_0_0()); }
		)
		{ after(grammarAccess.getAddSubAccess().getSymHyphenMinusKeyword_1_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddSub__RAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddSubAccess().getRMultDivParserRuleCall_1_1_1_0()); }
		ruleMultDiv
		{ after(grammarAccess.getAddSubAccess().getRMultDivParserRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultDiv__LAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultDivAccess().getLExpParserRuleCall_0_0()); }
		ruleExp
		{ after(grammarAccess.getMultDivAccess().getLExpParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultDiv__SymAssignment_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultDivAccess().getSymAlternatives_1_0_0_0()); }
		(rule__MultDiv__SymAlternatives_1_0_0_0)
		{ after(grammarAccess.getMultDivAccess().getSymAlternatives_1_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultDiv__RAssignment_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultDivAccess().getRExpParserRuleCall_1_0_1_0()); }
		ruleExp
		{ after(grammarAccess.getMultDivAccess().getRExpParserRuleCall_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultDiv__SymAssignment_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultDivAccess().getSymAsteriskKeyword_1_1_0_0()); }
		(
			{ before(grammarAccess.getMultDivAccess().getSymAsteriskKeyword_1_1_0_0()); }
			'*'
			{ after(grammarAccess.getMultDivAccess().getSymAsteriskKeyword_1_1_0_0()); }
		)
		{ after(grammarAccess.getMultDivAccess().getSymAsteriskKeyword_1_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultDiv__RAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultDivAccess().getRExpParserRuleCall_1_1_1_0()); }
		ruleExp
		{ after(grammarAccess.getMultDivAccess().getRExpParserRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultDiv__RAssignment_1_1_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultDivAccess().getRExpParserRuleCall_1_1_2_1_0()); }
		ruleExp
		{ after(grammarAccess.getMultDivAccess().getRExpParserRuleCall_1_1_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__LAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpAccess().getLSubexpressionParserRuleCall_0_0()); }
		ruleSubexpression
		{ after(grammarAccess.getExpAccess().getLSubexpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__SymAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpAccess().getSymAsteriskAsteriskKeyword_1_0_0()); }
		(
			{ before(grammarAccess.getExpAccess().getSymAsteriskAsteriskKeyword_1_0_0()); }
			'**'
			{ after(grammarAccess.getExpAccess().getSymAsteriskAsteriskKeyword_1_0_0()); }
		)
		{ after(grammarAccess.getExpAccess().getSymAsteriskAsteriskKeyword_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__RAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpAccess().getRSubexpressionParserRuleCall_1_1_0()); }
		ruleSubexpression
		{ after(grammarAccess.getExpAccess().getRSubexpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Subexpression__UnaryAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubexpressionAccess().getUnaryUnaryOperatorParserRuleCall_0_0()); }
		ruleUnaryOperator
		{ after(grammarAccess.getSubexpressionAccess().getUnaryUnaryOperatorParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Subexpression__Timed_expressionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubexpressionAccess().getTimed_expressionTimedExpressionParserRuleCall_1_0()); }
		ruleTimedExpression
		{ after(grammarAccess.getSubexpressionAccess().getTimed_expressionTimedExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimedExpression__SubjectAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimedExpressionAccess().getSubjectTimedSubjectParserRuleCall_0_0()); }
		ruleTimedSubject
		{ after(grammarAccess.getTimedExpressionAccess().getSubjectTimedSubjectParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimedExpression__TickAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimedExpressionAccess().getTickApostropheKeyword_1_0_0()); }
		(
			{ before(grammarAccess.getTimedExpressionAccess().getTickApostropheKeyword_1_0_0()); }
			'\''
			{ after(grammarAccess.getTimedExpressionAccess().getTickApostropheKeyword_1_0_0()); }
		)
		{ after(grammarAccess.getTimedExpressionAccess().getTickApostropheKeyword_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimedExpression__AtAssignment_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimedExpressionAccess().getAtCommercialAtKeyword_1_1_0_0()); }
		(
			{ before(grammarAccess.getTimedExpressionAccess().getAtCommercialAtKeyword_1_1_0_0()); }
			'@'
			{ after(grammarAccess.getTimedExpressionAccess().getAtCommercialAtKeyword_1_1_0_0()); }
		)
		{ after(grammarAccess.getTimedExpressionAccess().getAtCommercialAtKeyword_1_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimedExpression__TimeAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimedExpressionAccess().getTimeSubexpressionParserRuleCall_1_1_1_0()); }
		ruleSubexpression
		{ after(grammarAccess.getTimedExpressionAccess().getTimeSubexpressionParserRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimedExpression__CaretAssignment_1_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimedExpressionAccess().getCaretCircumflexAccentKeyword_1_2_0_0()); }
		(
			{ before(grammarAccess.getTimedExpressionAccess().getCaretCircumflexAccentKeyword_1_2_0_0()); }
			'^'
			{ after(grammarAccess.getTimedExpressionAccess().getCaretCircumflexAccentKeyword_1_2_0_0()); }
		)
		{ after(grammarAccess.getTimedExpressionAccess().getCaretCircumflexAccentKeyword_1_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimedExpression__ShiftAssignment_1_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimedExpressionAccess().getShiftPeriodShiftParserRuleCall_1_2_1_0()); }
		rulePeriodShift
		{ after(grammarAccess.getTimedExpressionAccess().getShiftPeriodShiftParserRuleCall_1_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimedSubject__PsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimedSubjectAccess().getPsParenthesizedSubexpressionParserRuleCall_0_0()); }
		ruleParenthesizedSubexpression
		{ after(grammarAccess.getTimedSubjectAccess().getPsParenthesizedSubexpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimedSubject__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimedSubjectAccess().getValueValueParserRuleCall_1_0()); }
		ruleValue
		{ after(grammarAccess.getTimedSubjectAccess().getValueValueParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimedSubject__ConditionalAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimedSubjectAccess().getConditionalConditionalExpressionParserRuleCall_2_0()); }
		ruleConditionalExpression
		{ after(grammarAccess.getTimedSubjectAccess().getConditionalConditionalExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimedSubject__RecordAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimedSubjectAccess().getRecordRecordTermParserRuleCall_3_0()); }
		ruleRecordTerm
		{ after(grammarAccess.getTimedSubjectAccess().getRecordRecordTermParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimedSubject__InvocationAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimedSubjectAccess().getInvocationInvocationParserRuleCall_4_0()); }
		ruleInvocation
		{ after(grammarAccess.getTimedSubjectAccess().getInvocationInvocationParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesizedSubexpression__ExpressionAssignment_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParenthesizedSubexpressionAccess().getExpressionExpressionParserRuleCall_1_0_0_0()); }
		ruleExpression
		{ after(grammarAccess.getParenthesizedSubexpressionAccess().getExpressionExpressionParserRuleCall_1_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesizedSubexpression__TAssignment_1_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParenthesizedSubexpressionAccess().getTExpressionParserRuleCall_1_0_1_1_0()); }
		ruleExpression
		{ after(grammarAccess.getParenthesizedSubexpressionAccess().getTExpressionParserRuleCall_1_0_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesizedSubexpression__FAssignment_1_0_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParenthesizedSubexpressionAccess().getFExpressionParserRuleCall_1_0_1_3_0()); }
		ruleExpression
		{ after(grammarAccess.getParenthesizedSubexpressionAccess().getFExpressionParserRuleCall_1_0_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesizedSubexpression__CaseexpressionAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParenthesizedSubexpressionAccess().getCaseexpressionCaseExpressionParserRuleCall_1_1_0()); }
		ruleCaseExpression
		{ after(grammarAccess.getParenthesizedSubexpressionAccess().getCaseexpressionCaseExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOperator__NotAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryOperatorAccess().getNotNotKeyword_0_0()); }
		(
			{ before(grammarAccess.getUnaryOperatorAccess().getNotNotKeyword_0_0()); }
			'not'
			{ after(grammarAccess.getUnaryOperatorAccess().getNotNotKeyword_0_0()); }
		)
		{ after(grammarAccess.getUnaryOperatorAccess().getNotNotKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOperator__Unary_minusAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryOperatorAccess().getUnary_minusHyphenMinusKeyword_1_0()); }
		(
			{ before(grammarAccess.getUnaryOperatorAccess().getUnary_minusHyphenMinusKeyword_1_0()); }
			'-'
			{ after(grammarAccess.getUnaryOperatorAccess().getUnary_minusHyphenMinusKeyword_1_0()); }
		)
		{ after(grammarAccess.getUnaryOperatorAccess().getUnary_minusHyphenMinusKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOperator__Absolute_valueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryOperatorAccess().getAbsolute_valueAbsKeyword_2_0()); }
		(
			{ before(grammarAccess.getUnaryOperatorAccess().getAbsolute_valueAbsKeyword_2_0()); }
			'abs'
			{ after(grammarAccess.getUnaryOperatorAccess().getAbsolute_valueAbsKeyword_2_0()); }
		)
		{ after(grammarAccess.getUnaryOperatorAccess().getAbsolute_valueAbsKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOperator__TruncateAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryOperatorAccess().getTruncateTruncateKeyword_3_0()); }
		(
			{ before(grammarAccess.getUnaryOperatorAccess().getTruncateTruncateKeyword_3_0()); }
			'truncate'
			{ after(grammarAccess.getUnaryOperatorAccess().getTruncateTruncateKeyword_3_0()); }
		)
		{ after(grammarAccess.getUnaryOperatorAccess().getTruncateTruncateKeyword_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOperator__RoundAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryOperatorAccess().getRoundRoundKeyword_4_0()); }
		(
			{ before(grammarAccess.getUnaryOperatorAccess().getRoundRoundKeyword_4_0()); }
			'round'
			{ after(grammarAccess.getUnaryOperatorAccess().getRoundRoundKeyword_4_0()); }
		)
		{ after(grammarAccess.getUnaryOperatorAccess().getRoundRoundKeyword_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Lower_boundAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRangeAccess().getLower_boundSubexpressionParserRuleCall_0_0()); }
		ruleSubexpression
		{ after(grammarAccess.getRangeAccess().getLower_boundSubexpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__SymAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRangeAccess().getSymRangeSymbolParserRuleCall_1_0()); }
		ruleRangeSymbol
		{ after(grammarAccess.getRangeAccess().getSymRangeSymbolParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Upper_boundAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRangeAccess().getUpper_boundSubexpressionParserRuleCall_2_0()); }
		ruleSubexpression
		{ after(grammarAccess.getRangeAccess().getUpper_boundSubexpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__PredAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionalExpressionAccess().getPredExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getConditionalExpressionAccess().getPredExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__TAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionalExpressionAccess().getTExpressionParserRuleCall_4_0()); }
		ruleExpression
		{ after(grammarAccess.getConditionalExpressionAccess().getTExpressionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__FAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionalExpressionAccess().getFExpressionParserRuleCall_6_0()); }
		ruleExpression
		{ after(grammarAccess.getConditionalExpressionAccess().getFExpressionParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Value_nameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getValue_nameValueNameParserRuleCall_0_0()); }
		ruleValueName
		{ after(grammarAccess.getValueAccess().getValue_nameValueNameParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__ConstantAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getConstantConstantParserRuleCall_1_0()); }
		ruleConstant
		{ after(grammarAccess.getValueAccess().getConstantConstantParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__TimeoutAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getTimeoutTimeoutKeyword_2_0()); }
		(
			{ before(grammarAccess.getValueAccess().getTimeoutTimeoutKeyword_2_0()); }
			'timeout'
			{ after(grammarAccess.getValueAccess().getTimeoutTimeoutKeyword_2_0()); }
		)
		{ after(grammarAccess.getValueAccess().getTimeoutTimeoutKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__NowAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getNowNowKeyword_3_0()); }
		(
			{ before(grammarAccess.getValueAccess().getNowNowKeyword_3_0()); }
			'now'
			{ after(grammarAccess.getValueAccess().getNowNowKeyword_3_0()); }
		)
		{ after(grammarAccess.getValueAccess().getNowNowKeyword_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__TopsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getTopsTopsKeyword_4_0()); }
		(
			{ before(grammarAccess.getValueAccess().getTopsTopsKeyword_4_0()); }
			'tops'
			{ after(grammarAccess.getValueAccess().getTopsTopsKeyword_4_0()); }
		)
		{ after(grammarAccess.getValueAccess().getTopsTopsKeyword_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Enum_valAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getEnum_valEnumerationValueParserRuleCall_5_0()); }
		ruleEnumerationValue
		{ after(grammarAccess.getValueAccess().getEnum_valEnumerationValueParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationValue__Enumeration_typeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumerationValueAccess().getEnumeration_typeTypeDeclarationCrossReference_0_0()); }
		(
			{ before(grammarAccess.getEnumerationValueAccess().getEnumeration_typeTypeDeclarationIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getEnumerationValueAccess().getEnumeration_typeTypeDeclarationIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getEnumerationValueAccess().getEnumeration_typeTypeDeclarationCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationValue__TickAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumerationValueAccess().getTickApostropheKeyword_1_0()); }
		(
			{ before(grammarAccess.getEnumerationValueAccess().getTickApostropheKeyword_1_0()); }
			'\''
			{ after(grammarAccess.getEnumerationValueAccess().getTickApostropheKeyword_1_0()); }
		)
		{ after(grammarAccess.getEnumerationValueAccess().getTickApostropheKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationValue__Enumeration_valueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumerationValueAccess().getEnumeration_valueIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getEnumerationValueAccess().getEnumeration_valueIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Numeric_constantAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantAccess().getNumeric_constantQuantityParserRuleCall_0_0()); }
		ruleQuantity
		{ after(grammarAccess.getConstantAccess().getNumeric_constantQuantityParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__String_literalAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantAccess().getString_literalSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getConstantAccess().getString_literalSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__TAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantAccess().getTTrueKeyword_2_0()); }
		(
			{ before(grammarAccess.getConstantAccess().getTTrueKeyword_2_0()); }
			'true'
			{ after(grammarAccess.getConstantAccess().getTTrueKeyword_2_0()); }
		)
		{ after(grammarAccess.getConstantAccess().getTTrueKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__FAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantAccess().getFFalseKeyword_3_0()); }
		(
			{ before(grammarAccess.getConstantAccess().getFFalseKeyword_3_0()); }
			'false'
			{ after(grammarAccess.getConstantAccess().getFFalseKeyword_3_0()); }
		)
		{ after(grammarAccess.getConstantAccess().getFFalseKeyword_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__NulAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantAccess().getNulNullKeyword_4_0()); }
		(
			{ before(grammarAccess.getConstantAccess().getNulNullKeyword_4_0()); }
			'null'
			{ after(grammarAccess.getConstantAccess().getNulNullKeyword_4_0()); }
		)
		{ after(grammarAccess.getConstantAccess().getNulNullKeyword_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__PropAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantAccess().getPropNonNumericPropertyParserRuleCall_5_0()); }
		ruleNonNumericProperty
		{ after(grammarAccess.getConstantAccess().getPropNonNumericPropertyParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NonNumericProperty__PropertyAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNonNumericPropertyAccess().getPropertyPropertyReferenceParserRuleCall_1_0_0()); }
		rulePropertyReference
		{ after(grammarAccess.getNonNumericPropertyAccess().getPropertyPropertyReferenceParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NonNumericProperty__PropertyConstantAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNonNumericPropertyAccess().getPropertyConstantPropertyConstantCrossReference_1_1_0()); }
		(
			{ before(grammarAccess.getNonNumericPropertyAccess().getPropertyConstantPropertyConstantQCLREFParserRuleCall_1_1_0_1()); }
			ruleQCLREF
			{ after(grammarAccess.getNonNumericPropertyAccess().getPropertyConstantPropertyConstantQCLREFParserRuleCall_1_1_0_1()); }
		)
		{ after(grammarAccess.getNonNumericPropertyAccess().getPropertyConstantPropertyConstantCrossReference_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NonNumericProperty__TyAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNonNumericPropertyAccess().getTyTypeParserRuleCall_3_0()); }
		ruleType
		{ after(grammarAccess.getNonNumericPropertyAccess().getTyTypeParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getVariableAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__TodAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getTodTypeOrReferenceParserRuleCall_2_0()); }
		ruleTypeOrReference
		{ after(grammarAccess.getVariableAccess().getTodTypeOrReferenceParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueName__IdAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueNameAccess().getIdNamedElementCrossReference_0_0()); }
		(
			{ before(grammarAccess.getValueNameAccess().getIdNamedElementIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getValueNameAccess().getIdNamedElementIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getValueNameAccess().getIdNamedElementCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueName__LpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueNameAccess().getLpLeftParenthesisKeyword_1_1_0()); }
		(
			{ before(grammarAccess.getValueNameAccess().getLpLeftParenthesisKeyword_1_1_0()); }
			'('
			{ after(grammarAccess.getValueNameAccess().getLpLeftParenthesisKeyword_1_1_0()); }
		)
		{ after(grammarAccess.getValueNameAccess().getLpLeftParenthesisKeyword_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueName__PrAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueNameAccess().getPrFunctionParametersParserRuleCall_1_2_0()); }
		ruleFunctionParameters
		{ after(grammarAccess.getValueNameAccess().getPrFunctionParametersParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueName__LbAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueNameAccess().getLbLeftSquareBracketKeyword_2_0_0()); }
		(
			{ before(grammarAccess.getValueNameAccess().getLbLeftSquareBracketKeyword_2_0_0()); }
			'['
			{ after(grammarAccess.getValueNameAccess().getLbLeftSquareBracketKeyword_2_0_0()); }
		)
		{ after(grammarAccess.getValueNameAccess().getLbLeftSquareBracketKeyword_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueName__Array_indexAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueNameAccess().getArray_indexIndexExpressionOrRangeParserRuleCall_2_1_0()); }
		ruleIndexExpressionOrRange
		{ after(grammarAccess.getValueNameAccess().getArray_indexIndexExpressionOrRangeParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueName__Array_indexAssignment_2_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueNameAccess().getArray_indexIndexExpressionOrRangeParserRuleCall_2_3_1_0()); }
		ruleIndexExpressionOrRange
		{ after(grammarAccess.getValueNameAccess().getArray_indexIndexExpressionOrRangeParserRuleCall_2_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueName__DotAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueNameAccess().getDotFullStopKeyword_3_0_0()); }
		(
			{ before(grammarAccess.getValueNameAccess().getDotFullStopKeyword_3_0_0()); }
			'.'
			{ after(grammarAccess.getValueNameAccess().getDotFullStopKeyword_3_0_0()); }
		)
		{ after(grammarAccess.getValueNameAccess().getDotFullStopKeyword_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueName__PnAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueNameAccess().getPnPartialNameParserRuleCall_3_1_0()); }
		rulePartialName
		{ after(grammarAccess.getValueNameAccess().getPnPartialNameParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueName__PnAssignment_3_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueNameAccess().getPnPartialNameParserRuleCall_3_2_1_0()); }
		rulePartialName
		{ after(grammarAccess.getValueNameAccess().getPnPartialNameParserRuleCall_3_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueName__QAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueNameAccess().getQQuestionMarkKeyword_4_0_0()); }
		(
			{ before(grammarAccess.getValueNameAccess().getQQuestionMarkKeyword_4_0_0()); }
			'?'
			{ after(grammarAccess.getValueNameAccess().getQQuestionMarkKeyword_4_0_0()); }
		)
		{ after(grammarAccess.getValueNameAccess().getQQuestionMarkKeyword_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueName__FreshAssignment_4_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueNameAccess().getFreshFreshKeyword_4_1_1_0()); }
		(
			{ before(grammarAccess.getValueNameAccess().getFreshFreshKeyword_4_1_1_0()); }
			'fresh'
			{ after(grammarAccess.getValueNameAccess().getFreshFreshKeyword_4_1_1_0()); }
		)
		{ after(grammarAccess.getValueNameAccess().getFreshFreshKeyword_4_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueName__CountAssignment_4_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueNameAccess().getCountCountKeyword_4_2_1_0()); }
		(
			{ before(grammarAccess.getValueNameAccess().getCountCountKeyword_4_2_1_0()); }
			'count'
			{ after(grammarAccess.getValueNameAccess().getCountCountKeyword_4_2_1_0()); }
		)
		{ after(grammarAccess.getValueNameAccess().getCountCountKeyword_4_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueName__UpdatedAssignment_4_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueNameAccess().getUpdatedUpdatedKeyword_4_3_1_0()); }
		(
			{ before(grammarAccess.getValueNameAccess().getUpdatedUpdatedKeyword_4_3_1_0()); }
			'updated'
			{ after(grammarAccess.getValueNameAccess().getUpdatedUpdatedKeyword_4_3_1_0()); }
		)
		{ after(grammarAccess.getValueNameAccess().getUpdatedUpdatedKeyword_4_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PartialName__Record_idAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPartialNameAccess().getRecord_idIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getPartialNameAccess().getRecord_idIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PartialName__LbAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPartialNameAccess().getLbLeftSquareBracketKeyword_1_0_0()); }
		(
			{ before(grammarAccess.getPartialNameAccess().getLbLeftSquareBracketKeyword_1_0_0()); }
			'['
			{ after(grammarAccess.getPartialNameAccess().getLbLeftSquareBracketKeyword_1_0_0()); }
		)
		{ after(grammarAccess.getPartialNameAccess().getLbLeftSquareBracketKeyword_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PartialName__Array_indexAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPartialNameAccess().getArray_indexIndexExpressionOrRangeParserRuleCall_1_1_0()); }
		ruleIndexExpressionOrRange
		{ after(grammarAccess.getPartialNameAccess().getArray_indexIndexExpressionOrRangeParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PartialName__Array_indexAssignment_1_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPartialNameAccess().getArray_indexIndexExpressionOrRangeParserRuleCall_1_3_1_0()); }
		ruleIndexExpressionOrRange
		{ after(grammarAccess.getPartialNameAccess().getArray_indexIndexExpressionOrRangeParserRuleCall_1_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexExpressionOrRange__Left_hand_sideAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIndexExpressionOrRangeAccess().getLeft_hand_sideIndexExpressionParserRuleCall_0_0()); }
		ruleIndexExpression
		{ after(grammarAccess.getIndexExpressionOrRangeAccess().getLeft_hand_sideIndexExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexExpressionOrRange__DdAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIndexExpressionOrRangeAccess().getDdDOTDOTTerminalRuleCall_1_0_0()); }
		RULE_DOTDOT
		{ after(grammarAccess.getIndexExpressionOrRangeAccess().getDdDOTDOTTerminalRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexExpressionOrRange__Right_hand_sideAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIndexExpressionOrRangeAccess().getRight_hand_sideIndexExpressionParserRuleCall_1_1_0()); }
		ruleIndexExpression
		{ after(grammarAccess.getIndexExpressionOrRangeAccess().getRight_hand_sideIndexExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PeriodShift__Unary_minusAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPeriodShiftAccess().getUnary_minusHyphenMinusKeyword_0_0()); }
		(
			{ before(grammarAccess.getPeriodShiftAccess().getUnary_minusHyphenMinusKeyword_0_0()); }
			'-'
			{ after(grammarAccess.getPeriodShiftAccess().getUnary_minusHyphenMinusKeyword_0_0()); }
		)
		{ after(grammarAccess.getPeriodShiftAccess().getUnary_minusHyphenMinusKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PeriodShift__VAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPeriodShiftAccess().getVValueParserRuleCall_1_0_0()); }
		ruleValue
		{ after(grammarAccess.getPeriodShiftAccess().getVValueParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PeriodShift__Index_expressionAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPeriodShiftAccess().getIndex_expressionIndexExpressionParserRuleCall_1_1_1_0()); }
		ruleIndexExpression
		{ after(grammarAccess.getPeriodShiftAccess().getIndex_expressionIndexExpressionParserRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexExpression__LAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIndexExpressionAccess().getLPeriodShiftParserRuleCall_0_0()); }
		rulePeriodShift
		{ after(grammarAccess.getIndexExpressionAccess().getLPeriodShiftParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexExpression__SymAssignment_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIndexExpressionAccess().getSymHyphenMinusKeyword_1_0_0_0()); }
		(
			{ before(grammarAccess.getIndexExpressionAccess().getSymHyphenMinusKeyword_1_0_0_0()); }
			'-'
			{ after(grammarAccess.getIndexExpressionAccess().getSymHyphenMinusKeyword_1_0_0_0()); }
		)
		{ after(grammarAccess.getIndexExpressionAccess().getSymHyphenMinusKeyword_1_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexExpression__RAssignment_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIndexExpressionAccess().getRPeriodShiftParserRuleCall_1_0_1_0()); }
		rulePeriodShift
		{ after(grammarAccess.getIndexExpressionAccess().getRPeriodShiftParserRuleCall_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexExpression__SymAssignment_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIndexExpressionAccess().getSymDivKeyword_1_1_0_0()); }
		(
			{ before(grammarAccess.getIndexExpressionAccess().getSymDivKeyword_1_1_0_0()); }
			'div'
			{ after(grammarAccess.getIndexExpressionAccess().getSymDivKeyword_1_1_0_0()); }
		)
		{ after(grammarAccess.getIndexExpressionAccess().getSymDivKeyword_1_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexExpression__RAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIndexExpressionAccess().getRPeriodShiftParserRuleCall_1_1_1_0()); }
		rulePeriodShift
		{ after(grammarAccess.getIndexExpressionAccess().getRPeriodShiftParserRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexExpression__SymAssignment_1_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIndexExpressionAccess().getSymModKeyword_1_2_0_0()); }
		(
			{ before(grammarAccess.getIndexExpressionAccess().getSymModKeyword_1_2_0_0()); }
			'mod'
			{ after(grammarAccess.getIndexExpressionAccess().getSymModKeyword_1_2_0_0()); }
		)
		{ after(grammarAccess.getIndexExpressionAccess().getSymModKeyword_1_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexExpression__RAssignment_1_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIndexExpressionAccess().getRPeriodShiftParserRuleCall_1_2_1_0()); }
		rulePeriodShift
		{ after(grammarAccess.getIndexExpressionAccess().getRPeriodShiftParserRuleCall_1_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexExpression__SymAssignment_1_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIndexExpressionAccess().getSymPlusSignKeyword_1_3_0_0()); }
		(
			{ before(grammarAccess.getIndexExpressionAccess().getSymPlusSignKeyword_1_3_0_0()); }
			'+'
			{ after(grammarAccess.getIndexExpressionAccess().getSymPlusSignKeyword_1_3_0_0()); }
		)
		{ after(grammarAccess.getIndexExpressionAccess().getSymPlusSignKeyword_1_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexExpression__RAssignment_1_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIndexExpressionAccess().getRPeriodShiftParserRuleCall_1_3_1_0()); }
		rulePeriodShift
		{ after(grammarAccess.getIndexExpressionAccess().getRPeriodShiftParserRuleCall_1_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexExpression__RAssignment_1_3_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIndexExpressionAccess().getRPeriodShiftParserRuleCall_1_3_2_1_0()); }
		rulePeriodShift
		{ after(grammarAccess.getIndexExpressionAccess().getRPeriodShiftParserRuleCall_1_3_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexExpression__SymAssignment_1_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIndexExpressionAccess().getSymTIMESParserRuleCall_1_4_0_0()); }
		ruleTIMES
		{ after(grammarAccess.getIndexExpressionAccess().getSymTIMESParserRuleCall_1_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexExpression__RAssignment_1_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIndexExpressionAccess().getRPeriodShiftParserRuleCall_1_4_1_0()); }
		rulePeriodShift
		{ after(grammarAccess.getIndexExpressionAccess().getRPeriodShiftParserRuleCall_1_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexExpression__RAssignment_1_4_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIndexExpressionAccess().getRPeriodShiftParserRuleCall_1_4_2_1_0()); }
		rulePeriodShift
		{ after(grammarAccess.getIndexExpressionAccess().getRPeriodShiftParserRuleCall_1_4_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseExpression__CcAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCaseExpressionAccess().getCcCaseChoiceParserRuleCall_1_0()); }
		ruleCaseChoice
		{ after(grammarAccess.getCaseExpressionAccess().getCcCaseChoiceParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseChoice__BeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCaseChoiceAccess().getBeBooleanExpressionParserRuleCall_1_0()); }
		ruleBooleanExpression
		{ after(grammarAccess.getCaseChoiceAccess().getBeBooleanExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseChoice__ExpAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCaseChoiceAccess().getExpExpressionParserRuleCall_3_0()); }
		ruleExpression
		{ after(grammarAccess.getCaseChoiceAccess().getExpExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicVariables__LvAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicVariablesAccess().getLvVariableParserRuleCall_0_0()); }
		ruleVariable
		{ after(grammarAccess.getLogicVariablesAccess().getLvVariableParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicVariables__LvAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogicVariablesAccess().getLvVariableParserRuleCall_1_1_0()); }
		ruleVariable
		{ after(grammarAccess.getLogicVariablesAccess().getLvVariableParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SumQuantification__VariablesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSumQuantificationAccess().getVariablesLogicVariablesParserRuleCall_1_0()); }
		ruleLogicVariables
		{ after(grammarAccess.getSumQuantificationAccess().getVariablesLogicVariablesParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SumQuantification__InAssignment_2_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSumQuantificationAccess().getInInKeyword_2_0_0_0()); }
		(
			{ before(grammarAccess.getSumQuantificationAccess().getInInKeyword_2_0_0_0()); }
			'in'
			{ after(grammarAccess.getSumQuantificationAccess().getInInKeyword_2_0_0_0()); }
		)
		{ after(grammarAccess.getSumQuantificationAccess().getInInKeyword_2_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SumQuantification__RangeAssignment_2_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSumQuantificationAccess().getRangeRangeParserRuleCall_2_0_1_0()); }
		ruleRange
		{ after(grammarAccess.getSumQuantificationAccess().getRangeRangeParserRuleCall_2_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SumQuantification__WhichAssignment_2_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSumQuantificationAccess().getWhichWhichKeyword_2_1_0_0()); }
		(
			{ before(grammarAccess.getSumQuantificationAccess().getWhichWhichKeyword_2_1_0_0()); }
			'which'
			{ after(grammarAccess.getSumQuantificationAccess().getWhichWhichKeyword_2_1_0_0()); }
		)
		{ after(grammarAccess.getSumQuantificationAccess().getWhichWhichKeyword_2_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SumQuantification__ConditionAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSumQuantificationAccess().getConditionPredicateParserRuleCall_2_1_1_0()); }
		rulePredicate
		{ after(grammarAccess.getSumQuantificationAccess().getConditionPredicateParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SumQuantification__Numeric_expressionAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSumQuantificationAccess().getNumeric_expressionNumericExpressionParserRuleCall_4_0()); }
		ruleNumericExpression
		{ after(grammarAccess.getSumQuantificationAccess().getNumeric_expressionNumericExpressionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProductQuantification__VariablesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProductQuantificationAccess().getVariablesLogicVariablesParserRuleCall_1_0()); }
		ruleLogicVariables
		{ after(grammarAccess.getProductQuantificationAccess().getVariablesLogicVariablesParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProductQuantification__InAssignment_2_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProductQuantificationAccess().getInInKeyword_2_0_0_0()); }
		(
			{ before(grammarAccess.getProductQuantificationAccess().getInInKeyword_2_0_0_0()); }
			'in'
			{ after(grammarAccess.getProductQuantificationAccess().getInInKeyword_2_0_0_0()); }
		)
		{ after(grammarAccess.getProductQuantificationAccess().getInInKeyword_2_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProductQuantification__RangeAssignment_2_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProductQuantificationAccess().getRangeRangeParserRuleCall_2_0_1_0()); }
		ruleRange
		{ after(grammarAccess.getProductQuantificationAccess().getRangeRangeParserRuleCall_2_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProductQuantification__WhichAssignment_2_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProductQuantificationAccess().getWhichWhichKeyword_2_1_0_0()); }
		(
			{ before(grammarAccess.getProductQuantificationAccess().getWhichWhichKeyword_2_1_0_0()); }
			'which'
			{ after(grammarAccess.getProductQuantificationAccess().getWhichWhichKeyword_2_1_0_0()); }
		)
		{ after(grammarAccess.getProductQuantificationAccess().getWhichWhichKeyword_2_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProductQuantification__ConditionAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProductQuantificationAccess().getConditionPredicateParserRuleCall_2_1_1_0()); }
		rulePredicate
		{ after(grammarAccess.getProductQuantificationAccess().getConditionPredicateParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProductQuantification__Numeric_expressionAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProductQuantificationAccess().getNumeric_expressionNumericExpressionParserRuleCall_4_0()); }
		ruleNumericExpression
		{ after(grammarAccess.getProductQuantificationAccess().getNumeric_expressionNumericExpressionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CountingQuantification__VariablesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCountingQuantificationAccess().getVariablesLogicVariablesParserRuleCall_1_0()); }
		ruleLogicVariables
		{ after(grammarAccess.getCountingQuantificationAccess().getVariablesLogicVariablesParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CountingQuantification__InAssignment_2_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCountingQuantificationAccess().getInInKeyword_2_0_0_0()); }
		(
			{ before(grammarAccess.getCountingQuantificationAccess().getInInKeyword_2_0_0_0()); }
			'in'
			{ after(grammarAccess.getCountingQuantificationAccess().getInInKeyword_2_0_0_0()); }
		)
		{ after(grammarAccess.getCountingQuantificationAccess().getInInKeyword_2_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CountingQuantification__RangeAssignment_2_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCountingQuantificationAccess().getRangeRangeParserRuleCall_2_0_1_0()); }
		ruleRange
		{ after(grammarAccess.getCountingQuantificationAccess().getRangeRangeParserRuleCall_2_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CountingQuantification__WhichAssignment_2_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCountingQuantificationAccess().getWhichWhichKeyword_2_1_0_0()); }
		(
			{ before(grammarAccess.getCountingQuantificationAccess().getWhichWhichKeyword_2_1_0_0()); }
			'which'
			{ after(grammarAccess.getCountingQuantificationAccess().getWhichWhichKeyword_2_1_0_0()); }
		)
		{ after(grammarAccess.getCountingQuantificationAccess().getWhichWhichKeyword_2_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CountingQuantification__ConditionAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCountingQuantificationAccess().getConditionPredicateParserRuleCall_2_1_1_0()); }
		rulePredicate
		{ after(grammarAccess.getCountingQuantificationAccess().getConditionPredicateParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CountingQuantification__CountedAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCountingQuantificationAccess().getCountedPredicateParserRuleCall_4_0()); }
		rulePredicate
		{ after(grammarAccess.getCountingQuantificationAccess().getCountedPredicateParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UniversalQuantification__VariablesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUniversalQuantificationAccess().getVariablesLogicVariablesParserRuleCall_1_0()); }
		ruleLogicVariables
		{ after(grammarAccess.getUniversalQuantificationAccess().getVariablesLogicVariablesParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UniversalQuantification__InAssignment_2_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUniversalQuantificationAccess().getInInKeyword_2_0_0_0()); }
		(
			{ before(grammarAccess.getUniversalQuantificationAccess().getInInKeyword_2_0_0_0()); }
			'in'
			{ after(grammarAccess.getUniversalQuantificationAccess().getInInKeyword_2_0_0_0()); }
		)
		{ after(grammarAccess.getUniversalQuantificationAccess().getInInKeyword_2_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UniversalQuantification__RangeAssignment_2_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUniversalQuantificationAccess().getRangeRangeParserRuleCall_2_0_1_0()); }
		ruleRange
		{ after(grammarAccess.getUniversalQuantificationAccess().getRangeRangeParserRuleCall_2_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UniversalQuantification__WhichAssignment_2_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUniversalQuantificationAccess().getWhichWhichKeyword_2_1_0_0()); }
		(
			{ before(grammarAccess.getUniversalQuantificationAccess().getWhichWhichKeyword_2_1_0_0()); }
			'which'
			{ after(grammarAccess.getUniversalQuantificationAccess().getWhichWhichKeyword_2_1_0_0()); }
		)
		{ after(grammarAccess.getUniversalQuantificationAccess().getWhichWhichKeyword_2_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UniversalQuantification__ConditionAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUniversalQuantificationAccess().getConditionPredicateParserRuleCall_2_1_1_0()); }
		rulePredicate
		{ after(grammarAccess.getUniversalQuantificationAccess().getConditionPredicateParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UniversalQuantification__PredicateAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUniversalQuantificationAccess().getPredicatePredicateParserRuleCall_4_0()); }
		rulePredicate
		{ after(grammarAccess.getUniversalQuantificationAccess().getPredicatePredicateParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistentialQuantification__VariablesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExistentialQuantificationAccess().getVariablesLogicVariablesParserRuleCall_1_0()); }
		ruleLogicVariables
		{ after(grammarAccess.getExistentialQuantificationAccess().getVariablesLogicVariablesParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistentialQuantification__InAssignment_2_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExistentialQuantificationAccess().getInInKeyword_2_0_0_0()); }
		(
			{ before(grammarAccess.getExistentialQuantificationAccess().getInInKeyword_2_0_0_0()); }
			'in'
			{ after(grammarAccess.getExistentialQuantificationAccess().getInInKeyword_2_0_0_0()); }
		)
		{ after(grammarAccess.getExistentialQuantificationAccess().getInInKeyword_2_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistentialQuantification__RangeAssignment_2_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExistentialQuantificationAccess().getRangeRangeParserRuleCall_2_0_1_0()); }
		ruleRange
		{ after(grammarAccess.getExistentialQuantificationAccess().getRangeRangeParserRuleCall_2_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistentialQuantification__WhichAssignment_2_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExistentialQuantificationAccess().getWhichWhichKeyword_2_1_0_0()); }
		(
			{ before(grammarAccess.getExistentialQuantificationAccess().getWhichWhichKeyword_2_1_0_0()); }
			'which'
			{ after(grammarAccess.getExistentialQuantificationAccess().getWhichWhichKeyword_2_1_0_0()); }
		)
		{ after(grammarAccess.getExistentialQuantificationAccess().getWhichWhichKeyword_2_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistentialQuantification__ConditionAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExistentialQuantificationAccess().getConditionPredicateParserRuleCall_2_1_1_0()); }
		rulePredicate
		{ after(grammarAccess.getExistentialQuantificationAccess().getConditionPredicateParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistentialQuantification__PredicateAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExistentialQuantificationAccess().getPredicatePredicateParserRuleCall_4_0()); }
		rulePredicate
		{ after(grammarAccess.getExistentialQuantificationAccess().getPredicatePredicateParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordTerm__Record_typeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRecordTermAccess().getRecord_typeTypeDeclarationCrossReference_1_0()); }
		(
			{ before(grammarAccess.getRecordTermAccess().getRecord_typeTypeDeclarationIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getRecordTermAccess().getRecord_typeTypeDeclarationIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getRecordTermAccess().getRecord_typeTypeDeclarationCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordTerm__Record_valueAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRecordTermAccess().getRecord_valueRecordValueParserRuleCall_3_0()); }
		ruleRecordValue
		{ after(grammarAccess.getRecordTermAccess().getRecord_valueRecordValueParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordValue__LabelAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRecordValueAccess().getLabelIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getRecordValueAccess().getLabelIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordValue__AvalAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRecordValueAccess().getAvalValueParserRuleCall_2_0()); }
		ruleValue
		{ after(grammarAccess.getRecordValueAccess().getAvalValueParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Invocation__LabelAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInvocationAccess().getLabelNamedAssertionCrossReference_0_0()); }
		(
			{ before(grammarAccess.getInvocationAccess().getLabelNamedAssertionIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getInvocationAccess().getLabelNamedAssertionIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getInvocationAccess().getLabelNamedAssertionCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Invocation__ParamsAssignment_2_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInvocationAccess().getParamsActualParameterParserRuleCall_2_0_0_0()); }
		ruleActualParameter
		{ after(grammarAccess.getInvocationAccess().getParamsActualParameterParserRuleCall_2_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Invocation__ParamsAssignment_2_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInvocationAccess().getParamsActualParameterParserRuleCall_2_0_1_1_0()); }
		ruleActualParameter
		{ after(grammarAccess.getInvocationAccess().getParamsActualParameterParserRuleCall_2_0_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Invocation__Actual_parameterAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInvocationAccess().getActual_parameterNumericExpressionParserRuleCall_2_1_0()); }
		ruleNumericExpression
		{ after(grammarAccess.getInvocationAccess().getActual_parameterNumericExpressionParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActualParameter__FormalAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActualParameterAccess().getFormalIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getActualParameterAccess().getFormalIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActualParameter__ActualAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActualParameterAccess().getActualExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getActualParameterAccess().getActualExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableList__FirstAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableListAccess().getFirstVariableParserRuleCall_0_0()); }
		ruleVariable
		{ after(grammarAccess.getVariableListAccess().getFirstVariableParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableList__CommaAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableListAccess().getCommaCommaKeyword_1_0_0()); }
		(
			{ before(grammarAccess.getVariableListAccess().getCommaCommaKeyword_1_0_0()); }
			','
			{ after(grammarAccess.getVariableListAccess().getCommaCommaKeyword_1_0_0()); }
		)
		{ after(grammarAccess.getVariableListAccess().getCommaCommaKeyword_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableList__ParameterAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableListAccess().getParameterVariableParserRuleCall_1_1_0()); }
		ruleVariable
		{ after(grammarAccess.getVariableListAccess().getParameterVariableParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableList__ParameterAssignment_1_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableListAccess().getParameterVariableParserRuleCall_1_2_1_0()); }
		ruleVariable
		{ after(grammarAccess.getVariableListAccess().getParameterVariableParserRuleCall_1_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssertionFunctionValue__CexpAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssertionFunctionValueAccess().getCexpConditionalAssertionFunctionParserRuleCall_0_0()); }
		ruleConditionalAssertionFunction
		{ after(grammarAccess.getAssertionFunctionValueAccess().getCexpConditionalAssertionFunctionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssertionFunctionValue__PexpAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssertionFunctionValueAccess().getPexpAssertionNumericExpressionParserRuleCall_1_0()); }
		ruleAssertionNumericExpression
		{ after(grammarAccess.getAssertionFunctionValueAccess().getPexpAssertionNumericExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalAssertionFunction__CvpAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionalAssertionFunctionAccess().getCvpConditionValuePairParserRuleCall_1_0()); }
		ruleConditionValuePair
		{ after(grammarAccess.getConditionalAssertionFunctionAccess().getCvpConditionValuePairParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalAssertionFunction__CvpAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionalAssertionFunctionAccess().getCvpConditionValuePairParserRuleCall_2_1_0()); }
		ruleConditionValuePair
		{ after(grammarAccess.getConditionalAssertionFunctionAccess().getCvpConditionValuePairParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionValuePair__ConditionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionValuePairAccess().getConditionPredicateParserRuleCall_1_0()); }
		rulePredicate
		{ after(grammarAccess.getConditionValuePairAccess().getConditionPredicateParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionValuePair__ExpressionAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionValuePairAccess().getExpressionAssertionNumericExpressionParserRuleCall_3_0()); }
		ruleAssertionNumericExpression
		{ after(grammarAccess.getConditionValuePairAccess().getExpressionAssertionNumericExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssertionEnumeration__PredAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssertionEnumerationAccess().getPredInvocationParserRuleCall_0_0()); }
		ruleInvocation
		{ after(grammarAccess.getAssertionEnumerationAccess().getPredInvocationParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssertionEnumeration__PairAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssertionEnumerationAccess().getPairEnumerationPairParserRuleCall_1_0_0()); }
		ruleEnumerationPair
		{ after(grammarAccess.getAssertionEnumerationAccess().getPairEnumerationPairParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssertionEnumeration__PairAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssertionEnumerationAccess().getPairEnumerationPairParserRuleCall_1_1_1_0()); }
		ruleEnumerationPair
		{ after(grammarAccess.getAssertionEnumerationAccess().getPairEnumerationPairParserRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationPair__Enumeration_literalAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumerationPairAccess().getEnumeration_literalIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getEnumerationPairAccess().getEnumeration_literalIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationPair__PredicateAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumerationPairAccess().getPredicatePredicateParserRuleCall_2_0()); }
		rulePredicate
		{ after(grammarAccess.getEnumerationPairAccess().getPredicatePredicateParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLibrary__DecsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeLibraryAccess().getDecsTypeDeclarationParserRuleCall_0()); }
		ruleTypeDeclaration
		{ after(grammarAccess.getTypeLibraryAccess().getDecsTypeDeclarationParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDeclaration__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getTypeDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDeclaration__TypeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeDeclarationAccess().getTypeTypeParserRuleCall_3_0()); }
		ruleType
		{ after(grammarAccess.getTypeDeclarationAccess().getTypeTypeParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeOrReference__TyAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeOrReferenceAccess().getTyTypeParserRuleCall_0_0()); }
		ruleType
		{ after(grammarAccess.getTypeOrReferenceAccess().getTyTypeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeOrReference__RefAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeOrReferenceAccess().getRefTypeDeclarationCrossReference_1_0()); }
		(
			{ before(grammarAccess.getTypeOrReferenceAccess().getRefTypeDeclarationIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getTypeOrReferenceAccess().getRefTypeDeclarationIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getTypeOrReferenceAccess().getRefTypeDeclarationCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanType__BAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanTypeAccess().getBBooleanKeyword_0()); }
		(
			{ before(grammarAccess.getBooleanTypeAccess().getBBooleanKeyword_0()); }
			'boolean'
			{ after(grammarAccess.getBooleanTypeAccess().getBBooleanKeyword_0()); }
		)
		{ after(grammarAccess.getBooleanTypeAccess().getBBooleanKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringType__SAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringTypeAccess().getSStringKeyword_0()); }
		(
			{ before(grammarAccess.getStringTypeAccess().getSStringKeyword_0()); }
			'string'
			{ after(grammarAccess.getStringTypeAccess().getSStringKeyword_0()); }
		)
		{ after(grammarAccess.getStringTypeAccess().getSStringKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NullType__NAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNullTypeAccess().getNNullKeyword_0()); }
		(
			{ before(grammarAccess.getNullTypeAccess().getNNullKeyword_0()); }
			'null'
			{ after(grammarAccess.getNullTypeAccess().getNNullKeyword_0()); }
		)
		{ after(grammarAccess.getNullTypeAccess().getNNullKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationType__Defining_enumeration_literalAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumerationTypeAccess().getDefining_enumeration_literalIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getEnumerationTypeAccess().getDefining_enumeration_literalIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuantityType__UnitAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQuantityTypeAccess().getUnitUnitNameCrossReference_1_0_0()); }
		(
			{ before(grammarAccess.getQuantityTypeAccess().getUnitUnitNameIDTerminalRuleCall_1_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getQuantityTypeAccess().getUnitUnitNameIDTerminalRuleCall_1_0_0_1()); }
		)
		{ after(grammarAccess.getQuantityTypeAccess().getUnitUnitNameCrossReference_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuantityType__ScalarAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQuantityTypeAccess().getScalarScalarKeyword_1_1_0()); }
		(
			{ before(grammarAccess.getQuantityTypeAccess().getScalarScalarKeyword_1_1_0()); }
			'scalar'
			{ after(grammarAccess.getQuantityTypeAccess().getScalarScalarKeyword_1_1_0()); }
		)
		{ after(grammarAccess.getQuantityTypeAccess().getScalarScalarKeyword_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuantityType__WholeAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQuantityTypeAccess().getWholeWholeKeyword_1_2_0()); }
		(
			{ before(grammarAccess.getQuantityTypeAccess().getWholeWholeKeyword_1_2_0()); }
			'whole'
			{ after(grammarAccess.getQuantityTypeAccess().getWholeWholeKeyword_1_2_0()); }
		)
		{ after(grammarAccess.getQuantityTypeAccess().getWholeWholeKeyword_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuantityType__LbAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQuantityTypeAccess().getLbANumberParserRuleCall_2_1_0()); }
		ruleANumber
		{ after(grammarAccess.getQuantityTypeAccess().getLbANumberParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuantityType__UbAssignment_2_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQuantityTypeAccess().getUbANumberParserRuleCall_2_3_0()); }
		ruleANumber
		{ after(grammarAccess.getQuantityTypeAccess().getUbANumberParserRuleCall_2_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuantityType__StepAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQuantityTypeAccess().getStepANumberParserRuleCall_3_1_0()); }
		ruleANumber
		{ after(grammarAccess.getQuantityTypeAccess().getStepANumberParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QuantityType__RepresentationAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQuantityTypeAccess().getRepresentationPropertyConstantCrossReference_4_1_0()); }
		(
			{ before(grammarAccess.getQuantityTypeAccess().getRepresentationPropertyConstantQCLREFParserRuleCall_4_1_0_1()); }
			ruleQCLREF
			{ after(grammarAccess.getQuantityTypeAccess().getRepresentationPropertyConstantQCLREFParserRuleCall_4_1_0_1()); }
		)
		{ after(grammarAccess.getQuantityTypeAccess().getRepresentationPropertyConstantCrossReference_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ANumber__LitAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getANumberAccess().getLitNUMBERTerminalRuleCall_0_0()); }
		RULE_NUMBER
		{ after(grammarAccess.getANumberAccess().getLitNUMBERTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ANumber__PropertyAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getANumberAccess().getPropertyPropertyReferenceParserRuleCall_1_0()); }
		rulePropertyReference
		{ after(grammarAccess.getANumberAccess().getPropertyPropertyReferenceParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ANumber__PropertyConstantAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getANumberAccess().getPropertyConstantPropertyConstantCrossReference_2_0()); }
		(
			{ before(grammarAccess.getANumberAccess().getPropertyConstantPropertyConstantQCLREFParserRuleCall_2_0_1()); }
			ruleQCLREF
			{ after(grammarAccess.getANumberAccess().getPropertyConstantPropertyConstantQCLREFParserRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getANumberAccess().getPropertyConstantPropertyConstantCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__Array_rangesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayTypeAccess().getArray_rangesArrayRangeListParserRuleCall_2_0()); }
		ruleArrayRangeList
		{ after(grammarAccess.getArrayTypeAccess().getArray_rangesArrayRangeListParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayType__TypAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayTypeAccess().getTypTypeOrReferenceParserRuleCall_5_0()); }
		ruleTypeOrReference
		{ after(grammarAccess.getArrayTypeAccess().getTypTypeOrReferenceParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayRangeList__RangeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayRangeListAccess().getRangeArrayRangeParserRuleCall_0_0()); }
		ruleArrayRange
		{ after(grammarAccess.getArrayRangeListAccess().getRangeArrayRangeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayRangeList__CommaAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayRangeListAccess().getCommaCommaKeyword_1_0_0()); }
		(
			{ before(grammarAccess.getArrayRangeListAccess().getCommaCommaKeyword_1_0_0()); }
			','
			{ after(grammarAccess.getArrayRangeListAccess().getCommaCommaKeyword_1_0_0()); }
		)
		{ after(grammarAccess.getArrayRangeListAccess().getCommaCommaKeyword_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayRangeList__RangeAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayRangeListAccess().getRangeArrayRangeParserRuleCall_1_1_0()); }
		ruleArrayRange
		{ after(grammarAccess.getArrayRangeListAccess().getRangeArrayRangeParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayRangeList__RangeAssignment_1_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayRangeListAccess().getRangeArrayRangeParserRuleCall_1_2_1_0()); }
		ruleArrayRange
		{ after(grammarAccess.getArrayRangeListAccess().getRangeArrayRangeParserRuleCall_1_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayRange__LbAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayRangeAccess().getLbANumberParserRuleCall_0_0()); }
		ruleANumber
		{ after(grammarAccess.getArrayRangeAccess().getLbANumberParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayRange__UbAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayRangeAccess().getUbANumberParserRuleCall_1_1_0()); }
		ruleANumber
		{ after(grammarAccess.getArrayRangeAccess().getUbANumberParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordType__RecordAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRecordTypeAccess().getRecordRecordKeyword_0_0_0()); }
		(
			{ before(grammarAccess.getRecordTypeAccess().getRecordRecordKeyword_0_0_0()); }
			'record'
			{ after(grammarAccess.getRecordTypeAccess().getRecordRecordKeyword_0_0_0()); }
		)
		{ after(grammarAccess.getRecordTypeAccess().getRecordRecordKeyword_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordType__VariantAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRecordTypeAccess().getVariantVariantKeyword_0_1_0()); }
		(
			{ before(grammarAccess.getRecordTypeAccess().getVariantVariantKeyword_0_1_0()); }
			'variant'
			{ after(grammarAccess.getRecordTypeAccess().getVariantVariantKeyword_0_1_0()); }
		)
		{ after(grammarAccess.getRecordTypeAccess().getVariantVariantKeyword_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordType__VariantAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRecordTypeAccess().getVariantUnionKeyword_0_2_0()); }
		(
			{ before(grammarAccess.getRecordTypeAccess().getVariantUnionKeyword_0_2_0()); }
			'union'
			{ after(grammarAccess.getRecordTypeAccess().getVariantUnionKeyword_0_2_0()); }
		)
		{ after(grammarAccess.getRecordTypeAccess().getVariantUnionKeyword_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordType__FieldsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRecordTypeAccess().getFieldsRecordFieldParserRuleCall_2_0()); }
		ruleRecordField
		{ after(grammarAccess.getRecordTypeAccess().getFieldsRecordFieldParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordField__LabelAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRecordFieldAccess().getLabelIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getRecordFieldAccess().getLabelIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordField__TypAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRecordFieldAccess().getTypTypeOrReferenceParserRuleCall_2_0()); }
		ruleTypeOrReference
		{ after(grammarAccess.getRecordFieldAccess().getTypTypeOrReferenceParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyReference__PnameAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyReferenceAccess().getPnamePropertyCrossReference_0_1_0()); }
		(
			{ before(grammarAccess.getPropertyReferenceAccess().getPnamePropertyQCLREFParserRuleCall_0_1_0_1()); }
			ruleQCLREF
			{ after(grammarAccess.getPropertyReferenceAccess().getPnamePropertyQCLREFParserRuleCall_0_1_0_1()); }
		)
		{ after(grammarAccess.getPropertyReferenceAccess().getPnamePropertyCrossReference_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyReference__FieldAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyReferenceAccess().getFieldPropertyFieldParserRuleCall_0_2_0()); }
		rulePropertyField
		{ after(grammarAccess.getPropertyReferenceAccess().getFieldPropertyFieldParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyReference__SelfAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyReferenceAccess().getSelfSelfKeyword_1_0_0()); }
		(
			{ before(grammarAccess.getPropertyReferenceAccess().getSelfSelfKeyword_1_0_0()); }
			'self'
			{ after(grammarAccess.getPropertyReferenceAccess().getSelfSelfKeyword_1_0_0()); }
		)
		{ after(grammarAccess.getPropertyReferenceAccess().getSelfSelfKeyword_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyReference__SpnameAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyReferenceAccess().getSpnamePropertyCrossReference_1_2_0()); }
		(
			{ before(grammarAccess.getPropertyReferenceAccess().getSpnamePropertyQCLREFParserRuleCall_1_2_0_1()); }
			ruleQCLREF
			{ after(grammarAccess.getPropertyReferenceAccess().getSpnamePropertyQCLREFParserRuleCall_1_2_0_1()); }
		)
		{ after(grammarAccess.getPropertyReferenceAccess().getSpnamePropertyCrossReference_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyReference__FieldAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyReferenceAccess().getFieldPropertyFieldParserRuleCall_1_3_0()); }
		rulePropertyField
		{ after(grammarAccess.getPropertyReferenceAccess().getFieldPropertyFieldParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyReference__ComponentAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyReferenceAccess().getComponentComponentClassifierCrossReference_2_0_0()); }
		(
			{ before(grammarAccess.getPropertyReferenceAccess().getComponentComponentClassifierQCREFParserRuleCall_2_0_0_1()); }
			ruleQCREF
			{ after(grammarAccess.getPropertyReferenceAccess().getComponentComponentClassifierQCREFParserRuleCall_2_0_0_1()); }
		)
		{ after(grammarAccess.getPropertyReferenceAccess().getComponentComponentClassifierCrossReference_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyReference__CpnameAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyReferenceAccess().getCpnamePropertyCrossReference_2_2_0()); }
		(
			{ before(grammarAccess.getPropertyReferenceAccess().getCpnamePropertyQCLREFParserRuleCall_2_2_0_1()); }
			ruleQCLREF
			{ after(grammarAccess.getPropertyReferenceAccess().getCpnamePropertyQCLREFParserRuleCall_2_2_0_1()); }
		)
		{ after(grammarAccess.getPropertyReferenceAccess().getCpnamePropertyCrossReference_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyReference__FieldAssignment_2_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyReferenceAccess().getFieldPropertyFieldParserRuleCall_2_3_0()); }
		rulePropertyField
		{ after(grammarAccess.getPropertyReferenceAccess().getFieldPropertyFieldParserRuleCall_2_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyField__IndexAssignment_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyFieldAccess().getIndexNUMBERTerminalRuleCall_0_1_0_0()); }
		RULE_NUMBER
		{ after(grammarAccess.getPropertyFieldAccess().getIndexNUMBERTerminalRuleCall_0_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyField__VariableAssignment_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyFieldAccess().getVariableVariableCrossReference_0_1_1_0()); }
		(
			{ before(grammarAccess.getPropertyFieldAccess().getVariableVariableIDTerminalRuleCall_0_1_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getPropertyFieldAccess().getVariableVariableIDTerminalRuleCall_0_1_1_0_1()); }
		)
		{ after(grammarAccess.getPropertyFieldAccess().getVariableVariableCrossReference_0_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyField__PfAssignment_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyFieldAccess().getPfIDTerminalRuleCall_1_1_0_0()); }
		RULE_ID
		{ after(grammarAccess.getPropertyFieldAccess().getPfIDTerminalRuleCall_1_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyField__UpperAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyFieldAccess().getUpperUpper_boundKeyword_1_1_1_0()); }
		(
			{ before(grammarAccess.getPropertyFieldAccess().getUpperUpper_boundKeyword_1_1_1_0()); }
			'upper_bound'
			{ after(grammarAccess.getPropertyFieldAccess().getUpperUpper_boundKeyword_1_1_1_0()); }
		)
		{ after(grammarAccess.getPropertyFieldAccess().getUpperUpper_boundKeyword_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyField__LowerAssignment_1_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyFieldAccess().getLowerLower_boundKeyword_1_1_2_0()); }
		(
			{ before(grammarAccess.getPropertyFieldAccess().getLowerLower_boundKeyword_1_1_2_0()); }
			'lower_bound'
			{ after(grammarAccess.getPropertyFieldAccess().getLowerLower_boundKeyword_1_1_2_0()); }
		)
		{ after(grammarAccess.getPropertyFieldAccess().getLowerLower_boundKeyword_1_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitName__LongnameAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnitNameAccess().getLongnameIDTerminalRuleCall_0_1_0()); }
		RULE_ID
		{ after(grammarAccess.getUnitNameAccess().getLongnameIDTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitName__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnitNameAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getUnitNameAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitFormula__TopAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnitFormulaAccess().getTopUnitNameCrossReference_0_0_0()); }
		(
			{ before(grammarAccess.getUnitFormulaAccess().getTopUnitNameIDTerminalRuleCall_0_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getUnitFormulaAccess().getTopUnitNameIDTerminalRuleCall_0_0_0_1()); }
		)
		{ after(grammarAccess.getUnitFormulaAccess().getTopUnitNameCrossReference_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitFormula__SlashAssignment_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnitFormulaAccess().getSlashSolidusKeyword_0_1_0_0()); }
		(
			{ before(grammarAccess.getUnitFormulaAccess().getSlashSolidusKeyword_0_1_0_0()); }
			'/'
			{ after(grammarAccess.getUnitFormulaAccess().getSlashSolidusKeyword_0_1_0_0()); }
		)
		{ after(grammarAccess.getUnitFormulaAccess().getSlashSolidusKeyword_0_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitFormula__BottomAssignment_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnitFormulaAccess().getBottomUnitNameCrossReference_0_1_1_0()); }
		(
			{ before(grammarAccess.getUnitFormulaAccess().getBottomUnitNameIDTerminalRuleCall_0_1_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getUnitFormulaAccess().getBottomUnitNameIDTerminalRuleCall_0_1_1_0_1()); }
		)
		{ after(grammarAccess.getUnitFormulaAccess().getBottomUnitNameCrossReference_0_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitFormula__SlashAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnitFormulaAccess().getSlashSolidusKeyword_1_0_0()); }
		(
			{ before(grammarAccess.getUnitFormulaAccess().getSlashSolidusKeyword_1_0_0()); }
			'/'
			{ after(grammarAccess.getUnitFormulaAccess().getSlashSolidusKeyword_1_0_0()); }
		)
		{ after(grammarAccess.getUnitFormulaAccess().getSlashSolidusKeyword_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitFormula__BottomAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnitFormulaAccess().getBottomUnitNameCrossReference_1_1_0()); }
		(
			{ before(grammarAccess.getUnitFormulaAccess().getBottomUnitNameIDTerminalRuleCall_1_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getUnitFormulaAccess().getBottomUnitNameIDTerminalRuleCall_1_1_0_1()); }
		)
		{ after(grammarAccess.getUnitFormulaAccess().getBottomUnitNameCrossReference_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RootDeclaration__BaseAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRootDeclarationAccess().getBaseBaseKeyword_0_0_0()); }
		(
			{ before(grammarAccess.getRootDeclarationAccess().getBaseBaseKeyword_0_0_0()); }
			'base'
			{ after(grammarAccess.getRootDeclarationAccess().getBaseBaseKeyword_0_0_0()); }
		)
		{ after(grammarAccess.getRootDeclarationAccess().getBaseBaseKeyword_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RootDeclaration__FormulaAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRootDeclarationAccess().getFormulaUnitFormulaParserRuleCall_0_1_0()); }
		ruleUnitFormula
		{ after(grammarAccess.getRootDeclarationAccess().getFormulaUnitFormulaParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RootDeclaration__KindWordsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRootDeclarationAccess().getKindWordsIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getRootDeclarationAccess().getKindWordsIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RootDeclaration__UnitNameAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRootDeclarationAccess().getUnitNameUnitNameParserRuleCall_4_0()); }
		ruleUnitName
		{ after(grammarAccess.getRootDeclarationAccess().getUnitNameUnitNameParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RootDeclaration__FactorsAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRootDeclarationAccess().getFactorsUnitFactorParserRuleCall_5_0()); }
		ruleUnitFactor
		{ after(grammarAccess.getRootDeclarationAccess().getFactorsUnitFactorParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitExtension__RootAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnitExtensionAccess().getRootUnitNameCrossReference_1_0()); }
		(
			{ before(grammarAccess.getUnitExtensionAccess().getRootUnitNameIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getUnitExtensionAccess().getRootUnitNameIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getUnitExtensionAccess().getRootUnitNameCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitExtension__FactorsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnitExtensionAccess().getFactorsUnitFactorParserRuleCall_2_0()); }
		ruleUnitFactor
		{ after(grammarAccess.getUnitExtensionAccess().getFactorsUnitFactorParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitFactor__UnitAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnitFactorAccess().getUnitUnitNameParserRuleCall_1_0()); }
		ruleUnitName
		{ after(grammarAccess.getUnitFactorAccess().getUnitUnitNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitFactor__OpAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnitFactorAccess().getOpMulDivParserRuleCall_2_0()); }
		ruleMulDiv
		{ after(grammarAccess.getUnitFactorAccess().getOpMulDivParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitFactor__FactorAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnitFactorAccess().getFactorPositiveNumberParserRuleCall_3_0()); }
		rulePositiveNumber
		{ after(grammarAccess.getUnitFactorAccess().getFactorPositiveNumberParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Quantity__NumberAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQuantityAccess().getNumberANumberParserRuleCall_0_0()); }
		ruleANumber
		{ after(grammarAccess.getQuantityAccess().getNumberANumberParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Quantity__UnitAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQuantityAccess().getUnitUnitNameCrossReference_1_0_0()); }
		(
			{ before(grammarAccess.getQuantityAccess().getUnitUnitNameIDTerminalRuleCall_1_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getQuantityAccess().getUnitUnitNameIDTerminalRuleCall_1_0_0_1()); }
		)
		{ after(grammarAccess.getQuantityAccess().getUnitUnitNameCrossReference_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Quantity__ScalarAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQuantityAccess().getScalarScalarKeyword_1_1_0()); }
		(
			{ before(grammarAccess.getQuantityAccess().getScalarScalarKeyword_1_1_0()); }
			'scalar'
			{ after(grammarAccess.getQuantityAccess().getScalarScalarKeyword_1_1_0()); }
		)
		{ after(grammarAccess.getQuantityAccess().getScalarScalarKeyword_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Quantity__WholeAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQuantityAccess().getWholeWholeKeyword_1_2_0()); }
		(
			{ before(grammarAccess.getQuantityAccess().getWholeWholeKeyword_1_2_0()); }
			'whole'
			{ after(grammarAccess.getQuantityAccess().getWholeWholeKeyword_1_2_0()); }
		)
		{ after(grammarAccess.getQuantityAccess().getWholeWholeKeyword_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_SL_COMMENT : '--' ~(('\n'|'\r'))* ('\r'? '\n')?;

fragment RULE_DIGIT : '0'..'9';

RULE_NUMBER : '-'? RULE_DIGIT+ ('.' RULE_DIGIT+ ('e' '-'? RULE_DIGIT+)?)? ('i' '-'? RULE_DIGIT+ ('.' RULE_DIGIT+ ('e' '-'? RULE_DIGIT+)?)?)?;

fragment RULE_LETTER : ('a'..'z'|'A'..'Z');

RULE_STRING : '"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\\')|~(('\\'|'"')))* '"';

RULE_ID : RULE_LETTER ('_'? (RULE_LETTER|'0'..'9'))*;

RULE_DOTDOT : '..';

RULE_COMMADOT : ',.';

RULE_DOTCOMMA : '.,';

RULE_COMMACOMMA : ',,';
